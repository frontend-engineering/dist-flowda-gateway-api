{"version":3,"file":"main.js","mappings":"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","sources":["webpack://@flowda-projects/flowda-gateway-api/./src/app/app.controller.ts","webpack://@flowda-projects/flowda-gateway-api/./src/app/app.module.ts","webpack://@flowda-projects/flowda-gateway-api/./src/loadModule.ts","webpack://@flowda-projects/flowda-gateway-api/./src/services/services.module.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/axios.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/flowda-gateway-env.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/flowdaGatewayTrpcServer.module.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/index.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/trpc-client.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/trpc/hello.router.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/trpc/hello.utils.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/trpc/trpc.context.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/trpc/trpc.router.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/trpc/trpc.service.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/flowdaShared.module.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/index.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/services/data/data.service.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/services/schema/dynamicTableSchemaTransformer.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/services/schema/legacySchemaService.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/services/schema/meta.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/services/schema/prismaSchema.service.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/services/schema/prismaUtils.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/services/schema/schema.service.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/services/schema/schemaTransformer.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/utils/ag-grid-utils.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/utils/browser-log-utils.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/utils/custom-error.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/utils/dayjs-utils.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/utils/matchPath.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/common/src/utils/schema-utils.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/types/src/index.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/types/src/symbols.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/types/src/types.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/types/src/zod-utils.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/types/src/zods-wms.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/types/src/zods.ts","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"@flowda/schema\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"@flowda/types\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"@nestjs/common\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"@nestjs/core\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"@trpc/client\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"@trpc/server\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"@trpc/server/adapters/express\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"axios\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"consola\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"dayjs\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"dayjs/plugin/advancedFormat\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"dayjs/plugin/timezone\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"dayjs/plugin/utc\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"http-proxy-middleware\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"inversify\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"jsonwebtoken\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"lodash\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"nestjs-zod\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"passport-jwt\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"pluralize\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"qs\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"radash\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"tslib\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"znv\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"zod\"","webpack://@flowda-projects/flowda-gateway-api/webpack/bootstrap","webpack://@flowda-projects/flowda-gateway-api/./src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common'\n\n@Controller('/apps')\nexport class AppController {\n  constructor() {}\n\n  @Get('/__hi')\n  async hi() {\n    return {\n      hi: 'flowda-gateway-api',\n    }\n  }\n}\n","import { Module } from '@nestjs/common'\nimport { APP_PIPE } from '@nestjs/core'\n\nimport { AppController } from './app.controller'\nimport { ServicesModule } from '../services/services.module'\nimport { ZodValidationPipe } from 'nestjs-zod'\n\n@Module({\n  imports: [ServicesModule],\n  controllers: [AppController],\n  providers: [\n    // todo 需要网关特有的 ExceptionFilter\n    // {\n    //   provide: APP_FILTER,\n    //   useClass: AppExceptionFilter,\n    // },\n    {\n      provide: APP_PIPE,\n      useClass: ZodValidationPipe,\n    },\n  ],\n})\nexport class AppModule {}\n","/* eslint-disable @typescript-eslint/no-var-requires */\n\nimport { interfaces } from 'inversify'\nimport { FLOWDA_GATEWAY_ENV, flowdaGatewayTrpcServerModule } from '@flowda-projects/flowda-gateway-trpc-server'\nimport { Logger, LoggerService } from '@nestjs/common'\n\nconsole.log('---------- ENV --------------')\nObject.keys(FLOWDA_GATEWAY_ENV).forEach(k => console.log(k, FLOWDA_GATEWAY_ENV[k]))\nconsole.log('---------- ENV --------------')\n\nexport function loadModule(container: interfaces.Container) {\n  container.load(flowdaGatewayTrpcServerModule)\n  container.bind<interfaces.Factory<LoggerService>>('Factory<Logger>').toFactory<LoggerService, [string]>(context => {\n    return name => {\n      return new Logger(name)\n    }\n  })\n}\n","import { Global, Module } from '@nestjs/common'\nimport { Container } from 'inversify'\nimport { getServices } from '@flowda/schema'\nimport { loadModule } from '../loadModule'\n\nexport const servicesContainer = new Container()\nloadModule(servicesContainer)\n\nconst services = getServices(servicesContainer)\n\n@Global()\n@Module({\n  providers: services,\n  exports: services,\n})\nexport class ServicesModule {\n  constructor() {}\n}\n","import axios from 'axios'\nimport * as qs from 'qs'\nimport consola from 'consola'\n\nexport const axiosApiInstance = axios.create()\n\naxiosApiInstance.interceptors.request.use(\n  async config => {\n    if (config.url == null) return config\n    console.info(`url        :`, config.url)\n    const [path, qstr] = config.url.split('?')\n    consola.info(`request : ${config.method} ${path}`)\n    consola.info(`query   : `)\n    console.log(JSON.stringify(qs.parse(qstr)))\n    consola.info(`data    : `)\n    console.log(JSON.stringify(config.data))\n    return config\n  },\n  error => {\n    Promise.reject(error)\n  },\n)\n\naxiosApiInstance.interceptors.response.use(\n  response => {\n    consola.info(`response: ${response.config.url}`)\n    console.log(JSON.stringify(response.data))\n    return response\n  },\n  async function (error) {\n    // console.error(error)\n    return Promise.reject(error)\n  },\n)\n","import { parseEnv } from 'znv'\nimport { z } from 'zod'\n\nexport const FLOWDA_GATEWAY_ENV = parseEnv(process.env, {\n  ACCESS_TOKEN_SECRET: z.string().min(1),\n  FLOWDA_URL: z.string().min(1),\n  CMS_ADMIN_URL: z.string().min(1),\n  YONGCHENG_URL: z.string().min(1),\n  TIANBAO_URL: z.string().min(1),\n  C7_REST_URL: z.string().min(1),\n})\n","import { ContainerModule } from 'inversify'\nimport { bindService } from '@flowda/schema'\nimport { TrpcService } from './trpc/trpc.service'\nimport { TrpcRouter } from './trpc/trpc.router'\nimport { ContextFactory } from './trpc/trpc.context'\nimport { GatewayRegister, HelloRouter } from './trpc/hello.router'\nimport { AxiosInstanceSymbol, GatewayRegisterSymbol } from '@flowda-projects/flowda-shared-types'\nimport { FLOWDA_GATEWAY_ENV } from './flowda-gateway-env'\nimport { AxiosInstance } from 'axios'\nimport { axiosApiInstance } from './axios'\n\nexport const flowdaGatewayTrpcServerModule = new ContainerModule(bind => {\n  bind<AxiosInstance>(AxiosInstanceSymbol).toConstantValue(axiosApiInstance)\n  bind<GatewayRegister>(GatewayRegisterSymbol)\n    .to(GatewayRegister)\n    .inSingletonScope()\n    .onActivation((context, injectable) => {\n      injectable.register([\n        {\n          id: 'superadmin',\n          name: '基础服务',\n          trpcEndpoint: `${FLOWDA_GATEWAY_ENV.FLOWDA_URL}/flowda-api/trpc`,\n        },\n        {\n          id: 'cms_admin',\n          name: 'CMS 管理后台',\n          trpcEndpoint: `${FLOWDA_GATEWAY_ENV.CMS_ADMIN_URL}/cms-admin-api/trpc`,\n        },\n        {\n          id: 'ycdev',\n          name: '永成测试',\n          trpcEndpoint: `${FLOWDA_GATEWAY_ENV.YONGCHENG_URL}/yongcheng-api/trpc`,\n        },\n        {\n          id: 'tianbao_uat',\n          name: '天宝UAT',\n          trpcEndpoint: `${FLOWDA_GATEWAY_ENV.TIANBAO_URL}/api/trpc`,\n        },\n      ])\n      return injectable\n    })\n  bind(TrpcService).toSelf().inSingletonScope()\n  bind(ContextFactory).toSelf().inSingletonScope()\n  bind(HelloRouter).toSelf().inSingletonScope()\n  bindService(bind, TrpcRouter)\n})\n","export * from './flowdaGatewayTrpcServer.module'\nexport * from './trpc/trpc.router'\nexport * from './flowda-gateway-env'\n","import { createTRPCProxyClient, httpBatchLink } from '@trpc/client'\nimport type { AppRouter as FlowdaAppRouter } from '@flowda-projects/flowda-services-trpc-server'\nimport { FLOWDA_GATEWAY_ENV } from './flowda-gateway-env'\n\nexport const flowdaTrpc = createTRPCProxyClient<FlowdaAppRouter>({\n  links: [\n    httpBatchLink({\n      url: `${FLOWDA_GATEWAY_ENV.FLOWDA_URL}/flowda-api/trpc`,\n      async headers() {\n        return {\n          'x-from': 'flowda-gateway',\n        }\n      },\n    }),\n  ],\n  transformer: {\n    input: {\n      // on client\n      serialize: object => object,\n      // on server -> resolver\n      deserialize: object => object,\n    },\n    output: {\n      // on server -> client\n      serialize: object => object,\n      // on client\n      deserialize: object => object,\n    },\n  },\n})\n","import { inject, injectable } from 'inversify'\nimport { TrpcService } from './trpc.service'\nimport type { LoggerService } from '@nestjs/common'\nimport { z } from 'zod'\nimport { flowdaTrpc } from '../trpc-client'\nimport { AxiosInstanceSymbol, GatewayRegisterSymbol } from '@flowda-projects/flowda-shared-types'\nimport { convertSortAgToMotor } from '@flowda-projects/flowda-shared-common'\nimport { convertMenuToTheia } from './hello.utils'\nimport {\n  findManyResourceDataInputSchema,\n  findUniqueResourceDataInputSchema,\n  getResourceDataInputSchema,\n  getResourceInputSchema,\n  postResourceDataInputSchema,\n  putResourceDataInputSchema,\n  removeResourceDataInputSchema,\n} from '@flowda/types'\nimport type { AxiosInstance } from 'axios'\n\ntype Service = {\n  /**\n   * @description 对应租户名称\n   */\n  id: string\n  name: string\n  trpcEndpoint: string\n}\n\n@injectable()\nexport class GatewayRegister {\n  private readonly logger\n\n  constructor(@inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService) {\n    this.logger = loggerFactory(HelloRouter.name)\n  }\n\n  register(serv: Service | Service[]) {\n    if (Array.isArray(serv)) {\n      serv.forEach(s => this.registerItem(s))\n    } else {\n      this.registerItem(serv)\n    }\n  }\n\n  private registerItem(serv: Service) {\n    if (this._services.find(s => s.id === serv.id)) {\n      this.logger.warn(`service ${serv.id} is already registered`)\n      return\n    }\n    this._services.push(serv)\n  }\n\n  private _services: Service[] = []\n\n  get services() {\n    return this._services\n  }\n\n  getTrpc(serviceId: string) {\n    const serv = this._services.find(s => s.id === serviceId)\n    if (!serv) throw new Error(`Not found ${serviceId}`)\n    return serv\n  }\n}\n\n@injectable()\nexport class HelloRouter {\n  private readonly logger\n\n  constructor(\n    @inject(TrpcService) private trpc: TrpcService,\n    @inject(AxiosInstanceSymbol) private axios: AxiosInstance,\n    @inject(GatewayRegisterSymbol) private gatewayRegister: GatewayRegister,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(HelloRouter.name)\n  }\n\n  helloRouter = this.trpc.router({\n    validate: this.trpc.procedure\n      .input(\n        z.object({\n          username: z.string(),\n          password: z.string(),\n        }),\n      )\n      .mutation(async ({ input }) => {\n        const ret = await flowdaTrpc.user.validate.mutate(input)\n        return ret\n      }),\n\n    createRoot: this.trpc.procedure.input(z.any()).query(async opts => {\n      const services = this.gatewayRegister.services.map(v => {\n        const { trpcEndpoint, ...rest } = v\n        return {\n          ...rest,\n          selected: false,\n          expanded: false,\n          children: [],\n        }\n      })\n      return {\n        id: 'WorkspaceNodeId',\n        name: 'WorkspaceNode',\n        visible: false,\n        children: services,\n      }\n    }),\n\n    resolveChildren: this.trpc.protectedProcedure.input(z.object({ pid: z.string() })).query(async opts => {\n      const [tenantName, parentId] = opts.input.pid.split('.')\n      const menuData = await flowdaTrpc.menu.getMenuByTenantName.query({ tenantName })\n      return convertMenuToTheia({\n        tenantName,\n        parentId,\n        menuData,\n      })\n    }),\n\n    getResourceSchema: this.trpc.protectedProcedure.input(getResourceInputSchema).query(async ({ input, ctx }) => {\n      const service = this.gatewayRegister.getTrpc(input.tenant)\n      // const schemaCache = await service.trpc.schema.getSchemaCache.query({})\n      const schemaCacheRes = await this.axios.request({\n        url: `${service.trpcEndpoint}/schema.getSchemaCache?input={}`,\n        method: 'get',\n      })\n      const theSchema = schemaCacheRes.data.result.data[input.schemaName]\n      theSchema.namespace = input.tenant\n      return theSchema\n    }),\n\n    getResourceData: this.trpc.protectedProcedure.input(getResourceDataInputSchema).query(async ({ input, ctx }) => {\n      const theSchema = await this.getSchema(input.tenant, input.schemaName)\n      const uniqParam = findUniqueResourceDataInputSchema.safeParse(input)\n      const manyParam = findManyResourceDataInputSchema.safeParse(input)\n      let query: any\n      let path: string\n      if (uniqParam.success) {\n        path = `${theSchema.slug!}/${uniqParam.data.id}`\n        query = {}\n      } else if (manyParam.success) {\n        path = theSchema.slug!\n        query = {\n          pageSize: manyParam.data.pageSize,\n          current: manyParam.data.current,\n          sort: convertSortAgToMotor(manyParam.data.sort),\n          filterModel: manyParam.data.filterModel,\n        }\n      } else {\n        throw new Error(`getResourceData input parse error`)\n      }\n\n      const service = this.gatewayRegister.getTrpc(input.tenant)\n      // return service.trpc.data.get.query({\n      //   user: ctx.user,\n      //   path,\n      //   query,\n      // })\n      const res = await this.axios.request({\n        method: 'get',\n        url: `${service.trpcEndpoint}/data.get?input=${encodeURIComponent(\n          JSON.stringify({\n            user: ctx.user,\n            path,\n            query,\n          }),\n        )}`,\n      })\n      return res.data.result.data\n    }),\n\n    putResourceData: this.trpc.protectedProcedure.input(putResourceDataInputSchema).mutation(async ({ input, ctx }) => {\n      const theSchema = await this.getSchema(input.tenant, input.schemaName)\n      const path = `${theSchema.slug!}/${input.id}`\n      const service = this.gatewayRegister.getTrpc(input.tenant)\n      // return service.trpc.data.put.mutate({\n      //   user: ctx.user,\n      //   path,\n      //   values: input.updatedValue,\n      // })\n      const res = await this.axios.request({\n        method: 'post',\n        url: `${service.trpcEndpoint}/data.put`,\n        data: {\n          user: ctx.user,\n          path,\n          value: input.updatedValue,\n        },\n      })\n      return res.data.result.data\n    }),\n\n    postResourceData: this.trpc.protectedProcedure\n      .input(postResourceDataInputSchema)\n      .mutation(async ({ input, ctx }) => {\n        const theSchema = await this.getSchema(input.tenant, input.schemaName)\n        const path = `${theSchema.slug!}`\n        const service = this.gatewayRegister.getTrpc(input.tenant)\n        const res = await this.axios.request({\n          method: 'post',\n          url: `${service.trpcEndpoint}/data.post`,\n          data: {\n            user: ctx.user,\n            path,\n            value: input.value,\n          },\n        })\n        return res.data.result.data\n      }),\n\n    removeResourceData: this.trpc.protectedProcedure\n      .input(removeResourceDataInputSchema)\n      .mutation(async ({ input, ctx }) => {\n        const theSchema = await this.getSchema(input.tenant, input.schemaName)\n        const path = `${theSchema.slug!}/${input.id}`\n        const service = this.gatewayRegister.getTrpc(input.tenant)\n        const res = await this.axios.request({\n          method: 'post',\n          url: `${service.trpcEndpoint}/data.remove`,\n          data: {\n            user: ctx.user,\n            path,\n          },\n        })\n        return res.data.result.data\n      }),\n  })\n\n  async getSchema(tenantName: string, schemaName: string) {\n    const service = this.gatewayRegister.getTrpc(tenantName)\n    // const schemaCache = await service.trpc.schema.getSchemaCache.query({})\n    const schemaCacheRes = await this.axios.request({\n      url: `${service.trpcEndpoint}/schema.getSchemaCache?input={}`,\n      method: 'get',\n    })\n    return schemaCacheRes.data.result.data[schemaName]\n  }\n}\n","import { menuItemSchemaDto } from '@flowda-projects/flowda-shared-types'\nimport { toSchemaName } from '@flowda-projects/flowda-shared-common'\n\nexport function mapMenuItemToTheiaMenu(input: { tenantName: string; menuItem: menuItemSchemaDto }) {\n  const { tenantName, menuItem } = input\n  return {\n    id: `${tenantName}.${menuItem.slug}`,\n    name: menuItem.name,\n    selected: false,\n    uri:\n      Array.isArray(menuItem.children) && menuItem.children.length > 0\n        ? undefined\n        : `grid://${tenantName}?schemaName=${toSchemaName(menuItem.slug)}&displayName=${menuItem.name}`,\n    expanded: Array.isArray(menuItem.children) && menuItem.children.length > 0 ? false : undefined,\n    children: Array.isArray(menuItem.children) && menuItem.children.length > 0 ? [] : undefined,\n  }\n}\n\nexport function convertMenuToTheia(input: {\n  tenantName: string\n  parentId: string | undefined\n  menuData: menuItemSchemaDto[]\n}) {\n  const { tenantName, parentId, menuData } = input\n  if (parentId == null /* 一级菜单 */) {\n    const ret = menuData.map(item => {\n      return mapMenuItemToTheiaMenu({ tenantName, menuItem: item })\n    })\n    return ret\n  } else {\n    let ret\n    menuData.forEach(menuItem =>\n      traverse(menuItem, item => {\n        if (item.slug === parentId) {\n          if (Array.isArray(item.children)) {\n            ret = item.children.map(child => mapMenuItemToTheiaMenu({ tenantName, menuItem: child }))\n          }\n        }\n      }),\n    )\n    return ret\n  }\n}\n\nexport function traverse(tree: menuItemSchemaDto, visit: (item: menuItemSchemaDto) => void) {\n  visit(tree)\n  if (tree.children && Array.isArray(tree.children) && tree.children.length > 0) {\n    tree.children?.forEach(child => {\n      traverse(child, visit)\n    })\n  }\n}\n","import * as trpcExpress from '@trpc/server/adapters/express'\nimport { inject, injectable } from 'inversify'\nimport { LoggerService } from '@nestjs/common'\nimport { createContext, diag } from '@flowda/schema'\n\n@injectable()\nexport class ContextFactory {\n  private readonly logger\n\n  constructor(@inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService) {\n    this.logger = loggerFactory(ContextFactory.name)\n  }\n\n  createContext = async (opts: trpcExpress.CreateExpressContextOptions) => {\n    const ctx = createContext(opts)\n    diag(ctx, `[createContext]`)\n    return ctx\n  }\n}\n\nexport type Context = Awaited<ReturnType<typeof ContextFactory.prototype.createContext>>\n","import { inject, injectable } from 'inversify'\nimport { TrpcService } from './trpc.service'\nimport type { INestApplication, LoggerService } from '@nestjs/common'\nimport * as trpcExpress from '@trpc/server/adapters/express'\nimport { ContextFactory } from './trpc.context'\nimport { HelloRouter } from './hello.router'\n\n// import { createOpenApiExpressMiddleware } from 'trpc-openapi'\n\n@injectable()\nexport class TrpcRouter {\n  private readonly logger\n\n  constructor(\n    @inject(TrpcService) private trpc: TrpcService,\n    @inject(HelloRouter) private helloRouter: HelloRouter,\n    @inject(ContextFactory) private contextFactory: ContextFactory,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(TrpcRouter.name)\n  }\n\n  appRouter = this.trpc.router({\n    hello: this.helloRouter.helloRouter,\n  })\n\n  applyMiddleware(app: INestApplication, globalPrefix: string) {\n    this.logger.log(`applyMiddleware ${globalPrefix}/trpc`)\n    // app.use(`/${globalPrefix}/trpc-api`, createOpenApiExpressMiddleware({ router: this.appRouter }))\n    app.use(\n      `/${globalPrefix}/trpc`,\n      trpcExpress.createExpressMiddleware({\n        router: this.appRouter,\n        createContext: this.contextFactory.createContext,\n      }),\n    )\n  }\n}\n\nexport type AppRouter = TrpcRouter[`appRouter`]\n","import { initTRPC, TRPCError } from '@trpc/server'\nimport { inject, injectable } from 'inversify'\nimport { Context } from './trpc.context'\nimport { LoggerService } from '@nestjs/common'\nimport { diag, errorFormatter, transformer } from '@flowda/schema'\nimport { flowdaTrpc } from '../trpc-client'\nimport { ctxUserSchema } from '@flowda/types'\n\n// import { OpenApiMeta } from 'trpc-openapi'\n\n@injectable()\nexport class TrpcService {\n  private readonly logger\n\n  constructor(@inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService) {\n    this.logger = loggerFactory(TrpcService.name)\n  }\n\n  trpc = initTRPC\n    .context<Context>()\n    // .meta<OpenApiMeta>()\n    .create({\n      transformer: transformer,\n      errorFormatter: errorFormatter,\n    })\n\n  procedure = this.trpc.procedure\n\n  protectedProcedure = this.trpc.procedure.use(async function (opts) {\n    const ctx = opts.ctx\n    diag(ctx, `[protectedProcedure]`)\n    let user\n    const at = processAt(ctx.req.headers.authorization)\n    diag(ctx, `processAt`, { at })\n    if (at) {\n      try {\n        const payload = await flowdaTrpc.user.verifyAccessToken.query({ jwt: at })\n        diag(ctx, `flowdaTrpc.user.verifyAccessToken`, payload)\n        const userRet = await flowdaTrpc.user.findUnique.query({ id: payload['uid'] })\n        user = ctxUserSchema.parse(userRet)\n      } catch (e) {\n        diag(ctx, `flowdaTrpc.user.verifyAccessToken`, e)\n      }\n    }\n    if (!user) {\n      throw new TRPCError({ code: 'UNAUTHORIZED' })\n    }\n    ctx.user = user\n    return opts.next({ ctx })\n  })\n\n  router = this.trpc.router\n  mergeRouters = this.trpc.mergeRouters\n}\n\nexport function processAt(input: any) {\n  if (typeof input !== 'string') return undefined\n  if (input.split(' ')[1] == null) return undefined\n  let ret = input.split(' ')[1]\n  if (ret.trim() === '') return undefined\n  ret = ret.trim()\n  if (ret === 'undefined' || ret === 'null') return undefined\n  return ret\n}\n","import { ContainerModule, interfaces } from 'inversify'\nimport { z } from 'zod'\n\nimport {\n  DataServiceSymbol,\n  DynamicTableSchemaTransformerSymbol,\n  LegacySchemaServiceSymbol,\n  PrismaSchemaServiceSymbol,\n  PrismaUtilsSymbol,\n  SchemaServiceSymbol,\n  SchemaTransformerSymbol,\n} from '@flowda-projects/flowda-shared-types'\nimport { PrismaSchemaService } from './services/schema/prismaSchema.service'\nimport { DataService } from './services/data/data.service'\nimport { LegacySchemaService } from './services/schema/legacySchemaService'\nimport { SchemaTransformer } from './services/schema/schemaTransformer'\nimport { PrismaUtils } from './services/schema/prismaUtils'\nimport { bindServiceSymbol } from '@flowda/schema'\nimport { DynamicTableSchemaTransformer } from './services/schema/dynamicTableSchemaTransformer'\nimport { SchemaService } from './services/schema/schema.service'\n\nexport const flowdaSharedModule = new ContainerModule((bind: interfaces.Bind) => {\n  bindServiceSymbol(bind, DataServiceSymbol, DataService)\n  bindServiceSymbol(bind, LegacySchemaServiceSymbol, LegacySchemaService)\n\n  bind(SchemaServiceSymbol).to(SchemaService).inSingletonScope()\n\n  bind<PrismaSchemaService>(PrismaSchemaServiceSymbol).to(PrismaSchemaService).inSingletonScope()\n  bind<PrismaUtils>(PrismaUtilsSymbol).to(PrismaUtils).inSingletonScope()\n\n  bind<SchemaTransformer>(SchemaTransformerSymbol).to(SchemaTransformer).inTransientScope()\n  bind<interfaces.Factory<SchemaTransformer>>('Factory<SchemaTransformer>').toFactory<SchemaTransformer, [any]>(\n    context => {\n      return (z: z.AnyZodObject) => {\n        const transformer = context.container.get<SchemaTransformer>(SchemaTransformerSymbol)\n        transformer.setZodType(z)\n        return transformer\n      }\n    },\n  )\n  bind<DynamicTableSchemaTransformer>(DynamicTableSchemaTransformerSymbol)\n    .to(DynamicTableSchemaTransformer)\n    .inTransientScope()\n})\n","export { DataServiceSymbol, SchemaServiceSymbol } from '@flowda-projects/flowda-shared-types'\n\nexport * from './flowdaShared.module'\nexport * from './utils/matchPath'\nexport * from './utils/browser-log-utils'\nexport * from './utils/ag-grid-utils'\nexport * from './utils/schema-utils'\nexport * from './utils/custom-error'\nexport * from './utils/dayjs-utils'\n\nexport * from './services/schema/meta'\nexport * from './services/schema/schemaTransformer'\nexport * from './services/schema/dynamicTableSchemaTransformer'\nexport * from './services/schema/legacySchemaService'\nexport * from './services/schema/schema.service'\nexport * from './services/data/data.service'\n","import { inject, injectable } from 'inversify'\nimport * as _ from 'radash'\nimport { lowerFirst } from 'lodash'\nimport type { LoggerService } from '@nestjs/common'\nimport type { PrismaSchemaService } from '../schema/prismaSchema.service'\nimport { PrismaClientSymbol } from '@flowda/types'\nimport { PrismaSchemaServiceSymbol } from '@flowda-projects/flowda-shared-types'\n// import * as db from '@prisma/client-cms_admin'\n\n/*\ntodo: 增加 reference_type 区分是如何做 nest\ne.g. Customer#weixinProfile 和 Order#customerId 的 nest 查询有区别\n */\n@injectable()\nexport class DataService {\n  private readonly logger\n\n  constructor(\n    // todo: prisma 要不要强类型\n    // @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject(PrismaClientSymbol) private prisma: any,\n    @inject(PrismaSchemaServiceSymbol) private prismaSchemaService: PrismaSchemaService,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(DataService.name)\n  }\n\n  async get(reqUser: any, pathname: string, query: Record<string, any>) {\n    this.logger.log(`get(reqUser ${JSON.stringify(reqUser)}, path: ${pathname}, query: ${JSON.stringify(query)})`)\n    const findParamRet = await this.prismaSchemaService.toFindParam(pathname, query)\n    if (_.isEmpty(findParamRet)) {\n      return {}\n    }\n    const { resource, action, param } = findParamRet\n    if (action === 'findUnique') {\n      const ret = await this.prisma[resource][action](param)\n      if (!ret || ret.isDeleted) return {}\n      return _.omit(ret, ['isDeleted']) as any\n    }\n    if (action === 'findMany') {\n      const [data, count] = await this.prisma.$transaction([\n        this.prisma[resource][action](param),\n        this.prisma[resource].count({ where: param.where }),\n      ])\n      return {\n        pagination: {\n          total: count,\n        },\n        data,\n      }\n    }\n  }\n\n  async put(reqUser: any, path: string, values: any) {\n    this.logger.log(`put(reqUser ${JSON.stringify(reqUser)}), path: ${path}, values: ${JSON.stringify(values)}`)\n    const updateParamRet = await this.prismaSchemaService.toUpdateParam(path, values)\n    const { resource, param } = updateParamRet\n    const prevRet = await this.prisma[resource].findUnique({\n      where: {\n        id: param.where.id,\n      },\n      select: _.mapValues(param.data, item => true),\n    })\n    const auditChanges = Object.keys(param.data).reduce<Record<string, [string, string]>>((acc, k) => {\n      acc[k] = [prevRet[k], param.data[k]]\n      return acc\n    }, {})\n    const ret = await this.prisma[resource].update(param)\n    const auditInfo = {\n      auditId: param.where.id as number,\n      auditType: resource,\n      userId: JSON.stringify(reqUser['user_id'] || reqUser['uid']), // todo: 暂时兼容 java 和 node\n      username: reqUser['user_name'],\n      action: 'update',\n      auditChanges: JSON.stringify(auditChanges),\n      version: 0,\n    }\n    this.logger.debug!(`audit ${JSON.stringify(auditInfo)}`)\n    try {\n      await this.prisma.audits.create({\n        data: auditInfo,\n      })\n    } catch (e) {\n      this.logger.warn(`audit create failed, ${JSON.stringify(auditInfo)}`)\n    }\n    return ret\n  }\n\n  async post(reqUser: any, path: string, values: any) {\n    this.logger.log(`[post] reqUser ${JSON.stringify(reqUser)}, path: ${path}, query: ${JSON.stringify(values)})`)\n    const createParamRet = await this.prismaSchemaService.toCreateParam(path, values)\n    const { resource, param } = createParamRet\n\n    if (createParamRet['x-unique']) {\n      const ref = createParamRet['x-unique']\n      const refId = values[ref.name!]\n      const refModelName = ref.reference!.model_name\n      const refData = await this.prisma[lowerFirst(refModelName)].findUnique({\n        where: {\n          id: refId,\n        },\n        include: {\n          [resource]: true,\n        },\n      })\n      const id = refData[resource].id\n      const ret = await this.prisma[resource].update({\n        where: {\n          id: id,\n        },\n        data: {\n          ...param.data,\n          ...{\n            isDeleted: false,\n          },\n        },\n      })\n\n      const auditInfo = {\n        auditId: id,\n        auditType: resource,\n        userId: JSON.stringify(reqUser['user_id'] || reqUser['uid']), // todo: 暂时兼容 java 和 node\n        username: reqUser['user_name'],\n        action: 'soft_delete_revert',\n        auditChanges: JSON.stringify(param.data),\n        version: 0,\n      }\n      this.logger.debug!(`audit ${JSON.stringify(auditInfo)}`)\n      try {\n        await this.prisma.audits.create({\n          data: auditInfo,\n        })\n      } catch (e) {\n        this.logger.warn(`audit create failed, ${JSON.stringify(auditInfo)}`)\n      }\n      return ret\n    } else {\n      const ret = await this.prisma[resource].create(param)\n      const auditInfo = {\n        auditId: ret.id,\n        auditType: resource,\n        userId: JSON.stringify(reqUser['user_id'] || reqUser['uid']), // todo: 暂时兼容 java 和 node\n        username: reqUser['user_name'],\n        action: 'create',\n        auditChanges: JSON.stringify(param.data),\n        version: 0,\n      }\n      this.logger.debug!(`audit ${JSON.stringify(auditInfo)}`)\n      try {\n        await this.prisma.audits.create({\n          data: auditInfo,\n        })\n      } catch (e) {\n        this.logger.warn(`audit create failed, ${JSON.stringify(auditInfo)}`)\n      }\n\n      return ret\n    }\n  }\n\n  async remove(reqUser: any, pathname: string) {\n    this.logger.log(`[remove] reqUser ${JSON.stringify(reqUser)}, path: ${pathname}`)\n    const assDelStrategy = await this.prismaSchemaService.getAssociationDeleteStrategy(pathname)\n    const { resource, param } = await this.prismaSchemaService.toRemoveParam(pathname)\n    for (const k of Object.keys(assDelStrategy)) {\n      const ass = assDelStrategy[k]\n      if (ass['x-onSoftDelete'] === 'Restrict') {\n        const ret = await this.prisma[lowerFirst(k)].findMany({\n          where: {\n            isDeleted: false,\n            [ass.name]: param.where.id,\n          },\n        })\n        if (ret.length > 0) {\n          throw new Error(`删除失败, 关联的<${ass.relatedDisplayName}>不为空`)\n        }\n      }\n    }\n\n    const prevRet = await this.prisma[resource].findUnique({\n      where: {\n        id: param.where.id,\n      },\n    })\n    const ret = await this.prisma[resource].update(param)\n\n    const auditInfo = {\n      auditId: param.where.id,\n      auditType: resource,\n      userId: JSON.stringify(reqUser['user_id'] || reqUser['uid']), // todo: 暂时兼容 java 和 node\n      username: reqUser['user_name'],\n      action: 'soft_delete',\n      auditChanges: JSON.stringify(prevRet),\n      version: 0,\n    }\n    this.logger.debug!(`audit ${JSON.stringify(auditInfo)}`)\n    try {\n      await this.prisma.audits.create({\n        data: auditInfo,\n      })\n    } catch (e) {\n      this.logger.warn(`audit create failed, ${JSON.stringify(auditInfo)}`)\n    }\n    return ret\n  }\n}\n","import type { LoggerService } from '@nestjs/common'\nimport { inject, injectable } from 'inversify'\nimport { toModelName, toPath, toSchemaName } from '../../utils/matchPath'\n\n@injectable()\nexport class DynamicTableSchemaTransformer {\n  private readonly logger: LoggerService\n\n  constructor(@inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService) {\n    this.logger = loggerFactory(DynamicTableSchemaTransformer.name)\n  }\n\n  transform(input: any) {\n    const cols = input.dynamicTableDefColumns.map((c: any) => {\n      return Object.assign(\n        {\n          name: c.name,\n          column_type: c.type,\n        },\n        c.extendedSchema,\n      )\n    })\n    return Object.assign(\n      {\n        name: toModelName(input.name),\n        slug: toPath(input.name),\n        schema_name: toSchemaName(input.name),\n        primary_key: 'id',\n        columns: cols,\n        prisma: false,\n        is_dynamic: true,\n      },\n      input.extendedSchema,\n    )\n  }\n}\n","import { z } from 'zod'\nimport { inject, injectable } from 'inversify'\nimport type { LoggerService } from '@nestjs/common'\nimport type { SchemaTransformer } from './schemaTransformer'\nimport { CustomZodSchemaSymbol } from '@flowda/types'\nimport type { IResourceSchema } from '@flowda-projects/flowda-shared-types'\n\n@injectable()\nexport class LegacySchemaService {\n  private readonly logger\n  private schemaCache?: Record<string, IResourceSchema>\n\n  constructor(\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n    @inject('Factory<SchemaTransformer>') private modelSchemaFactory: (z: z.AnyZodObject) => SchemaTransformer,\n    @inject(CustomZodSchemaSymbol) private czt: any,\n  ) {\n    this.logger = loggerFactory(LegacySchemaService.name)\n  }\n\n  getSchema(): Record<string, IResourceSchema> {\n    console.time('generate schema')\n    const schema = Object.keys(this.czt).reduce((acc: any, k) => {\n      const e = this.czt[k]\n      if (['ZodObject'].indexOf(e.constructor.name) > -1) {\n        const transformer = this.modelSchemaFactory(e)\n        acc[k] = transformer.buildSchema().toSchema(k)\n      } else {\n        this.logger.error('Wrong type', k)\n      }\n      return acc\n    }, {})\n    this.schemaCache = schema\n    console.timeEnd('generate schema')\n    return schema\n  }\n\n  async getSchemaCache(): Promise<Record<string, IResourceSchema>> {\n    if (!this.schemaCache) {\n      // 重启的话内存里就没有了，可以手动重新获取下\n      this.logger.log(`schemaCache is empty, getSchema again.`)\n      return this.getSchema()\n    } else {\n      return this.schemaCache\n    }\n  }\n}\n","import { z } from 'zod'\n// motor-admin JSON.parse(document.getElementById('app').dataset.schema)\n// todo: 目前尽量在后端定义，后续可以再开辟一条链路来储存 schema，并进行 merge\n// 当然如果后端定义链路保留，应该做成 decorator\n\nexport function meta(values: any) {\n  return z.unknown().optional().describe(JSON.stringify(values))\n}\n","import { LoggerService } from '@nestjs/common'\nimport { inject, injectable } from 'inversify'\nimport * as qs from 'qs'\nimport { isLikeNumber, matchPath, toModelName } from '../../utils/matchPath'\nimport type { LegacySchemaService } from './legacySchemaService'\nimport { forEach, isUndefined, omitBy, set } from 'lodash'\nimport * as _ from 'radash'\nimport type {\n  IPrismaFilterSchema,\n  IResourceSchema,\n  TAgFilterSchema,\n  TFilterFormValue,\n} from '@flowda-projects/flowda-shared-types'\nimport {\n  agFilter1Schema,\n  agFilter2Schema,\n  LegacySchemaServiceSymbol,\n  PrismaUtilsSymbol,\n} from '@flowda-projects/flowda-shared-types'\nimport type { PrismaUtils } from './prismaUtils'\n\n@injectable()\nexport class PrismaSchemaService {\n  private readonly logger\n\n  constructor(\n    @inject(PrismaUtilsSymbol) private prismaUtils: PrismaUtils,\n    @inject(LegacySchemaServiceSymbol) private schemaService: LegacySchemaService,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(PrismaSchemaService.name)\n  }\n\n  toPrismaSelect(fields: string | undefined, theResourceSchema: IResourceSchema) {\n    let fieldsArr: string[] = []\n    if (fields == null) {\n      fieldsArr = theResourceSchema\n        .columns!.filter(c => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          if (c?.['x-legacy']) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            return c['x-legacy'].prisma !== false\n          }\n\n          return c.prisma !== false\n        })\n        .map(c => c.name!)\n    } else {\n      fieldsArr = fields.split(',')\n    }\n    return fieldsArr.reduce((acc: Record<string, boolean>, cur: string) => {\n      acc[cur] = true\n      return acc\n    }, {})\n  }\n\n  async toFindParam(\n    pathname: string,\n    query: qs.ParsedQs,\n  ): Promise<\n    | {\n        action: 'findUnique' | 'findMany'\n        resource: string\n        param: any\n      }\n    | Record<string, never>\n  > {\n    // if (!query['fields']) {\n    //   throw new Error('No query fields')\n    // }\n\n    this.logger.debug!(`[toFindParam] pathname: ${pathname}, query: ${JSON.stringify(query)}`)\n\n    const parsedPath = matchPath(pathname)\n    if (parsedPath.length === 0) return Promise.resolve({})\n    const last = parsedPath[parsedPath.length - 1]\n\n    const parent = parsedPath[parsedPath.length - 2]\n    // console.log(parent)\n    let lastResource = last.resource\n    let lastResourceSchema = last.resourceSchema\n    const schemaCache = await this.schemaService.getSchemaCache()\n\n    if (parent /* 如果是 association */) {\n      const parentSchema = schemaCache[parent.resourceSchema]\n      const assoRet = parentSchema.associations.find(ass => ass.slug === last.origin)\n      if (assoRet) {\n        lastResourceSchema = assoRet?.schema_name\n        lastResource = _.camel(assoRet.model_name)\n      }\n    }\n    const theResourceSchema = schemaCache[lastResourceSchema]\n\n    let action: 'findUnique' | 'findMany'\n    let param = {}\n\n    const queryFields = query['fields'] as qs.ParsedQs\n    const fields = this.toPrismaSelect(\n      queryFields && (queryFields[lastResource] as string | undefined),\n      theResourceSchema,\n    )\n\n    const include: Record<string, any> = {}\n\n    if (typeof query['include'] === 'string' && query['include'] !== '') {\n      query['include'].split(',').forEach((inc: string) => {\n        // this.logger.log(`[toFindParam] parse include ${inc}`)\n        const refSelect: any = this.getRefSelect(schemaCache, theResourceSchema, inc)\n        const selectRet = this.toPrismaSelect(queryFields[inc] as string, theResourceSchema)\n        include[inc] = {\n          // todo: 似乎 prisma nest select 不支持 order by 只有 include 支持，但是 include 不支持 nest select fields\n          // orderBy: [{ createdAt: 'desc' }],\n          select: { ...selectRet, ...refSelect },\n        }\n      })\n    }\n\n    if (last.id != null) {\n      action = 'findUnique'\n      const id2 = await this.prismaUtils.parseId(lastResource, last.id)\n      param = {\n        where: {\n          id: id2,\n        },\n        select: { ...fields, ...include, ...{ isDeleted: true } },\n      }\n    } else {\n      const filter = this.convertQueryToPrismaFilter(schemaCache, theResourceSchema, query)\n\n      const orderBy = this.convertToOrderBy(query)\n\n      action = 'findMany'\n      const skip = query['current'] ? (Number(query['current']) - 1) * Number(query['pageSize']) : undefined\n      const take = query['pageSize'] ? Number(query['pageSize']) : undefined\n      if (parsedPath.length > 1) {\n        // 情况1：根据前一个 resource id 搜索 list\n        const pResource = parsedPath[parsedPath.length - 2]\n        // this.logger.log(`${resource}.findMany`)\n        param = omitBy(\n          {\n            where: {\n              ...{\n                [`${pResource.resource}Id`]: pResource.id,\n                isDeleted: false,\n              },\n              ...filter,\n            },\n            orderBy,\n            skip,\n            take,\n            select: { ...fields, ...include },\n          },\n          isUndefined,\n        )\n      } else {\n        param = omitBy(\n          {\n            where: {\n              ...{\n                isDeleted: false,\n              },\n              ...filter,\n            },\n            orderBy,\n            skip,\n            take,\n            select: { ...fields, ...include },\n          },\n          isUndefined,\n        )\n      }\n    }\n    const ret = {\n      action,\n      param,\n      resource: lastResource,\n    }\n    this.logger.debug!(`[toFindParam] ret ${JSON.stringify(ret)}`)\n    return ret\n  }\n\n  convertToOrderBy(query: any) {\n    let sort: string\n    if (query.sort != null) {\n      sort = query.sort\n    } else {\n      return [{ createdAt: 'desc' }]\n    }\n\n    if (sort[0] === '-') {\n      return [{ [sort.slice(1)]: 'desc' }]\n    } else {\n      return [{ [sort]: 'asc' }]\n    }\n  }\n\n  /**\n   * 根据 resource 的 schema 中 columns 是 ref， e.g. resource(Receipt) 收货单关联的 ref(partVersion)\n   * 找到对应 refSchema 的 display_column 中的又 include e.g. display_column(partId)，得到 nest select\n   * { [include: partVersion]: { select { partId: true, [partId x-relationField: part]: { select: { id: true, [display_column*]: true} }}} }\n   *\n   * todo: 现在是根据 display_column 里如果有 ref 来计算的，后续可以改成所有 ref 都默认向下搜索一层\n   */\n  getRefSelect(schemaCache: Record<string, IResourceSchema>, resourceSchema: IResourceSchema, includeRef: string) {\n    const refSelect: any = {}\n    if (resourceSchema && resourceSchema.columns) {\n      // e.g. inc partVersion\n      const refColumn = resourceSchema.columns.find(\n        col => col.column_type === 'reference' && col.reference!['x-relationField'] === includeRef,\n      )\n      if (refColumn) {\n        // e.g. model_name PartVersion\n        // e.g. display_column partId,version\n        const { model_name, display_column } = refColumn.reference!\n        // e.g. PartVersionResourceSchema\n        const refSchema = schemaCache[model_name + 'ResourceSchema']\n        let displayCols: string[] = []\n        if (typeof display_column === 'string') {\n          displayCols = [display_column]\n        } else {\n          displayCols = (display_column as string[]) || []\n        }\n        displayCols.forEach(item => {\n          // e.g. item partId\n          const disCol = refSchema.columns!.find(col => col.name === item)\n          if (disCol == null) {\n            throw new Error(`schema '${model_name}', wrong display column '${item}'`)\n          } else if (disCol.column_type === 'reference') {\n            // e.g. name\n            const display_column = disCol!.reference!.display_column!\n            const relationField = disCol!.reference!['x-relationField']\n\n            let display_column2: string[]\n            if (Array.isArray(display_column)) {\n              display_column2 = display_column\n            } else {\n              display_column2 = [display_column]\n            }\n            const select = display_column2.reduce((acc, cur) => {\n              acc[cur] = true\n              return acc\n            }, {} as Record<string, boolean>)\n\n            refSelect[relationField] = {\n              select: Object.assign(\n                {\n                  id: true,\n                },\n                select,\n              ),\n            }\n          }\n        })\n      }\n    }\n    return refSelect\n  }\n\n  /*\n    [\n      {\n        type: { eq: 'UNSCHEDULE' },\n        status: { eq: 'DONE' },\n      },\n    ]\n   */\n  convertQueryToPrismaFilter(\n    schemaCache: Record<string, IResourceSchema>,\n    resourceSchema: IResourceSchema,\n    query: any,\n  ) {\n    if (query.filterModel) {\n      return this.convertAgFilterModelToPrismaFilter(query.filterModel)\n    } else if (query.filter && Array.isArray(query.filter) && query.filter.length > 0) {\n      // console.log(query.filter)\n      const filter = query.filter as TFilterFormValue[]\n      const andIdx = filter.findIndex(item => typeof item === 'string' && item === 'AND')\n      const orIdx = filter.findIndex(item => typeof item === 'string' && item === 'OR')\n      const ret: any = {}\n\n      if (andIdx === 0) {\n        ret['AND'] = []\n        if (orIdx === -1) {\n          const andFilter = filter.slice(1)\n          andFilter.forEach(item => ret['AND'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n        } else {\n          const andFilter = filter.slice(1, orIdx)\n          andFilter.forEach(item => ret['AND'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n          ret['OR'] = []\n          const orFilter = filter.slice(orIdx + 1)\n          orFilter.forEach(item => ret['OR'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n        }\n      } else if (orIdx === 0) {\n        ret['OR'] = []\n        if (andIdx === -1) {\n          const orFilter = filter.slice(1)\n          orFilter.forEach(item => ret['OR'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n        } else {\n          const orFilter = filter.slice(1, andIdx)\n          orFilter.forEach(item => ret['OR'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n          ret['AND'] = []\n          const andFilter = filter.slice(andIdx + 1)\n          andFilter.forEach(item => ret['AND'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n        }\n      } else {\n        throw new Error('Wrong filter')\n      }\n      return ret\n    } else if (\n      query.q != null &&\n      Array.isArray(resourceSchema.searchable_columns) &&\n      resourceSchema.searchable_columns.length > 0\n    ) {\n      return {\n        OR: resourceSchema.searchable_columns.reduce((acc, cur) => {\n          acc.push({ [cur]: { contains: query.q } })\n          return acc\n        }, [] as any[]),\n      }\n    } else {\n      return {}\n    }\n  }\n\n  convertAgFilterModelToPrismaFilter(agFilter: TAgFilterSchema) {\n    const parsedRet = agFilter1Schema.safeParse(agFilter)\n    if (parsedRet.success) {\n      return _.mapValues(parsedRet.data, (v, k) => {\n        return {\n          [v.type]: v.filter,\n        }\n      })\n    } else {\n      const parsedRet = agFilter2Schema.safeParse(agFilter)\n      if (parsedRet.success) {\n        const ret: IPrismaFilterSchema = {} as IPrismaFilterSchema\n        for (const k of Object.keys(parsedRet.data)) {\n          const item = parsedRet.data[k]\n          if (item.operator === 'OR') {\n            if (ret.OR == null) {\n              ret.OR = []\n            }\n            for (const cond of item.conditions) {\n              ret.OR.push({\n                [k]: {\n                  [cond.type]: cond.filter,\n                },\n              })\n            }\n          }\n        }\n        return ret\n      } else {\n        return {}\n      }\n    }\n  }\n\n  async toUpdateParam(pathname: string, values: any) {\n    this.logger.debug!(`pathname: ${pathname}, body: ${JSON.stringify(values)}`)\n\n    const matchRet = matchPath(pathname)\n    const { resource, id, resourceSchema } = matchRet[matchRet.length - 1]\n    const schemaCache = await this.schemaService.getSchemaCache()\n\n    this.removeRelationFields(schemaCache, resourceSchema, values)\n    const ret = {\n      resource,\n      param: {\n        where: { id: id },\n        data: values,\n      },\n    }\n    this.logger.debug!(JSON.stringify(ret))\n    return ret\n  }\n\n  // todo: 需要增加 relation name\n  async getAssociationDeleteStrategy(pathname: string) {\n    const matchRet = matchPath(pathname)\n    const { origin, resourceSchema } = matchRet[matchRet.length - 1]\n    const schemaCache = await this.schemaService.getSchemaCache()\n    const theResourceSchema = schemaCache[resourceSchema]\n    if (theResourceSchema.associations == null) {\n      return {}\n    }\n    const ret = theResourceSchema.associations.reduce((acc, cur) => {\n      const assSchema = schemaCache[cur.model_name + 'ResourceSchema']\n      if (assSchema == null) {\n        throw new Error(`${resourceSchema} associated schema ${cur.model_name} is null`)\n      }\n      const relCol = assSchema.columns!.find(ac => {\n        const modelName = toModelName(origin)\n        return ac.reference?.model_name === modelName\n      })\n      if (relCol == null) {\n        throw new Error('Cannot found related column')\n      }\n      if (relCol.reference!['x-onSoftDelete'] === 'Restrict') {\n        acc[cur.model_name] = {\n          'x-onSoftDelete': relCol.reference!['x-onSoftDelete'],\n          name: relCol.name,\n          relatedDisplayName: assSchema.display_name,\n        }\n        return acc\n      }\n      return acc\n    }, {} as any)\n    return ret\n  }\n\n  async toRemoveParam(pathname: string) {\n    const matchRet = matchPath(pathname)\n    const { resource, origin, id, resourceSchema } = matchRet[matchRet.length - 1]\n    const schemaCache = await this.schemaService.getSchemaCache()\n    const theResourceSchema = schemaCache[resourceSchema]\n    let assDisconnect: any = {}\n    let include: any\n    if (theResourceSchema.associations != null) {\n      assDisconnect = theResourceSchema.associations.reduce((acc, cur) => {\n        const assSchema = schemaCache[cur.model_name + 'ResourceSchema']\n        const relCol = assSchema.columns!.find(ac => ac.reference?.model_name === toModelName(origin))\n        if (relCol == null) {\n          throw new Error('Cannot found related column')\n        }\n        // if (relCol.reference!['x-onSoftDelete'] !== 'Restrict' /* Restrict 已经确保 is_deleted 不需要解除关联 */) {\n        //   acc[cur.name] = {\n        //     set: [] /* disconnectAll 模拟 setNull */,\n        //   }\n        //   if (include == null) include = {}\n        //   include[cur.name] = true\n        // }\n        return acc\n      }, {} as any)\n    }\n\n    let id2: string | number\n    if (id == null) {\n      throw new Error(`remove ${resource}, id null`)\n    } else {\n      id2 = await this.prismaUtils.parseId(resource, id)\n    }\n    const ret = {\n      resource,\n      param: {\n        where: {\n          id: id2,\n        },\n        data: Object.assign(\n          {\n            isDeleted: true,\n          },\n          assDisconnect,\n        ),\n        include,\n      },\n    }\n    this.logger.debug!(JSON.stringify(ret))\n    return ret\n  }\n\n  mapItemToPrismaFilter(\n    schemaCache: Record<string, Partial<IResourceSchema>>,\n    resourceSchema: Partial<IResourceSchema>,\n    item: any,\n  ) {\n    // 先初步转换\n    const k = Object.keys(item)[0]\n    // https://javascript.plainenglish.io/how-to-rename-object-keys-in-react-javascript-using-lodash-b73fb92ea24d\n    item[k] = _.mapKeys<string, string, string>(item[k], (k, v) => {\n      switch (k) {\n        case 'eq':\n          return 'equals'\n        case 'neq':\n          return 'not'\n        default:\n          return k\n      }\n    })\n\n    item[k] = _.mapValues<string, string, string | number>(item[k], v => {\n      // 得用 schema 判断下，主要就是 string 的 LIKE\n      const kk = k.split('.')\n      let col\n      if (kk.length === 2) {\n        const refCol = resourceSchema.columns!.find(col => {\n          return col.column_type === 'reference' && col.reference!['x-relationField'] === kk[0]\n        })\n        const refSchema = schemaCache[refCol!.reference!.model_name + 'ResourceSchema']\n        col = refSchema.columns!.find(item => item.name === kk[1])\n      } else {\n        col = resourceSchema.columns!.find(item => item.name === k)\n      }\n      if (col && ['string', 'textarea'].indexOf(col.column_type!) > -1) {\n        return v\n      } else if (isLikeNumber(v)) {\n        return Number(v)\n      } else {\n        return v\n      }\n    })\n\n    // 再将 . 改成嵌套（chatGPT 给出的方式）\n    const ret = {}\n    forEach(item, (value, key) => {\n      set(ret, key.replace(/\\./g, '.'), value)\n    })\n    return ret\n  }\n\n  async toCreateParam(pathname: string, values: any) {\n    const matchRet = matchPath(pathname)\n    // console.log(matchRet)\n    const { resource, resourceSchema } = matchRet[matchRet.length - 1]\n    const schemaCache = await this.schemaService.getSchemaCache()\n    this.removeRelationFields(schemaCache, resourceSchema, values)\n    const theResourceSchema = schemaCache[resourceSchema]\n    // console.log(theResourceSchema)\n\n    const uniqueCols = theResourceSchema.columns!.filter(col => {\n      return col.column_type === 'reference' && col.reference!['x-unique']\n    })\n\n    if (uniqueCols.length === 0) {\n      return {\n        action: 'create',\n        resource: resource,\n        param: {\n          data: values,\n        },\n      }\n    } else if (uniqueCols.length > 1) {\n      throw new Error('Not support multiple unique key')\n    } else {\n      const uniqueCol = uniqueCols[0]\n      // console.log(uniqueCol)\n      return {\n        action: 'update',\n        resource: resource,\n        param: {\n          data: values,\n        },\n        'x-unique': uniqueCol,\n      }\n    }\n  }\n\n  removeRelationFields(schemaCache: Record<string, Partial<IResourceSchema>>, resourceSchema: string, values: any) {\n    // todo: 目前是通过显式声明 x-relationField 来删除 put 时候的 reference 值\n    const relationFields: string[] = []\n    const theResourceSchema = schemaCache[resourceSchema]\n    // console.log(theResourceSchema)\n    if (theResourceSchema) {\n      Object.keys(values).forEach((k: string) => {\n        const kProp = theResourceSchema.columns && theResourceSchema.columns.find(col => col.name === k)\n        if (kProp && kProp.column_type === 'reference') {\n          const relationField = kProp.reference?.['x-relationField']\n          if (relationField) {\n            relationFields.push(relationField)\n          }\n        }\n      })\n    }\n    relationFields.forEach(k => {\n      delete values[k]\n    })\n  }\n}\n","import { inject, injectable } from 'inversify'\nimport { toModelName } from '../../utils/matchPath'\nimport { PrismaClientSymbol } from '@flowda/types'\nimport type { LoggerService } from '@nestjs/common'\n\n@injectable()\nexport class PrismaUtils {\n  private readonly logger\n\n  constructor(\n    // todo: prisma 要不要强类型\n    // @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject(PrismaClientSymbol) private prisma: any,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(PrismaUtils.name)\n  }\n\n  async parseId(resource: string, id: string | number) {\n    const modelName = toModelName(resource)\n    const dmmf = await this.prisma._getDmmf()\n    const idField = dmmf.modelMap[modelName].fields.find((item: any) => item.name === 'id')\n    // this.logger.log(`id: ${id}, type: ${idField.type}`)\n    return idField.type === 'Int' && typeof id !== 'number' ? parseInt(id) : id\n  }\n}\n","import { z } from 'zod'\nimport { inject, injectable } from 'inversify'\nimport type { LoggerService } from '@nestjs/common'\nimport type { SchemaTransformer } from './schemaTransformer'\nimport { CustomZodSchemaSymbol } from '@flowda/types'\nimport { ResourceUISchema } from '@flowda/types'\n\n@injectable()\nexport class SchemaService {\n  private readonly logger\n  private schemaCache?: Record<string, z.infer<typeof ResourceUISchema>>\n\n  constructor(\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n    @inject('Factory<SchemaTransformer>') private modelSchemaFactory: (z: z.AnyZodObject) => SchemaTransformer,\n    @inject(CustomZodSchemaSymbol) private czt: any,\n  ) {\n    this.logger = loggerFactory(SchemaService.name)\n  }\n\n  getSchema(): Record<string, z.infer<typeof ResourceUISchema>> {\n    console.time('generate schema')\n    const schema = Object.keys(this.czt).reduce((acc: any, k) => {\n      const e = this.czt[k]\n      if (['ZodObject'].indexOf(e.constructor.name) > -1) {\n        const transformer = this.modelSchemaFactory(e)\n        acc[k] = transformer.buildSchema().toSchema(k)\n      } else {\n        this.logger.error('Wrong type', k)\n      }\n      return acc\n    }, {})\n    this.schemaCache = schema\n    console.timeEnd('generate schema')\n    return schema\n  }\n\n  async getSchemaCache(): Promise<Record<string, z.infer<typeof ResourceUISchema>>> {\n    if (!this.schemaCache) {\n      // 重启的话内存里就没有了，可以手动重新获取下\n      this.logger.log(`schemaCache is empty, getSchema again.`)\n      return this.getSchema()\n    } else {\n      return this.schemaCache\n    }\n  }\n}\n","import { z } from 'zod'\nimport { inject, injectable } from 'inversify'\nimport type { LoggerService } from '@nestjs/common'\nimport { SchemaTransformer as NewSchemaTransformer, zodToOpenAPI } from '@flowda/schema'\nimport { modelNameToSchemaName } from '../../utils/matchPath'\n\n@injectable()\nexport class SchemaTransformer {\n  private readonly logger\n  private zodType?: z.AnyZodObject\n  private jsonschema: any\n\n  constructor(@inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService) {\n    this.logger = loggerFactory(SchemaTransformer.name)\n  }\n\n  setZodType(z: z.AnyZodObject) {\n    this.zodType = z\n  }\n\n  buildSchema(): SchemaTransformer {\n    if (!this.zodType) {\n      const errMsg = 'zodType is not initialized'\n      this.logger.error(errMsg)\n      throw new Error(errMsg)\n    }\n    this.jsonschema = zodToOpenAPI(this.zodType)\n    return this\n  }\n\n  toSchema(schemaName: string) {\n    const json = new NewSchemaTransformer().set(this.jsonschema).toJSON()\n    //    ^?\n    if (!json.slug) throw new Error(`no slug, ${JSON.stringify(json)}`)\n    return {\n      ...json,\n      schema_name: schemaName,\n      columns: json.columns\n        ?.filter(f => f.name !== 'isDeleted')\n        .map(col => {\n          return {\n            ...col,\n            // 'x-legacy': undefined, // Theia 使用 x-legacy\n            // 以下是兼容原来\n            ...(col as any)['x-legacy'],\n            prisma:\n              (col as any)?.['x-legacy']?.prisma && (col as any)['x-legacy'].prisma === 'false' ? false : undefined,\n          }\n        }),\n      associations: json.associations?.map(ass => {\n        return {\n          ...ass,\n          schema_name: modelNameToSchemaName(ass.model_name),\n        }\n      }),\n    }\n  }\n}\n","import type { TAgSortSchema } from '@flowda-projects/flowda-shared-types'\n\nexport function convertSortAgToMotor(sort: TAgSortSchema) {\n  return sort[0] != null ? (sort[0].sort === 'asc' ? sort[0].colId : '-' + sort[0].colId) : undefined\n}\n","const levelColorMap: Record<string, string> = {\n  0: '#c0392b', // Red\n  1: '#f39c12', // Yellow\n  3: '#00BCD4', // Cyan\n  4: '#ccc',\n}\n\nfunction style(level: number) {\n  return `\n  background: ${levelColorMap[level]};\n  border-radius: 0.5em;\n  color: white;\n  font-weight: bold;\n  padding: 2px 0.5em;\n`\n}\n\nexport function debug(msg: string) {\n  return [`%c debug `, style(4), '', msg]\n}\n\nexport function info(msg: string) {\n  return [`%c info `, style(3), '', msg]\n}\n\nexport function warn(msg: string) {\n  return [`%c warn `, style(1), '', msg]\n}\n\nexport function error(msg: string) {\n  return [`%c error `, style(0), '', msg]\n}\n","export class CustomError extends Error {\n  public override message\n\n  constructor(code: number, message: string, extra?: any) {\n    super(JSON.stringify({ code: code, message }))\n    this.message = JSON.stringify({ code, message, extra })\n  }\n}\n","import utc from 'dayjs/plugin/utc'\nimport timezone from 'dayjs/plugin/timezone'\nimport advancedFormat from 'dayjs/plugin/advancedFormat'\n\nimport dayjs from 'dayjs'\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\ndayjs.extend(advancedFormat)\n\nexport function getTimeExpire(min: number) {\n  const fmt = dayjs().tz('Asia/Shanghai').add(min, 'minute').format('YYYY-MM-DDTHH:mm:ss+z')\n  const ret = fmt.match(/.*(GMT\\+(\\d))/)\n  if (ret == null) {\n    return ''\n  } else {\n    return ret[0].replace(ret[1], ret[2].padStart(2, '0') + ':00')\n  }\n}\n\nexport function getTimeByDay(day: number): Date {\n  return dayjs().tz('Asia/Shanghai').add(day, 'day').toDate()\n}\n","import * as plur from 'pluralize'\nimport * as _ from 'lodash'\n\nplur.addSingularRule(/data$/i, 'data')\nplur.addPluralRule(/data$/i, 'data')\nplur.addSingularRule(/def$/i, 'def')\nplur.addPluralRule(/def$/i, 'def')\nplur.addSingularRule(/sms$/i, 'sms')\nplur.addPluralRule(/sms$/i, 'sms')\n\n// 兼容用复数表示表，一般不用复数做表名称\nplur.addSingularRule(/ProjectUsers$/i, 'ProjectUsers')\nplur.addPluralRule(/ProjectUsers$/i, 'ProjectUsers')\n\n// s* equipment 不可数\nconst REG = /(([a-z_]+s*)\\/?([A-Za-z0-9-_:]+)?)+/g\n\nconst NUM_REG = /^-?\\d+(\\.\\d+)?$/\n\nexport type TMatchPath = {\n  origin: string\n  resource: string\n  resourceSchema: string\n  id?: string | number\n}\n\n// todo: 暂时没想到更精确的方法，这个应该能覆盖 100%\nexport function isLikeNumber(value: string) {\n  return NUM_REG.test(value)\n}\n\nexport function toModelName(slug: string) {\n  return _.startCase(_.camelCase(plur.singular(slug))).replace(/ /g, '')\n}\n\nexport function toPath(modelName: string) {\n  return plur.plural(_.snakeCase(modelName))\n}\n\n/**\n * @deprecated slug 转成 ResourceSchema 不准确\n * @see modelNameToSchemaName\n * @param slug\n */\nexport function toSchemaName(slug: string) {\n  const p = plur.singular(slug)\n  return toModelName(p) + 'ResourceSchema'\n}\n\nexport function modelNameToSchemaName(modelName: string) {\n  const p = plur.singular(modelName)\n  return p + 'ResourceSchema'\n}\n\nexport function matchPath(path: string): TMatchPath[] {\n  const ret1 = path.match(REG)\n  // console.log(ret1)\n  if (ret1 != null) {\n    const ret2 = ret1.map(item => {\n      const [resource, id] = item.split('/')\n\n      const p = plur.singular(resource)\n      return {\n        resource: _.camelCase(p),\n        resourceSchema: toSchemaName(resource),\n        origin: resource,\n        id: isLikeNumber(id) ? _.toNumber(id) : id,\n      }\n    })\n    return ret2\n  } else {\n    return []\n  }\n}\n","import { IResourceSchema } from '@flowda-projects/flowda-shared-types'\n\nexport function getSchemaByDisplayName(schemaCache: Record<string, IResourceSchema>, displayName: string) {\n  const k = Object.keys(schemaCache).find(k => {\n    return schemaCache[k].display_name === displayName\n  })\n  if (k) {\n    return schemaCache[k]\n  } else {\n    return null\n  }\n}\n","export * from './symbols'\nexport * from './types'\nexport * from './zods'\nexport * from './zods-wms'\nexport * from './zod-utils'\n","export const PrismaSchemaServiceSymbol = Symbol.for('PrismaSchemaService')\nexport const SchemaTransformerSymbol = Symbol.for('SchemaTransformer')\nexport const PrismaUtilsSymbol = Symbol.for('PrismaUtils')\nexport const DataServiceSymbol = Symbol.for('DataService')\nexport const LegacySchemaServiceSymbol = Symbol.for('LegacySchemaService')\nexport const SchemaServiceSymbol = Symbol.for('SchemaService')\nexport const DynamicTableSchemaTransformerSymbol = Symbol.for('DynamicTableSchemaTransformer')\nexport const FlowdaTrpcClientSymbol = Symbol.for('FlowdaTrpcClient')\nexport const APISymbol = Symbol('API')\nexport const URLSymbol = Symbol.for('URL')\nexport const ENVSymbol = Symbol.for('ENV')\nexport const K3CloudIdentifyInfoSymbol = Symbol.for('K3CloudIdentifyInfo')\nexport const COSSymbol = Symbol('COS')\nexport const SmsClientSymbol = Symbol.for('SmsClient')\nexport const WechatOAuthSymbol = Symbol.for('WechatOAuth')\nexport const DynamicTableDataServiceSymbol = Symbol.for('DynamicTableDataService')\nexport const DynamicTableDefServiceSymbol = Symbol.for('DynamicTableDefService')\nexport const MenuServiceSymbol = Symbol.for('MenuService')\nexport const WechatpayNodeV3Symbol = Symbol.for('WechatpayNodeV3Symbol')\nexport const WechatpayNodeV3FactorySymbol = Symbol.for('WechatpayNodeV3FactorySymbol')\nexport const GatewayRegisterSymbol = Symbol.for('GatewayRegister')\nexport const AxiosInstanceSymbol = Symbol.for('AxiosInstance')\n","export type TFilterFormValue =\n  | string\n  | {\n      column: string | undefined\n      condition: string | undefined\n      value: string | undefined\n    }\n\nexport enum EPlan {\n  Free = 1,\n  VIP = 2,\n}\n\nexport const Serial_Min = 10001\nexport const Serial_Max = 99999\n","// 从 https://github.com/risen228/nestjs-zod 提取\n// 提取的原因是去掉 nestjs 等 node 依赖\nimport { ZodSchema, ZodTypeDef } from 'zod'\n\nexport interface ZodDto<TOutput = any, TDef extends ZodTypeDef = ZodTypeDef, TInput = TOutput> {\n  new (): TOutput\n\n  isZodDto: true\n  schema: ZodSchema<TOutput, TDef, TInput>\n\n  create(input: unknown): TOutput\n}\n\nexport function createZodDto<TOutput = any, TDef extends ZodTypeDef = ZodTypeDef, TInput = TOutput>(\n  schema: ZodSchema<TOutput, TDef, TInput>,\n) {\n  class AugmentedZodDto {\n    public static isZodDto = true\n    public static schema = schema\n\n    public static create(input: unknown) {\n      return this.schema.parse(input)\n    }\n  }\n\n  return AugmentedZodDto as unknown as ZodDto<TOutput, TDef, TInput>\n}\n","import { extendZod } from '@flowda/schema'\nimport { z } from 'zod'\nextendZod(z)\nexport const wmsCustomerSchema = z.object({\n  customerCode: z.string().openapi({\n    description: '客户编号',\n  }),\n  customerName: z.string().openapi({\n    description: '客户名称',\n  }),\n  masterId: z.string().openapi({\n    description: '货主id',\n  }),\n  contact: z.string().openapi({\n    description: '联系人',\n  }),\n  contactInfo: z.string().openapi({\n    description: '联系方式',\n  }),\n  status: z.union([z.literal(1), z.literal(9)]).openapi({\n    description: '状态1、启用 0、禁用',\n  }),\n  organizationId: z.string().openapi({\n    description: '组织Id',\n  }),\n})\n\nexport const wmsGoodsSchema = z.object({\n  goodsCode: z.string().openapi({\n    description: '货物编号',\n  }),\n  goodsName: z.string().openapi({\n    description: '货物名称',\n  }),\n  goodsTypeId: z.string().openapi({\n    description: '货物类型id',\n  }),\n  goodsAttribute: z.string().openapi({\n    description: '货物属性',\n  }),\n  masterId: z.string().openapi({\n    description: '货主信息',\n  }),\n  specification: z.string().openapi({\n    description: '规格型号',\n  }),\n  measurementUnit: z.string().openapi({\n    description: '计量单位',\n  }),\n  goodsPackageId: z.string().openapi({\n    description: '包装规格id',\n  }),\n  batchId: z.string().openapi({\n    description: '批次id',\n  }),\n  goodsInspectMode: z.number().openapi({\n    description: '货物检验方式1、全检2、抽检3、免检',\n  }),\n  length: z.number().openapi({\n    description: '长',\n  }),\n  width: z.number().openapi({\n    description: '宽',\n  }),\n  high: z.number().openapi({\n    description: '高',\n  }),\n  volume: z.number().openapi({\n    description: '体积',\n  }),\n  grossWeight: z.number().openapi({\n    description: '毛重',\n  }),\n  netWeight: z.number().openapi({\n    description: '净重',\n  }),\n  minStock: z.number().openapi({\n    description: '最低库存',\n  }),\n  maxStock: z.number().openapi({\n    description: '最高库存',\n  }),\n  maxStorageTime: z.number().openapi({\n    description: '最长储存时间',\n  }),\n  isAuto: z.number().openapi({\n    description: '是否自动化1、是 0、否',\n  }),\n  choppedQuantity: z.number().openapi({\n    description: '剁型每层数量',\n  }),\n  choppedLayer: z.number().openapi({\n    description: '剁型层数',\n  }),\n  goodsPicture: z.string().openapi({\n    description: '货物图片',\n  }),\n  fSeitBrand: z.string().openapi({\n    description: '品牌',\n  }),\n  fSeitCasePackage: z.string().openapi({\n    description: '封装',\n  }),\n  fSeitMsl: z.string().openapi({\n    description: 'MSL',\n  }),\n  fRefCost: z.string().openapi({\n    description: '单位成本',\n  }),\n  fSeitMpn: z.string().openapi({\n    description: 'MPN',\n  }),\n  status: z.number().openapi({\n    description: '状态1、启用 0、禁用',\n  }),\n  organizationId: z.number().openapi({\n    description: '组织id',\n  }),\n})\n\nexport const wmsGoodsMslSchema = z.object({\n  mslCode: z.string().openapi({ description: 'MSL' }),\n})\n\nexport const wmsGoodsUtilSchema = z.object({\n  unitId: z.string().openapi({ description: '计量单位id' }),\n  name: z.string().openapi({ description: '计量单位名称' }),\n  code: z.string().openapi({ description: '计量单位code' }),\n})\n\nexport const wmsStockSchema = z.object({\n  id: z.string().openapi({ description: 'erp仓库id' }),\n  code: z.string().openapi({ description: 'erp仓库编码' }),\n})\n\nexport const wmsSupplierSchema = z.object({\n  supplierCode: z.string().openapi({ description: '供应商编号' }),\n  supplierName: z.string().openapi({ description: '供应商名称' }),\n  masterId: z.string().openapi({ description: '货主id' }),\n  contact: z.string().openapi({ description: '联系人' }),\n  contactInfo: z.string().openapi({ description: '联系方式' }),\n  remark: z.string().openapi({ description: '备注' }),\n  status: z.number().openapi({ description: '状态1、启用 0、禁用' }),\n  organizationId: z.string().openapi({ description: '组织Id' }),\n})\n\nexport const wmsGoodsTypeSchema = z.object({\n  goodsTypeCode: z.string().openapi({ description: '货物类型编号' }),\n  goodsTypeName: z.string().openapi({ description: '货物类型名称' }),\n  status: z.number().openapi({ description: '状态1、启用 0、禁用' }),\n  organizationId: z.string().openapi({ description: '组织Id' }),\n})\n\nexport const wmsWarehousingItemSchema = z.object({\n  FBillNo: z.string().openapi({ description: '单据号' }),\n  FDate: z.string().openapi({ description: '入库日期' }),\n  FDocumentStatus: z.string().openapi({ description: '单据状态 Z：暂存，A：创建，B：审核，C：已审核，D：重新审核' }),\n  FMaterialId: z.string().openapi({ description: '物料编码' }),\n  FQty: z.string().openapi({ description: '数量' }),\n  FLot: z.string().openapi({ description: '批次号' }),\n  FStockId: z.string().openapi({ description: '仓库编码' }),\n})\n\nexport const wmsOEMReturnSchema = z.array(wmsWarehousingItemSchema)\n\nexport const wmsOEMWarehousingSchema = z.array(wmsWarehousingItemSchema)\n\nexport const wmsOtherWarehousingSchema = z.array(\n  wmsWarehousingItemSchema.extend({\n    FSupplierId: z.string().openapi({ description: '供应商编码' }),\n  }),\n)\n\nexport const wmsProduceReturnWarehousingSchema = z.array(\n  wmsWarehousingItemSchema.extend({\n    FAPPQty: z.string().openapi({ description: '申请数量' }),\n    FQty: z.string().openapi({ description: '实退数量' }),\n  }),\n)\n\nexport const wmsProduceWarehousingSchema = z.array(\n  wmsWarehousingItemSchema\n    .omit({\n      FQty: true,\n    })\n    .extend({\n      FMustQty: z.string().openapi({ description: '应收数量' }),\n      FRealQty: z.string().openapi({ description: '实收数量' }),\n    }),\n)\n\nexport const wmsPurchaseWarehousingSchema = z.array(\n  wmsWarehousingItemSchema\n    .omit({\n      FQty: true,\n    })\n    .extend({\n      FMustQty: z.string().openapi({ description: '应收数量' }),\n      FRealQty: z.string().openapi({ description: '实收数量' }),\n      FSupplierId: z.string().openapi({ description: '供应商编码' }),\n    }),\n)\n\nexport const wmsSubReturnWarehousingSchema = z.array(\n  wmsWarehousingItemSchema.extend({\n    FAPPQty: z.string().openapi({ description: '申请数量' }),\n    FQty: z.string().openapi({ description: '实退数量' }),\n  }),\n)\n\nexport const wmsPRDFeedMtrlSchema = z.array(\n  wmsWarehousingItemSchema.extend({\n    FActualQty: z.string().openapi({ description: '实发数量' }),\n  }),\n)\n\nexport const wmsUpdateWarehousingAuditToErpSchema = z.object({\n  orderType: z.number().openapi({ description: '单据类型' }),\n  sourceOrderCode: z.string().openapi({ description: '来源单据' }),\n})\n\nexport const wmsOEMAddOutWarehouseSchema = z.array(\n  wmsWarehousingItemSchema\n    .omit({\n      FQty: true,\n    })\n    .extend({\n      FActualQty: z.string().openapi({ description: '实发数量' }),\n    }),\n)\n\nexport const wmsOEMOutWarehouseSchema = z.array(\n  wmsWarehousingItemSchema\n    .omit({\n      FQty: true,\n    })\n    .extend({\n      FActualQty: z.string().openapi({ description: '实发数量' }),\n    }),\n)\n\nexport const wmsOtherOutWarehouseSchema = z.array(wmsWarehousingItemSchema)\nexport const wmsProduceOutWarehouseSchema = z.array(\n  wmsWarehousingItemSchema\n    .omit({\n      FQty: true,\n    })\n    .extend({\n      FActualQty: z.string().openapi({ description: '实发数量' }),\n    }),\n)\nexport const wmsPurchaseReturnOutWarehouseSchema = z.array(\n  wmsWarehousingItemSchema\n    .omit({\n      FQty: true,\n    })\n    .extend({\n      FRMREALQTY: z.string().openapi({ description: '实退数量' }),\n    }),\n)\n\nexport const wmsSaleOutWarehouseSchema = z.array(\n  wmsWarehousingItemSchema\n    .omit({\n      FQty: true,\n    })\n    .extend({\n      FCustomerID: z.string().openapi({ description: '客户编码' }),\n      FRealQty: z.string().openapi({ description: '实发数量' }),\n    }),\n)\n\nexport const wcsNoticeMouldIntoStockSchema = z\n  .object({\n    noticeId: z.number().openapi({ description: '单据号', example: 'XSCK00001' }),\n    goodsList: z.array(\n      z.object({\n        containerCode: z.string().openapi({ description: '箱码', example: 'containerCode' }),\n      }),\n    ),\n  })\n  .openapi({\n    title: 'wcsNoticeMouldIntoStockSchema',\n    example: { noticeId: '单据号' },\n  })\n\nexport const wcsNoticeMouldOutStockSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  goodsList: z.array(\n    z.object({\n      containerCode: z.string().openapi({ description: '箱码' }),\n      startLoc: z.string().optional().openapi({ description: '模具源库位' }),\n    }),\n  ),\n})\n\nexport const wmsMouldGetMouldTypeSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  containerCode: z.string().openapi({ description: '单个箱码' }),\n  loc: z.string().optional().openapi({ description: '单个箱库位' }),\n  type: z.union([z.literal('类型1'), z.literal('类型2'), z.literal('类型3')]),\n})\n\nexport const wmsMouldGetMouldTypeOutput1Schema = z.object({\n  success: z.boolean().openapi({ example: 'true' }),\n  noticeId: z.number().openapi({ description: '单据号' }),\n  containerCode: z.string().openapi({ description: '单个箱码' }),\n  startLoc: z.string().optional().openapi({ description: '箱初始库位' }),\n  type: z.union([z.literal('类型1'), z.literal('类型2'), z.literal('类型3')]),\n  endLoc: z.string().optional().openapi({ description: '箱目标库位' }),\n})\n\nexport const wmsMouldGetMouldTypeOutput2Schema = z.object({\n  success: z.boolean().openapi({ example: 'false' }),\n  message: z.string().openapi({ description: '失败原因' }),\n})\n\nexport const wmsMouldFinishSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  containerCode: z.string().openapi({ description: '单个箱码' }),\n  startLoc: z.string().optional().openapi({ description: '箱初始库位' }),\n  endLoc: z.string().optional().openapi({ description: '箱目标库位' }),\n  type: z.union([z.literal('类型1'), z.literal('类型2'), z.literal('类型3')]),\n})\n\nexport const wcsNoticeMaterialSendSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  goodsList: z.array(\n    z.object({\n      containerCode: z.string().openapi({ description: '箱码' }),\n      startLoc: z.string().optional().openapi({ description: '箱初始库位' }),\n      endLoc: z.string().optional().openapi({ description: '箱目标库位' }),\n    }),\n  ),\n})\n\nexport const wcsNoticeProductIntoStockSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  goodsList: z.array(\n    z.object({\n      containerCode: z.string().openapi({ description: '箱码' }),\n      endLoc: z.string().optional().openapi({ description: '箱目标库位' }),\n    }),\n  ),\n})\n\nexport const wcsNoticePlasticIntoStockSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  containerCode: z.string().openapi({ description: '箱码' }),\n  endLoc: z.string().optional().openapi({ description: '箱目标库位' }),\n  instructionType: z.union([\n    z.literal('上架指令1'),\n    z.literal('上架指令2'),\n    z.literal('上架指令3'),\n    z.literal('上架指令4'),\n  ]),\n})\n\nexport const wcsNoticeProduceReturnSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  goodsList: z.array(\n    z.object({\n      containerCode: z.string().openapi({ description: '箱码' }),\n      endLoc: z.string().optional().openapi({ description: '箱目标库位' }),\n    }),\n  ),\n})\n\nexport const wcsNoticeProductOutStockSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  goodsList: z.array(\n    z.object({\n      containerCode: z.string().openapi({ description: '箱码' }),\n      startLoc: z.string().optional().openapi({ description: '箱初始库位' }),\n      endLoc: z.string().optional().openapi({ description: '箱目标库位' }),\n    }),\n  ),\n})\n\nexport const callbackNoticePlasticIntoStockInputSchema = z.object({\n  containerCode: z.string().openapi({ description: '箱码' }),\n})\n\nexport const okResponse = z\n  .object({\n    success: z.literal(true),\n    message: z.string(),\n  })\n  .openapi({\n    title: 'okResponse',\n  })\n\nexport const notOkResponse = z\n  .object({\n    success: z.literal(false),\n    message: z.string(),\n  })\n  .openapi({\n    title: 'notOkResponse',\n  })\n\nexport const materialCode = z.string().openapi({ example: 'todo', description: '物料编码' })\nconst documentCode = z.string().openapi({ example: '', description: '单据号' })\n\nexport const srmGetDeliverDocListByCode = z\n  .object({\n    materialCode,\n  })\n  .openapi({ title: 'srmGetDeliverDocListByCode', description: '物料编码从二维码提取' })\n\nexport const srmGetDeliverDocListByCodeOkRes = z\n  .object({\n    documentCode: z.string().openapi({\n      example: 'todo',\n      description: '送货单号',\n    }),\n    materialList: z.array(\n      z.object({\n        materialCode: z.string().openapi({\n          description: '物料编码',\n          example: 'todo',\n        }),\n        type: z.string().openapi({\n          description: '物料类型（区分 VMI）',\n          example: 'todo',\n        }),\n      }),\n    ),\n  })\n  .openapi({ title: 'srmGetDeliverDocListByCodeOkRes', description: 'todo' })\n\nexport const apsCheckMaterialRequirement = z\n  .array(\n    z.object({\n      materialCode,\n    }),\n  )\n  .openapi({ title: 'srmCheckMaterialRequirement', description: '支持批量获取，覆盖集码场景' })\n\nexport const oaRequestMaterialNoExceedRequirement = z\n  .object({\n    note: z.string().openapi({ example: 'todo', description: '备注' }),\n  })\n  .openapi({\n    title: 'oaRequestMaterialNoExceedRequirement',\n  })\n\nexport const oaNotPass = z\n  .object({\n    reason: z.string().openapi({\n      example: 'todo',\n      description: '不通过原因',\n    }),\n  })\n  .openapi({\n    title: 'oaNotPass',\n  })\n\nexport const sapCheckMinMax = z\n  .array(\n    z.object({\n      materialCode,\n      qty: z.number().openapi({ example: 12, description: '物料数量' }),\n    }),\n  )\n  .openapi({\n    title: 'srmCheckMinMax',\n  })\n\nexport const sapCheckMinMaxRes = z\n  .array(\n    z.object({\n      materialCode,\n      qty: z.number().openapi({ example: 12, description: '当前库存量' }),\n      max: z.number().openapi({ example: 20, description: '最大库存量' }),\n    }),\n  )\n  .openapi({\n    title: 'sapCheckMinMaxRes',\n  })\n\nexport const oaRequestMaxStockApprove = z\n  .object({\n    note: z.string().openapi({ example: 'todo', description: '备注' }),\n  })\n  .openapi({\n    title: 'oaRequestMaxStockApprove',\n  })\n\nexport const todo = z\n  .object({\n    todo: z.string().openapi({ example: '', description: 'todo' }),\n  })\n  .openapi({ title: 'todo' })\n\nexport const sapGetQualityAssurance = z\n  .array(\n    z.object({\n      materialCode,\n    }),\n  )\n  .openapi({\n    title: 'sapGetQualityAssurance',\n    description: '支持批量',\n  })\n\nexport const getTodoPreReceiptInventoryFormRes = z\n  .array(\n    z.object({\n      documentCode: z.string().openapi({ description: '预收单号', example: 'todo' }),\n      materialList: z.array(\n        z.object({\n          materialCode: materialCode,\n          note: z.string().openapi({ description: '距离上次送货6个月以上' }),\n        }),\n      ),\n    }),\n  )\n  .openapi({\n    title: 'getTodoPreReceiptInventoryFormRes',\n  })\n\nexport const getQmsStatusByDocumentCodeType1Res = todo.openapi({\n  description: '退库',\n  title: 'getQmsStatusByDocumentCodeType1Res',\n})\n\nexport const getQmsStatusByDocumentCodeType2Res = todo.openapi({\n  description: '损耗',\n  title: 'getQmsStatusByDocumentCodeType2Res',\n})\n\nexport const getQmsStatusByDocumentCodeType3Res = todo.openapi({\n  description: '合格',\n  title: 'getQmsStatusByDocumentCodeType3Res',\n})\n\nexport const getQmsStatusByDocumentCodeType4Res = todo.openapi({\n  description: '让步接收',\n  title: 'getQmsStatusByDocumentCodeType4Res',\n})\n\nexport const getMaterialReturnRequestRes = z\n  .object({\n    documentCode: documentCode,\n    materialList: z.array(\n      z.object({\n        materialCode: materialCode,\n        isPlastic: z.string().openapi({ description: '是否是塑胶件' }),\n      }),\n    ),\n  })\n  .openapi({\n    title: 'getMaterialReturnRequestRes',\n    description: '包括工单退料和不合格品退料',\n  })\n","import { z } from 'zod'\nimport { createZodDto } from './zod-utils'\nimport { extendZod } from '@flowda/schema'\n\nextendZod(z)\n\nexport const selectOptionSchema = z.object({\n  value: z.union([z.string(), z.number()]),\n  label: z.string(),\n})\n\nexport const resourceAssociationSchema = z.object({\n  foreign_key: z.string(),\n  model_name: z.string(),\n  primary_key: z.string(),\n  name: z.string(),\n  slug: z.string(),\n  display_name: z.string(),\n  schema_name: z.string(),\n})\n\nexport const resourceColumnSchema = z.object({\n  name: z.string(),\n  access_type: z.enum(['read_only']).optional(),\n  column_type: z.enum(['reference', 'string', 'tag', 'integer', 'datetime', 'textarea', 'boolean']),\n  prisma: z.boolean().optional(),\n  format: z\n    .object({\n      select_options: selectOptionSchema.array(),\n    })\n    .optional(),\n  reference: z.object({\n    model_name: z.string(),\n    primary_key: z.string(),\n    display_name: z.string(),\n    display_column: z.union([z.string(), z.array(z.string()), z.undefined()]),\n    'x-relationField': z.string(),\n    'x-onSoftDelete': z.string(),\n    'x-unique': z.boolean().optional(),\n  }),\n  display_name: z.string().optional(),\n  validators: z.array(\n    z.union([\n      z.object({\n        required: z.boolean(),\n      }),\n      z.object({\n        format: z.string(),\n        message: z.string(),\n      }),\n    ]),\n  ),\n})\n\nexport const resourceSchema = z.object({\n  namespace: z.string().optional(),\n  prisma: z.boolean().optional(),\n  is_dynamic: z.boolean().optional(),\n  schema_name: z.string(),\n  name: z.string(),\n  slug: z.string(),\n  primary_key: z.string(),\n  'x-legacy': z.any(),\n  display_column: z.union([z.string(), z.array(z.string()), z.undefined()]),\n  display_name: z.string().nullable(),\n  display_primary_key: z.boolean(),\n  searchable_columns: z.array(z.string()).optional(),\n  columns: resourceColumnSchema.array(),\n  associations: resourceAssociationSchema.array(),\n  __jsonschema: z.any(),\n})\n\nexport const agFilterInnerSchema = z.object({\n  filterType: z.enum(['text', 'number']),\n  // filterType: z.string(),\n  type: z.enum(['contains', 'equals']),\n  // type: z.string(),\n  filter: z.union([z.string(), z.number()]),\n})\n\nexport const agFilterInner2Schema = z.object({\n  filterType: z.enum(['text']),\n  // filterType: z.string(),\n  operator: z.enum(['OR', 'AND']),\n  // operator: z.string(),\n  conditions: z.array(agFilterInnerSchema),\n})\n\nexport const agFilter1Schema = z.record(agFilterInnerSchema)\nexport type TAgFilter1Schema = z.infer<typeof agFilter1Schema>\nexport const agFilter2Schema = z.record(agFilterInner2Schema)\n\nexport const agFilterSchema = z\n  .record(agFilterInnerSchema.or(agFilterInner2Schema))\n  .or(z.object({ _ref: z.string().optional() }))\nexport type TAgFilterSchema = z.infer<typeof agFilterSchema>\n\nexport const agSortSchema = z.array(\n  z.object({\n    colId: z.string(),\n    sort: z.enum(['asc', 'desc']),\n  }),\n)\nexport type TAgSortSchema = z.infer<typeof agSortSchema>\n\nexport const prismaFilterSchema = z.object({\n  OR: z.array(z.record(z.record(z.enum(['contains']), z.string()))),\n})\nexport type IPrismaFilterSchema = z.infer<typeof prismaFilterSchema>\n\nexport type IResourceSchema = z.infer<typeof resourceSchema>\nexport type IResourceAssociationSchema = z.infer<typeof resourceAssociationSchema>\nexport type ISchemaSelectOption = z.infer<typeof selectOptionSchema>\nexport type IResourceColumnSchema = z.infer<typeof resourceColumnSchema>\n\nexport const registerSchema = z.object({\n  username: z.string(),\n  password: z.string(),\n  tenantId: z.number(),\n})\n\nexport class RegisterDto extends createZodDto(registerSchema) {}\n\nexport const accountExistsSchema = z.object({\n  username: z.string(),\n  tenantName: z.string(),\n})\n\nexport class AccountExistsSchemaDto extends createZodDto(accountExistsSchema) {}\n\nexport const validateSchema = z.object({\n  tenantId: z.number().optional(),\n  username: z.string(),\n  password: z.string(),\n})\n\nexport class validateSchemaDto extends createZodDto(validateSchema) {}\n\nexport const getTenantByNameSchema = z.object({\n  tenantName: z.string(),\n})\n\nexport class GetTenantByNameSchemaDto extends createZodDto(getTenantByNameSchema) {}\n\nexport const findByUnionIdAndTenantIdSchema = z.object({\n  unionid: z.string(),\n  tenantId: z.number(),\n})\n\nexport class FindByUnionIdAndTenantIdSchemaDto extends createZodDto(findByUnionIdAndTenantIdSchema) {}\n\nexport const registerByUnionIdSchema = z.object({\n  unionid: z.string(),\n  tenantId: z.number(),\n})\n\nexport class RegisterByUnionIdSchemaDto extends createZodDto(registerByUnionIdSchema) {}\n\nexport const resetPasswordSchema = z.object({\n  userId: z.number(),\n  tenantId: z.number(),\n  password: z.string(),\n})\n\nexport const _resetPasswordSchema = resetPasswordSchema.extend({\n  tid: z.number(),\n})\n\nexport class resetPasswordSchemaDto extends createZodDto(resetPasswordSchema) {}\n\nexport const verifyMobileSchema = z.object({\n  uid: z.number(),\n  tid: z.number(),\n  mobile: z.string(),\n  code: z.string(),\n  slug: z.string(),\n})\n\nexport class verifyMobileSchemaDto extends createZodDto(verifyMobileSchema) {}\n\nexport const tenantJwtPayloadSchema = z.object({\n  tid: z.number(),\n})\n\nexport const userJwtPayloadSchema = z.object({\n  uid: z.number(),\n  tid: z.number(),\n})\n\nexport class userJwtPayloadSchemaDto extends createZodDto(userJwtPayloadSchema) {}\n\nexport const customerPreSignupSchema = z.object({\n  email: z.string(),\n})\n\nexport class customerPreSignupSchemaDto extends createZodDto(customerPreSignupSchema) {}\n\nexport class customerPreSignupTenantJwtPayloadSchemaDto extends createZodDto(\n  customerPreSignupSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport const customerSignupSchema = z.object({\n  email: z.string(),\n  verifyCode: z.string(),\n  password: z.string(),\n})\n\nexport class customerSignupSchemaDto extends createZodDto(customerSignupSchema) {}\n\nexport class customerSignupTenantJwtPayloadSchemaDto extends createZodDto(\n  customerSignupSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport const wxGetAccessTokenRes = z.object({\n  access_token: z.string(),\n  expires_in: z.string(),\n  refresh_token: z.string(),\n  openid: z.string(),\n  scope: z.string(),\n  unionid: z.string(),\n  create_at: z.string(),\n})\nexport type TWxGetAccessTokenRes = z.infer<typeof wxGetAccessTokenRes>\n\nexport const wxGetUserRes = z.object({\n  openid: z.string(),\n  nickname: z.string(),\n  sex: z.number(),\n  headimgurl: z.string(),\n  unionid: z.string(),\n  language: z.string(),\n  city: z.string(),\n  province: z.string(),\n  country: z.string(),\n  privilege: z.array(z.string()),\n})\nexport type TWxGetUser = z.infer<typeof wxGetUserRes>\n\nexport const wxValidateUserSchema = z.object({\n  code: z.string(),\n})\n\nexport class wxValidateUserTenantJwtPayloadSchemaDto extends createZodDto(\n  wxValidateUserSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport const generateRecoveryCodeSchema = z.object({\n  email: z.string(),\n})\n\nexport class generateRecoveryCodeSchemaDto extends createZodDto(generateRecoveryCodeSchema) {}\n\nexport class generateRecoveryCodeTenantJwtSchemaDto extends createZodDto(\n  generateRecoveryCodeSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport class GenerateRecoveryCodeDto extends createZodDto(\n  generateRecoveryCodeSchema.merge(\n    z.object({\n      appId: z.string(),\n    }),\n  ),\n) {}\n\nexport const resetPasswordWithRecoveryCodeSchema = z.object({\n  recoveryCode: z.string(),\n  password: z.string(),\n})\n\nexport class resetPasswordWithRecoveryCodeSchemaDto extends createZodDto(resetPasswordWithRecoveryCodeSchema) {}\n\nexport class resetPasswordWithRecoveryCodeTenantJwtSchemaDto extends createZodDto(\n  resetPasswordWithRecoveryCodeSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport class ResetPasswordDto extends createZodDto(\n  resetPasswordWithRecoveryCodeSchema.merge(\n    z.object({\n      appId: z.string(),\n    }),\n  ),\n) {}\n\nexport const productCreateManyItemSchema = z.object({\n  name: z.string(),\n  price: z.number(),\n  productType: z.string(),\n  amount: z.number().optional(),\n  plan: z.number().nullable().optional(),\n  extendedDescriptionData: z.any().optional(),\n  restricted: z.number().nullable().optional(),\n  fileSize: z.string().nullable().optional(),\n  storeDuration: z.number().nullable().optional(),\n  hasAds: z.string().nullable().optional(),\n  tecSupport: z.string().nullable().optional(),\n})\n\nexport class SdkProductCreateManyItemDto extends createZodDto(productCreateManyItemSchema) {}\n\nexport const updatePaidProfileSchema = z.object({\n  product: z.object({\n    productType: z.any(),\n    plan: z.number().nullable(),\n    amount: z.number().nullable(),\n    validityPeriod: z.number().nullable(),\n  }),\n})\n\nexport const updateFreeProfileSchema = z.object({\n  product: z.object({\n    productType: z.any(),\n    plan: z.number().nullable(),\n    amount: z.number().nullable(),\n    validityPeriod: z.number().nullable(),\n  }),\n})\n\nexport const wxPayQuerySchema = z.object({\n  status: z.number(),\n  trade_state: z.string(),\n  transaction_id: z.string(),\n  payer: z.object({\n    openid: z.string(),\n  }),\n})\n\nexport type TWxPayQuery = z.infer<typeof wxPayQuerySchema>\n\nexport const fwhLoginSchema = z.object({\n  code: z.string(),\n})\n\nexport class fwhLoginTenantJwtPayloadSchemaDto extends createZodDto(fwhLoginSchema.merge(tenantJwtPayloadSchema)) {}\n\nexport const amountUpdateSchema = z.object({\n  action: z.enum(['decrement']).optional(),\n  count: z.number().optional(),\n})\n\nexport class amountUpdateSchemaDto extends createZodDto(amountUpdateSchema) {}\n\nexport class amountUpdateUserJwtPayloadSchemaDto extends createZodDto(amountUpdateSchema.merge(userJwtPayloadSchema)) {}\n\nexport const createOrderSchema = z.object({\n  productId: z.string(),\n  openid: z.string().optional(),\n})\n\nexport class SdkCreateOrderDto extends createZodDto(createOrderSchema) {}\n\nexport class createOrderUserJwtPayloadSchemaDto extends createZodDto(createOrderSchema.merge(userJwtPayloadSchema)) {}\n\nexport const transactionsNativeSchema = z.object({\n  orderId: z.string(),\n  desc: z.string(),\n  total: z.number(),\n  openid: z.string().optional(),\n})\n\nexport class transactionsNativeSchemaDto extends createZodDto(transactionsNativeSchema) {}\n\nexport const createOrderJSAPISchema = createOrderSchema.extend({ openid: z.string() })\n\nexport class SdkCreateOrderInJSAPIDto extends createZodDto(createOrderJSAPISchema) {}\n\nexport const createQuickOrderSchema = createOrderSchema.extend({\n  // 快捷创建需要客户端提供一个匿名 Token\n  anonymousCustomerToken: z.string(),\n})\n\nexport class SdkCreateQuickOrderDto extends createZodDto(createQuickOrderSchema) {}\n\nexport class createQuickOrderTenantJWTPayloadSchemaDto extends createZodDto(\n  createQuickOrderSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport const appCreateV4Schema = z.object({\n  displayName: z.string(),\n})\n\nexport class appCreateV4SchemaDto extends createZodDto(appCreateV4Schema) {}\n\nexport const validateTenantSchema = z.object({\n  name: z.string(),\n  password: z.string(),\n})\n\nexport class validateTenantSchemaDto extends createZodDto(validateTenantSchema) {}\n\nexport const validateByEmailSchema = z.object({\n  email: z.string(),\n  tenantId: z.number(),\n  password: z.string(),\n})\n\nexport class validateByEmailSchemaDto extends createZodDto(validateByEmailSchema) {}\n\nexport const _resetTenantPasswordSchema = z.object({\n  id: z.number(),\n})\n\nexport class _resetTenantPasswordSchemaDto extends createZodDto(_resetTenantPasswordSchema) {}\n\nexport const customerExtendDataSchema = z\n  .object({\n    biz: z.string(),\n    icp: z.string().nullable(),\n    contact: z\n      .object({\n        email: z.string(),\n        phone: z.string(),\n        address: z.string(),\n      })\n      .partial(),\n    companyName: z.string(),\n    description: z.string(),\n  })\n  .partial()\n\nexport class customerExtendDataSchemaDto extends createZodDto(customerExtendDataSchema) {}\n\nexport const kanzhunDetailSchema = z\n  .object({\n    公司全称: z.string(),\n    联系方式: z.array(z.string()),\n    地址: z.string(),\n    简介: z.string(),\n  })\n  .partial()\n\nexport class kanzhunDetailSchemaDto extends createZodDto(kanzhunDetailSchema) {}\n\nexport const kanzhunItemSchema = z\n  .object({\n    id: z.number(),\n    name: z.string(),\n    detail: kanzhunDetailSchema,\n  })\n  .partial()\n\nexport class kanzhunItemSchemaDto extends createZodDto(kanzhunItemSchema) {}\n\nexport const kanzhunDataSchema = z\n  .object({\n    date: z.string(),\n    data: z.array(kanzhunItemSchema),\n  })\n  .partial()\n\nexport const sendSmsVerifyCodeSchema = z.object({ mobile: z.string() })\n\nexport class sendSmsVerifyCodeSchemaDto extends createZodDto(sendSmsVerifyCodeSchema) {}\n\nexport const refreshTokenSchema = z.object({ rt: z.string() })\n\nexport class refreshTokenSchemaDto extends createZodDto(refreshTokenSchema) {}\n\nexport const loginSchema = z.object({\n  username: z.string(),\n  password: z.string().min(4),\n})\n\nexport class loginSchemaDto extends createZodDto(loginSchema) {}\n\nexport const getMenuByTenantNameSchema = z.object({\n  tenantName: z.string(),\n})\n\nexport class getMenuByTenantNameSchemaDto extends createZodDto(getMenuByTenantNameSchema) {}\n\nexport const getMenuSchema = z.object({\n  tenantId: z.number(),\n})\n\nexport class getMenuSchemaDto extends createZodDto(getMenuSchema) {}\n\n// https://github.com/colinhacks/zod/discussions/2245\nexport const baseMenuItemSchema = z.object({\n  name: z.string(),\n  slug: z.string(),\n  id: z.string(),\n})\n\nexport type MenuItem = z.infer<typeof baseMenuItemSchema> & {\n  children?: MenuItem[]\n}\n\nexport const menuItemSchema: z.ZodType<MenuItem> = baseMenuItemSchema.extend({\n  children: z.lazy(() => menuItemSchema.array().optional()),\n})\n\nexport class menuItemSchemaDto extends createZodDto(menuItemSchema) {}\n\nexport const deploySiteToCosSchema = z.object({\n  siteId: z.number(),\n})\n\nexport class deploySiteToCosSchemaDto extends createZodDto(deploySiteToCosSchema) {}\n\nconst StartSchema = z.object({\n  tenantId: z.string(),\n  processDefKey: z.string(),\n  businessKey: z.union([z.number(), z.string()]),\n})\n\nexport class StartSchemaDto extends createZodDto(StartSchema) {}\n\nconst GetTaskFormSchema = z.object({\n  taskId: z.string(),\n})\n\nexport class GetTaskFormSchemaDto extends createZodDto(GetTaskFormSchema) {}\n\nexport const getTasksSchema = z.object({\n  tenantIdIn: z.array(z.string()),\n})\n","module.exports = require(\"@flowda/schema\");","module.exports = require(\"@flowda/types\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@trpc/client\");","module.exports = require(\"@trpc/server\");","module.exports = require(\"@trpc/server/adapters/express\");","module.exports = require(\"axios\");","module.exports = require(\"consola\");","module.exports = require(\"dayjs\");","module.exports = require(\"dayjs/plugin/advancedFormat\");","module.exports = require(\"dayjs/plugin/timezone\");","module.exports = require(\"dayjs/plugin/utc\");","module.exports = require(\"http-proxy-middleware\");","module.exports = require(\"inversify\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"lodash\");","module.exports = require(\"nestjs-zod\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"pluralize\");","module.exports = require(\"qs\");","module.exports = require(\"radash\");","module.exports = require(\"tslib\");","module.exports = require(\"znv\");","module.exports = require(\"zod\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger } from '@nestjs/common'\nimport { NestFactory } from '@nestjs/core'\n\nimport { AppModule } from './app/app.module'\nimport { FLOWDA_GATEWAY_ENV, TrpcRouter } from '@flowda-projects/flowda-gateway-trpc-server'\nimport { createProxyMiddleware } from 'http-proxy-middleware'\nimport { ExtractJwt } from 'passport-jwt'\nimport type { JwtPayload } from 'jsonwebtoken'\nimport * as jwt from 'jsonwebtoken'\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule)\n\n  app.enableCors()\n  const globalPrefix = 'flowda-gateway-api'\n  app.setGlobalPrefix(globalPrefix)\n\n  const trpc = app.get(TrpcRouter)\n  trpc.applyMiddleware(app, globalPrefix)\n\n  app.use((req, res, next) => {\n    if (req.originalUrl.includes('favicon.ico')) {\n      res.status(204).end()\n    } else if (req.url.indexOf(`/${globalPrefix}/camunda/engine-rest/`) > -1) {\n      const extract = ExtractJwt.fromAuthHeaderAsBearerToken()\n      const bearerToken = extract(req)\n      if (bearerToken) {\n        try {\n          const authed = jwt.verify(bearerToken, FLOWDA_GATEWAY_ENV.ACCESS_TOKEN_SECRET) as JwtPayload\n          if (authed) {\n            next()\n          } else {\n            res.status(401).json({\n              message: '[PROXY] Unauthorized',\n            })\n          }\n        } catch (e) {\n          res.status(401).json({\n            message: '[PROXY] Unauthorized',\n          })\n        }\n      } else {\n        res.status(401).json({\n          message: '[PROXY] Unauthorized',\n        })\n      }\n    } else {\n      next()\n    }\n  })\n\n  // Proxy endpoints\n  app.use(\n    `/${globalPrefix}/camunda/engine-rest`,\n    createProxyMiddleware({\n      logLevel: 'debug',\n      target: FLOWDA_GATEWAY_ENV.C7_REST_URL,\n      changeOrigin: true,\n      onProxyReq(proxyReq) {\n        // camunda rest api 需要设置请求头，否则报错 npe\n        proxyReq.setHeader('Content-Type', 'application/json')\n        proxyReq.setHeader('Accept', 'application/json')\n      },\n      pathRewrite: {\n        [`^/${globalPrefix}/camunda/engine-rest`]: '/engine-rest',\n      },\n    }),\n  )\n\n  const port = process.env.PORT || 3310\n  await app.listen(port)\n  Logger.log(`🚀 Application is running on: http://localhost:${port}/${globalPrefix}`)\n}\n\nbootstrap()\n"],"names":["AppController","constructor","hi","Get","Controller","AppModule","Module","imports","ServicesModule","controllers","providers","provide","APP_PIPE","useClass","ZodValidationPipe","console","log","Object","keys","FLOWDA_GATEWAY_ENV","forEach","k","container","load","flowdaGatewayTrpcServerModule","bind","toFactory","context","name","Logger","servicesContainer","Container","loadModule","services","getServices","Global","exports","axiosApiInstance","create","interceptors","request","use","config","url","info","path","qstr","split","method","JSON","stringify","qs","parse","data","error","Promise","reject","response","parseEnv","process","env","ACCESS_TOKEN_SECRET","z","string","min","FLOWDA_URL","CMS_ADMIN_URL","YONGCHENG_URL","TIANBAO_URL","C7_REST_URL","ContainerModule","AxiosInstanceSymbol","toConstantValue","GatewayRegisterSymbol","to","GatewayRegister","inSingletonScope","onActivation","injectable","register","id","trpcEndpoint","TrpcService","toSelf","ContextFactory","HelloRouter","bindService","TrpcRouter","flowdaTrpc","createTRPCProxyClient","links","httpBatchLink","headers","transformer","input","serialize","object","deserialize","output","loggerFactory","_services","this","logger","serv","Array","isArray","s","registerItem","find","warn","push","getTrpc","serviceId","Error","inject","trpc","axios","gatewayRegister","helloRouter","router","validate","procedure","username","password","mutation","user","mutate","createRoot","any","query","opts","visible","children","map","v","rest","selected","expanded","resolveChildren","protectedProcedure","pid","tenantName","parentId","menuData","menu","getMenuByTenantName","convertMenuToTheia","getResourceSchema","getResourceInputSchema","ctx","service","tenant","theSchema","result","schemaName","namespace","getResourceData","getResourceDataInputSchema","getSchema","uniqParam","findUniqueResourceDataInputSchema","safeParse","manyParam","findManyResourceDataInputSchema","success","slug","pageSize","current","sort","convertSortAgToMotor","filterModel","encodeURIComponent","putResourceData","putResourceDataInputSchema","value","updatedValue","postResourceData","postResourceDataInputSchema","removeResourceData","removeResourceDataInputSchema","mapMenuItemToTheiaMenu","menuItem","uri","length","undefined","toSchemaName","traverse","tree","visit","child","item","ret","createContext","diag","contextFactory","appRouter","hello","applyMiddleware","app","globalPrefix","trpcExpress","createExpressMiddleware","initTRPC","errorFormatter","at","processAt","req","authorization","payload","verifyAccessToken","jwt","userRet","findUnique","ctxUserSchema","e","TRPCError","code","next","mergeRouters","trim","flowdaSharedModule","bindServiceSymbol","DataServiceSymbol","DataService","LegacySchemaServiceSymbol","LegacySchemaService","SchemaServiceSymbol","SchemaService","PrismaSchemaServiceSymbol","PrismaSchemaService","PrismaUtilsSymbol","PrismaUtils","SchemaTransformerSymbol","SchemaTransformer","inTransientScope","get","setZodType","DynamicTableSchemaTransformerSymbol","DynamicTableSchemaTransformer","prisma","prismaSchemaService","reqUser","pathname","findParamRet","toFindParam","_","isEmpty","resource","action","param","isDeleted","omit","count","$transaction","where","pagination","total","put","values","updateParamRet","toUpdateParam","prevRet","select","mapValues","auditChanges","reduce","acc","update","auditInfo","auditId","auditType","userId","version","debug","audits","post","createParamRet","toCreateParam","ref","refId","refModelName","reference","model_name","lowerFirst","include","remove","assDelStrategy","getAssociationDeleteStrategy","toRemoveParam","ass","findMany","relatedDisplayName","PrismaClientSymbol","transform","cols","dynamicTableDefColumns","c","assign","column_type","type","extendedSchema","toModelName","toPath","schema_name","primary_key","columns","is_dynamic","modelSchemaFactory","czt","time","schema","indexOf","buildSchema","toSchema","schemaCache","timeEnd","getSchemaCache","CustomZodSchemaSymbol","unknown","optional","describe","prismaUtils","schemaService","toPrismaSelect","fields","theResourceSchema","fieldsArr","filter","cur","parsedPath","matchPath","resolve","last","parent","lastResource","lastResourceSchema","resourceSchema","assoRet","associations","origin","camel","queryFields","inc","refSelect","getRefSelect","selectRet","parseId","convertQueryToPrismaFilter","orderBy","convertToOrderBy","skip","Number","take","pResource","omitBy","isUndefined","createdAt","slice","includeRef","refColumn","col","display_column","refSchema","displayCols","disCol","relationField","display_column2","convertAgFilterModelToPrismaFilter","andIdx","findIndex","orIdx","mapItemToPrismaFilter","q","searchable_columns","OR","contains","agFilter","parsedRet","agFilter1Schema","agFilter2Schema","operator","cond","conditions","matchRet","removeRelationFields","assSchema","relCol","ac","modelName","display_name","id2","assDisconnect","mapKeys","kk","refCol","isLikeNumber","key","set","replace","uniqueCols","uniqueCol","relationFields","kProp","_getDmmf","modelMap","parseInt","zodType","errMsg","jsonschema","zodToOpenAPI","json","toJSON","f","modelNameToSchemaName","colId","levelColorMap","style","level","msg","CustomError","message","extra","super","extend","tz","add","format","match","padStart","day","toDate","plur","addSingularRule","addPluralRule","REG","NUM_REG","test","startCase","camelCase","singular","plural","snakeCase","ret1","p","toNumber","displayName","Symbol","for","FlowdaTrpcClientSymbol","APISymbol","URLSymbol","ENVSymbol","K3CloudIdentifyInfoSymbol","COSSymbol","SmsClientSymbol","WechatOAuthSymbol","DynamicTableDataServiceSymbol","DynamicTableDefServiceSymbol","MenuServiceSymbol","WechatpayNodeV3Symbol","WechatpayNodeV3FactorySymbol","EPlan","Serial_Min","Serial_Max","AugmentedZodDto","isZodDto","extendZod","wmsCustomerSchema","customerCode","openapi","description","customerName","masterId","contact","contactInfo","status","union","literal","organizationId","wmsGoodsSchema","goodsCode","goodsName","goodsTypeId","goodsAttribute","specification","measurementUnit","goodsPackageId","batchId","goodsInspectMode","number","width","high","volume","grossWeight","netWeight","minStock","maxStock","maxStorageTime","isAuto","choppedQuantity","choppedLayer","goodsPicture","fSeitBrand","fSeitCasePackage","fSeitMsl","fRefCost","fSeitMpn","wmsGoodsMslSchema","mslCode","wmsGoodsUtilSchema","unitId","wmsStockSchema","wmsSupplierSchema","supplierCode","supplierName","remark","wmsGoodsTypeSchema","goodsTypeCode","goodsTypeName","wmsWarehousingItemSchema","FBillNo","FDate","FDocumentStatus","FMaterialId","FQty","FLot","FStockId","wmsOEMReturnSchema","array","wmsOEMWarehousingSchema","wmsOtherWarehousingSchema","FSupplierId","wmsProduceReturnWarehousingSchema","FAPPQty","wmsProduceWarehousingSchema","FMustQty","FRealQty","wmsPurchaseWarehousingSchema","wmsSubReturnWarehousingSchema","wmsPRDFeedMtrlSchema","FActualQty","wmsUpdateWarehousingAuditToErpSchema","orderType","sourceOrderCode","wmsOEMAddOutWarehouseSchema","wmsOEMOutWarehouseSchema","wmsOtherOutWarehouseSchema","wmsProduceOutWarehouseSchema","wmsPurchaseReturnOutWarehouseSchema","FRMREALQTY","wmsSaleOutWarehouseSchema","FCustomerID","wcsNoticeMouldIntoStockSchema","noticeId","example","goodsList","containerCode","title","wcsNoticeMouldOutStockSchema","startLoc","wmsMouldGetMouldTypeSchema","loc","wmsMouldGetMouldTypeOutput1Schema","boolean","endLoc","wmsMouldGetMouldTypeOutput2Schema","wmsMouldFinishSchema","wcsNoticeMaterialSendSchema","wcsNoticeProductIntoStockSchema","wcsNoticePlasticIntoStockSchema","instructionType","wcsNoticeProduceReturnSchema","wcsNoticeProductOutStockSchema","callbackNoticePlasticIntoStockInputSchema","okResponse","notOkResponse","materialCode","documentCode","srmGetDeliverDocListByCode","srmGetDeliverDocListByCodeOkRes","materialList","apsCheckMaterialRequirement","oaRequestMaterialNoExceedRequirement","note","oaNotPass","reason","sapCheckMinMax","qty","sapCheckMinMaxRes","max","oaRequestMaxStockApprove","todo","sapGetQualityAssurance","getTodoPreReceiptInventoryFormRes","getQmsStatusByDocumentCodeType1Res","getQmsStatusByDocumentCodeType2Res","getQmsStatusByDocumentCodeType3Res","getQmsStatusByDocumentCodeType4Res","getMaterialReturnRequestRes","isPlastic","selectOptionSchema","label","resourceAssociationSchema","foreign_key","resourceColumnSchema","access_type","enum","select_options","validators","required","nullable","display_primary_key","__jsonschema","agFilterInnerSchema","filterType","agFilterInner2Schema","record","agFilterSchema","or","_ref","agSortSchema","prismaFilterSchema","registerSchema","tenantId","RegisterDto","createZodDto","accountExistsSchema","AccountExistsSchemaDto","validateSchema","validateSchemaDto","getTenantByNameSchema","GetTenantByNameSchemaDto","findByUnionIdAndTenantIdSchema","unionid","FindByUnionIdAndTenantIdSchemaDto","registerByUnionIdSchema","RegisterByUnionIdSchemaDto","resetPasswordSchema","_resetPasswordSchema","tid","resetPasswordSchemaDto","verifyMobileSchema","uid","mobile","verifyMobileSchemaDto","tenantJwtPayloadSchema","userJwtPayloadSchema","userJwtPayloadSchemaDto","customerPreSignupSchema","email","customerPreSignupSchemaDto","customerPreSignupTenantJwtPayloadSchemaDto","merge","customerSignupSchema","verifyCode","customerSignupSchemaDto","customerSignupTenantJwtPayloadSchemaDto","wxGetAccessTokenRes","access_token","expires_in","refresh_token","openid","scope","create_at","wxGetUserRes","nickname","sex","headimgurl","language","city","province","country","privilege","wxValidateUserSchema","wxValidateUserTenantJwtPayloadSchemaDto","generateRecoveryCodeSchema","generateRecoveryCodeSchemaDto","generateRecoveryCodeTenantJwtSchemaDto","GenerateRecoveryCodeDto","appId","resetPasswordWithRecoveryCodeSchema","recoveryCode","resetPasswordWithRecoveryCodeSchemaDto","resetPasswordWithRecoveryCodeTenantJwtSchemaDto","ResetPasswordDto","productCreateManyItemSchema","price","productType","amount","plan","extendedDescriptionData","restricted","fileSize","storeDuration","hasAds","tecSupport","SdkProductCreateManyItemDto","updatePaidProfileSchema","product","validityPeriod","updateFreeProfileSchema","wxPayQuerySchema","trade_state","transaction_id","payer","fwhLoginSchema","fwhLoginTenantJwtPayloadSchemaDto","amountUpdateSchema","amountUpdateSchemaDto","amountUpdateUserJwtPayloadSchemaDto","createOrderSchema","productId","SdkCreateOrderDto","createOrderUserJwtPayloadSchemaDto","transactionsNativeSchema","orderId","desc","transactionsNativeSchemaDto","createOrderJSAPISchema","SdkCreateOrderInJSAPIDto","createQuickOrderSchema","anonymousCustomerToken","SdkCreateQuickOrderDto","createQuickOrderTenantJWTPayloadSchemaDto","appCreateV4Schema","appCreateV4SchemaDto","validateTenantSchema","validateTenantSchemaDto","validateByEmailSchema","validateByEmailSchemaDto","_resetTenantPasswordSchema","_resetTenantPasswordSchemaDto","customerExtendDataSchema","biz","icp","phone","address","partial","companyName","customerExtendDataSchemaDto","kanzhunDetailSchema","kanzhunDetailSchemaDto","kanzhunItemSchema","detail","kanzhunItemSchemaDto","kanzhunDataSchema","date","sendSmsVerifyCodeSchema","sendSmsVerifyCodeSchemaDto","refreshTokenSchema","rt","refreshTokenSchemaDto","loginSchema","loginSchemaDto","getMenuByTenantNameSchema","getMenuByTenantNameSchemaDto","getMenuSchema","getMenuSchemaDto","baseMenuItemSchema","menuItemSchema","lazy","menuItemSchemaDto","deploySiteToCosSchema","siteId","deploySiteToCosSchemaDto","StartSchema","processDefKey","businessKey","StartSchemaDto","GetTaskFormSchema","taskId","GetTaskFormSchemaDto","getTasksSchema","tenantIdIn","module","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","NestFactory","enableCors","setGlobalPrefix","res","originalUrl","includes","end","bearerToken","ExtractJwt","fromAuthHeaderAsBearerToken","extract","verify","createProxyMiddleware","logLevel","target","changeOrigin","onProxyReq","proxyReq","setHeader","pathRewrite","port","PORT","listen","bootstrap"],"sourceRoot":""}