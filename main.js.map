{"version":3,"file":"main.js","mappings":"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","sources":["webpack://@flowda-projects/flowda-gateway-api/./src/app/app.controller.ts","webpack://@flowda-projects/flowda-gateway-api/./src/app/app.module.ts","webpack://@flowda-projects/flowda-gateway-api/./src/loadModule.ts","webpack://@flowda-projects/flowda-gateway-api/./src/services/services.module.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/axios.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/flowda-gateway-env.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/flowdaGatewayTrpcServer.module.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/index.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/trpc-client.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/trpc/hello.router.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/trpc/hello.utils.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/trpc/trpc.context.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/trpc/trpc.router.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-gateway-trpc-server/src/trpc/trpc.service.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared-types/src/index.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared-types/src/symbols.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared-types/src/types.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared-types/src/zod-utils.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared-types/src/zods-wms.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared-types/src/zods.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/flowdaShared.module.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/index.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/services/data/data.service.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/services/schema/dynamicTableSchemaTransformer.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/services/schema/legacySchemaService.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/services/schema/meta.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/services/schema/prismaSchema.service.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/services/schema/prismaUtils.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/services/schema/schema.service.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/services/schema/schemaTransformer.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/utils/ag-grid-utils.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/utils/browser-log-utils.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/utils/custom-error.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/utils/dayjs-utils.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/utils/matchPath.ts","webpack://@flowda-projects/flowda-gateway-api/../../libs/flowda-shared/src/utils/schema-utils.ts","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"@flowda/schema\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"@flowda/types\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"@nestjs/common\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"@nestjs/core\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"@trpc/client\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"@trpc/server\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"@trpc/server/adapters/express\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"axios\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"consola\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"dayjs\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"dayjs/plugin/advancedFormat\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"dayjs/plugin/timezone\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"dayjs/plugin/utc\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"http-proxy-middleware\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"inversify\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"jsonwebtoken\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"lodash\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"nestjs-zod\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"passport-jwt\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"pluralize\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"qs\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"radash\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"tslib\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"znv\"","webpack://@flowda-projects/flowda-gateway-api/external commonjs \"zod\"","webpack://@flowda-projects/flowda-gateway-api/webpack/bootstrap","webpack://@flowda-projects/flowda-gateway-api/./src/main.ts"],"sourcesContent":["import { Controller, Get } from '@nestjs/common'\n\n@Controller('/apps')\nexport class AppController {\n  constructor() {}\n\n  @Get('/__hi')\n  async hi() {\n    return {\n      hi: 'flowda-gateway-api',\n    }\n  }\n}\n","import { Module } from '@nestjs/common'\nimport { APP_PIPE } from '@nestjs/core'\n\nimport { AppController } from './app.controller'\nimport { ServicesModule } from '../services/services.module'\nimport { ZodValidationPipe } from 'nestjs-zod'\n\n@Module({\n  imports: [ServicesModule],\n  controllers: [AppController],\n  providers: [\n    // todo 需要网关特有的 ExceptionFilter\n    // {\n    //   provide: APP_FILTER,\n    //   useClass: AppExceptionFilter,\n    // },\n    {\n      provide: APP_PIPE,\n      useClass: ZodValidationPipe,\n    },\n  ],\n})\nexport class AppModule {}\n","/* eslint-disable @typescript-eslint/no-var-requires */\n\nimport { interfaces } from 'inversify'\nimport { FLOWDA_GATEWAY_ENV, flowdaGatewayTrpcServerModule } from '@flowda-projects/flowda-gateway-trpc-server'\nimport { Logger, LoggerService } from '@nestjs/common'\n\nconsole.log('---------- ENV --------------')\nObject.keys(FLOWDA_GATEWAY_ENV).forEach(k => console.log(k, FLOWDA_GATEWAY_ENV[k]))\nconsole.log('---------- ENV --------------')\n\nexport function loadModule(container: interfaces.Container) {\n  container.load(flowdaGatewayTrpcServerModule)\n  container.bind<interfaces.Factory<LoggerService>>('Factory<Logger>').toFactory<LoggerService, [string]>(context => {\n    return name => {\n      return new Logger(name)\n    }\n  })\n}\n","import { Global, Module } from '@nestjs/common'\nimport { Container } from 'inversify'\nimport { getServices } from '@flowda/schema'\nimport { loadModule } from '../loadModule'\n\nexport const servicesContainer = new Container()\nloadModule(servicesContainer)\n\nconst services = getServices(servicesContainer)\n\n@Global()\n@Module({\n  providers: services,\n  exports: services,\n})\nexport class ServicesModule {\n  constructor() {}\n}\n","import axios from 'axios'\nimport * as qs from 'qs'\nimport consola from 'consola'\n\nexport const axiosApiInstance = axios.create()\n\naxiosApiInstance.interceptors.request.use(\n  async config => {\n    if (config.url == null) return config\n    console.info(`url        :`, config.url)\n    const [path, qstr] = config.url.split('?')\n    consola.info(`request : ${config.method} ${path}`)\n    consola.info(`query   : `)\n    console.log(JSON.stringify(qs.parse(qstr)))\n    consola.info(`data    : `)\n    console.log(JSON.stringify(config.data))\n    return config\n  },\n  error => {\n    Promise.reject(error)\n  },\n)\n\naxiosApiInstance.interceptors.response.use(\n  response => {\n    consola.info(`response: ${response.config.url}`)\n    console.log(JSON.stringify(response.data))\n    return response\n  },\n  async function (error) {\n    // console.error(error)\n    return Promise.reject(error)\n  },\n)\n","import { parseEnv } from 'znv'\nimport { z } from 'zod'\n\nexport const FLOWDA_GATEWAY_ENV = parseEnv(process.env, {\n  ACCESS_TOKEN_SECRET: z.string().min(1),\n  FLOWDA_URL: z.string().min(1),\n  CMS_ADMIN_URL: z.string().min(1),\n  YONGCHENG_URL: z.string().min(1),\n  TIANBAO_URL: z.string().min(1),\n  C7_REST_URL: z.string().min(1),\n})\n","import { ContainerModule } from 'inversify'\nimport { bindService } from '@flowda/schema'\nimport { TrpcService } from './trpc/trpc.service'\nimport { TrpcRouter } from './trpc/trpc.router'\nimport { ContextFactory } from './trpc/trpc.context'\nimport { GatewayRegister, HelloRouter } from './trpc/hello.router'\nimport { AxiosInstanceSymbol, GatewayRegisterSymbol } from '@flowda-projects/flowda-shared-types'\nimport { FLOWDA_GATEWAY_ENV } from './flowda-gateway-env'\nimport { AxiosInstance } from 'axios'\nimport { axiosApiInstance } from './axios'\n\nexport const flowdaGatewayTrpcServerModule = new ContainerModule(bind => {\n  bind<AxiosInstance>(AxiosInstanceSymbol).toConstantValue(axiosApiInstance)\n  bind<GatewayRegister>(GatewayRegisterSymbol)\n    .to(GatewayRegister)\n    .inSingletonScope()\n    .onActivation((context, injectable) => {\n      injectable.register([\n        {\n          id: 'superadmin',\n          name: '基础服务',\n          trpcEndpoint: `${FLOWDA_GATEWAY_ENV.FLOWDA_URL}/flowda-api/trpc`,\n        },\n        {\n          id: 'cms_admin',\n          name: 'CMS 管理后台',\n          trpcEndpoint: `${FLOWDA_GATEWAY_ENV.CMS_ADMIN_URL}/cms-admin-api/trpc`,\n        },\n        {\n          id: 'ycdev',\n          name: '永成测试',\n          trpcEndpoint: `${FLOWDA_GATEWAY_ENV.YONGCHENG_URL}/yongcheng-api/trpc`,\n        },\n        {\n          id: 'tianbao_uat',\n          name: '天宝UAT',\n          trpcEndpoint: `${FLOWDA_GATEWAY_ENV.TIANBAO_URL}/api/trpc`,\n        },\n      ])\n      return injectable\n    })\n  bind(TrpcService).toSelf().inSingletonScope()\n  bind(ContextFactory).toSelf().inSingletonScope()\n  bind(HelloRouter).toSelf().inSingletonScope()\n  bindService(bind, TrpcRouter)\n})\n","export * from './flowdaGatewayTrpcServer.module'\nexport * from './trpc/trpc.router'\nexport * from './flowda-gateway-env'\n","import { createTRPCProxyClient, httpBatchLink } from '@trpc/client'\nimport type { AppRouter as FlowdaAppRouter } from '@flowda-projects/flowda-services-trpc-server'\nimport { FLOWDA_GATEWAY_ENV } from './flowda-gateway-env'\n\nexport const flowdaTrpc = createTRPCProxyClient<FlowdaAppRouter>({\n  links: [\n    httpBatchLink({\n      url: `${FLOWDA_GATEWAY_ENV.FLOWDA_URL}/flowda-api/trpc`,\n      async headers() {\n        return {\n          'x-from': 'flowda-gateway',\n        }\n      },\n    }),\n  ],\n  transformer: {\n    input: {\n      // on client\n      serialize: object => object,\n      // on server -> resolver\n      deserialize: object => object,\n    },\n    output: {\n      // on server -> client\n      serialize: object => object,\n      // on client\n      deserialize: object => object,\n    },\n  },\n})\n","import { inject, injectable } from 'inversify'\nimport { TrpcService } from './trpc.service'\nimport type { LoggerService } from '@nestjs/common'\nimport { z } from 'zod'\nimport { flowdaTrpc } from '../trpc-client'\nimport { AxiosInstanceSymbol, GatewayRegisterSymbol } from '@flowda-projects/flowda-shared-types'\nimport { convertSortAgToMotor } from '@flowda-projects/flowda-shared'\nimport { convertMenuToTheia } from './hello.utils'\nimport {\n  findManyResourceDataInputSchema,\n  findUniqueResourceDataInputSchema,\n  getResourceDataInputSchema,\n  getResourceInputSchema,\n  postResourceDataInputSchema,\n  putResourceDataInputSchema,\n  removeResourceDataInputSchema,\n} from '@flowda/types'\nimport type { AxiosInstance } from 'axios'\n\ntype Service = {\n  /**\n   * @description 对应租户名称\n   */\n  id: string\n  name: string\n  trpcEndpoint: string\n}\n\n@injectable()\nexport class GatewayRegister {\n  private readonly logger\n\n  constructor(@inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService) {\n    this.logger = loggerFactory(HelloRouter.name)\n  }\n\n  register(serv: Service | Service[]) {\n    if (Array.isArray(serv)) {\n      serv.forEach(s => this.registerItem(s))\n    } else {\n      this.registerItem(serv)\n    }\n  }\n\n  private registerItem(serv: Service) {\n    if (this._services.find(s => s.id === serv.id)) {\n      this.logger.warn(`service ${serv.id} is already registered`)\n      return\n    }\n    this._services.push(serv)\n  }\n\n  private _services: Service[] = []\n\n  get services() {\n    return this._services\n  }\n\n  getTrpc(serviceId: string) {\n    const serv = this._services.find(s => s.id === serviceId)\n    if (!serv) throw new Error(`Not found ${serviceId}`)\n    return serv\n  }\n}\n\n@injectable()\nexport class HelloRouter {\n  private readonly logger\n\n  constructor(\n    @inject(TrpcService) private trpc: TrpcService,\n    @inject(AxiosInstanceSymbol) private axios: AxiosInstance,\n    @inject(GatewayRegisterSymbol) private gatewayRegister: GatewayRegister,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(HelloRouter.name)\n  }\n\n  helloRouter = this.trpc.router({\n    validate: this.trpc.procedure\n      .input(\n        z.object({\n          username: z.string(),\n          password: z.string(),\n        }),\n      )\n      .mutation(async ({ input }) => {\n        const ret = await flowdaTrpc.user.validate.mutate(input)\n        return ret\n      }),\n\n    createRoot: this.trpc.procedure.input(z.any()).query(async opts => {\n      const services = this.gatewayRegister.services.map(v => {\n        const { trpcEndpoint, ...rest } = v\n        return {\n          ...rest,\n          selected: false,\n          expanded: false,\n          children: [],\n        }\n      })\n      return {\n        id: 'WorkspaceNodeId',\n        name: 'WorkspaceNode',\n        visible: false,\n        children: services,\n      }\n    }),\n\n    resolveChildren: this.trpc.protectedProcedure.input(z.object({ pid: z.string() })).query(async opts => {\n      const [tenantName, parentId] = opts.input.pid.split('.')\n      const menuData = await flowdaTrpc.menu.getMenuByTenantName.query({ tenantName })\n      return convertMenuToTheia({\n        tenantName,\n        parentId,\n        menuData,\n      })\n    }),\n\n    getResourceSchema: this.trpc.protectedProcedure.input(getResourceInputSchema).query(async ({ input, ctx }) => {\n      const service = this.gatewayRegister.getTrpc(input.tenant)\n      // const schemaCache = await service.trpc.schema.getSchemaCache.query({})\n      const schemaCacheRes = await this.axios.request({\n        url: `${service.trpcEndpoint}/schema.getSchemaCache?input={}`,\n        method: 'get',\n      })\n      const theSchema = schemaCacheRes.data.result.data[input.schemaName]\n      theSchema.namespace = input.tenant\n      return theSchema\n    }),\n\n    getResourceData: this.trpc.protectedProcedure.input(getResourceDataInputSchema).query(async ({ input, ctx }) => {\n      const theSchema = await this.getSchema(input.tenant, input.schemaName)\n      const uniqParam = findUniqueResourceDataInputSchema.safeParse(input)\n      const manyParam = findManyResourceDataInputSchema.safeParse(input)\n      let query: any\n      let path: string\n      if (uniqParam.success) {\n        path = `${theSchema.slug!}/${uniqParam.data.id}`\n        query = {}\n      } else if (manyParam.success) {\n        path = theSchema.slug!\n        query = {\n          pageSize: manyParam.data.pageSize,\n          current: manyParam.data.current,\n          sort: convertSortAgToMotor(manyParam.data.sort),\n          filterModel: manyParam.data.filterModel,\n        }\n      } else {\n        throw new Error(`getResourceData input parse error`)\n      }\n\n      const service = this.gatewayRegister.getTrpc(input.tenant)\n      // return service.trpc.data.get.query({\n      //   user: ctx.user,\n      //   path,\n      //   query,\n      // })\n      const res = await this.axios.request({\n        method: 'get',\n        url: `${service.trpcEndpoint}/data.get?input=${encodeURIComponent(\n          JSON.stringify({\n            user: ctx.user,\n            path,\n            query,\n          }),\n        )}`,\n      })\n      return res.data.result.data\n    }),\n\n    putResourceData: this.trpc.protectedProcedure.input(putResourceDataInputSchema).mutation(async ({ input, ctx }) => {\n      const theSchema = await this.getSchema(input.tenant, input.schemaName)\n      const path = `${theSchema.slug!}/${input.id}`\n      const service = this.gatewayRegister.getTrpc(input.tenant)\n      // return service.trpc.data.put.mutate({\n      //   user: ctx.user,\n      //   path,\n      //   values: input.updatedValue,\n      // })\n      const res = await this.axios.request({\n        method: 'post',\n        url: `${service.trpcEndpoint}/data.put`,\n        data: {\n          user: ctx.user,\n          path,\n          value: input.updatedValue,\n        },\n      })\n      return res.data.result.data\n    }),\n\n    postResourceData: this.trpc.protectedProcedure\n      .input(postResourceDataInputSchema)\n      .mutation(async ({ input, ctx }) => {\n        const theSchema = await this.getSchema(input.tenant, input.schemaName)\n        const path = `${theSchema.slug!}`\n        const service = this.gatewayRegister.getTrpc(input.tenant)\n        const res = await this.axios.request({\n          method: 'post',\n          url: `${service.trpcEndpoint}/data.post`,\n          data: {\n            user: ctx.user,\n            path,\n            value: input.value,\n          },\n        })\n        return res.data.result.data\n      }),\n\n    removeResourceData: this.trpc.protectedProcedure\n      .input(removeResourceDataInputSchema)\n      .mutation(async ({ input, ctx }) => {\n        const theSchema = await this.getSchema(input.tenant, input.schemaName)\n        const path = `${theSchema.slug!}/${input.id}`\n        const service = this.gatewayRegister.getTrpc(input.tenant)\n        const res = await this.axios.request({\n          method: 'post',\n          url: `${service.trpcEndpoint}/data.remove`,\n          data: {\n            user: ctx.user,\n            path,\n          },\n        })\n        return res.data.result.data\n      }),\n  })\n\n  async getSchema(tenantName: string, schemaName: string) {\n    const service = this.gatewayRegister.getTrpc(tenantName)\n    // const schemaCache = await service.trpc.schema.getSchemaCache.query({})\n    const schemaCacheRes = await this.axios.request({\n      url: `${service.trpcEndpoint}/schema.getSchemaCache?input={}`,\n      method: 'get',\n    })\n    return schemaCacheRes.data.result.data[schemaName]\n  }\n}\n","import { menuItemSchemaDto } from '@flowda-projects/flowda-shared-types'\nimport { toSchemaName } from '@flowda-projects/flowda-shared'\n\nexport function mapMenuItemToTheiaMenu(input: { tenantName: string; menuItem: menuItemSchemaDto }) {\n  const { tenantName, menuItem } = input\n  return {\n    id: `${tenantName}.${menuItem.slug}`,\n    name: menuItem.name,\n    selected: false,\n    uri:\n      Array.isArray(menuItem.children) && menuItem.children.length > 0\n        ? undefined\n        : `grid://${tenantName}?schemaName=${toSchemaName(menuItem.slug)}&displayName=${menuItem.name}`,\n    expanded: Array.isArray(menuItem.children) && menuItem.children.length > 0 ? false : undefined,\n    children: Array.isArray(menuItem.children) && menuItem.children.length > 0 ? [] : undefined,\n  }\n}\n\nexport function convertMenuToTheia(input: {\n  tenantName: string\n  parentId: string | undefined\n  menuData: menuItemSchemaDto[]\n}) {\n  const { tenantName, parentId, menuData } = input\n  if (parentId == null /* 一级菜单 */) {\n    const ret = menuData.map(item => {\n      return mapMenuItemToTheiaMenu({ tenantName, menuItem: item })\n    })\n    return ret\n  } else {\n    let ret\n    menuData.forEach(menuItem =>\n      traverse(menuItem, item => {\n        if (item.slug === parentId) {\n          if (Array.isArray(item.children)) {\n            ret = item.children.map(child => mapMenuItemToTheiaMenu({ tenantName, menuItem: child }))\n          }\n        }\n      }),\n    )\n    return ret\n  }\n}\n\nexport function traverse(tree: menuItemSchemaDto, visit: (item: menuItemSchemaDto) => void) {\n  visit(tree)\n  if (tree.children && Array.isArray(tree.children) && tree.children.length > 0) {\n    tree.children?.forEach(child => {\n      traverse(child, visit)\n    })\n  }\n}\n","import * as trpcExpress from '@trpc/server/adapters/express'\nimport { inject, injectable } from 'inversify'\nimport { LoggerService } from '@nestjs/common'\nimport { createContext, diag } from '@flowda/schema'\n\n@injectable()\nexport class ContextFactory {\n  private readonly logger\n\n  constructor(@inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService) {\n    this.logger = loggerFactory(ContextFactory.name)\n  }\n\n  createContext = async (opts: trpcExpress.CreateExpressContextOptions) => {\n    const ctx = createContext(opts)\n    diag(ctx, `[createContext]`)\n    return ctx\n  }\n}\n\nexport type Context = Awaited<ReturnType<typeof ContextFactory.prototype.createContext>>\n","import { inject, injectable } from 'inversify'\nimport { TrpcService } from './trpc.service'\nimport type { INestApplication, LoggerService } from '@nestjs/common'\nimport * as trpcExpress from '@trpc/server/adapters/express'\nimport { ContextFactory } from './trpc.context'\nimport { HelloRouter } from './hello.router'\n\n// import { createOpenApiExpressMiddleware } from 'trpc-openapi'\n\n@injectable()\nexport class TrpcRouter {\n  private readonly logger\n\n  constructor(\n    @inject(TrpcService) private trpc: TrpcService,\n    @inject(HelloRouter) private helloRouter: HelloRouter,\n    @inject(ContextFactory) private contextFactory: ContextFactory,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(TrpcRouter.name)\n  }\n\n  appRouter = this.trpc.router({\n    hello: this.helloRouter.helloRouter,\n  })\n\n  applyMiddleware(app: INestApplication, globalPrefix: string) {\n    this.logger.log(`applyMiddleware ${globalPrefix}/trpc`)\n    // app.use(`/${globalPrefix}/trpc-api`, createOpenApiExpressMiddleware({ router: this.appRouter }))\n    app.use(\n      `/${globalPrefix}/trpc`,\n      trpcExpress.createExpressMiddleware({\n        router: this.appRouter,\n        createContext: this.contextFactory.createContext,\n      }),\n    )\n  }\n}\n\nexport type AppRouter = TrpcRouter[`appRouter`]\n","import { initTRPC, TRPCError } from '@trpc/server'\nimport { inject, injectable } from 'inversify'\nimport { Context } from './trpc.context'\nimport { LoggerService } from '@nestjs/common'\nimport { diag, errorFormatter, transformer } from '@flowda/schema'\nimport { flowdaTrpc } from '../trpc-client'\nimport { ctxUserSchema } from '@flowda/types'\n\n// import { OpenApiMeta } from 'trpc-openapi'\n\n@injectable()\nexport class TrpcService {\n  private readonly logger\n\n  constructor(@inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService) {\n    this.logger = loggerFactory(TrpcService.name)\n  }\n\n  trpc = initTRPC\n    .context<Context>()\n    // .meta<OpenApiMeta>()\n    .create({\n      transformer: transformer,\n      errorFormatter: errorFormatter,\n    })\n\n  procedure = this.trpc.procedure\n\n  protectedProcedure = this.trpc.procedure.use(async function (opts) {\n    const ctx = opts.ctx\n    diag(ctx, `[protectedProcedure]`)\n    let user\n    const at = processAt(ctx.req.headers.authorization)\n    diag(ctx, `processAt`, { at })\n    if (at) {\n      try {\n        const payload = await flowdaTrpc.user.verifyAccessToken.query({ jwt: at })\n        diag(ctx, `flowdaTrpc.user.verifyAccessToken`, payload)\n        const userRet = await flowdaTrpc.user.findUnique.query({ id: payload['uid'] })\n        user = ctxUserSchema.parse(userRet)\n      } catch (e) {\n        diag(ctx, `flowdaTrpc.user.verifyAccessToken`, e)\n      }\n    }\n    if (!user) {\n      throw new TRPCError({ code: 'UNAUTHORIZED' })\n    }\n    ctx.user = user\n    return opts.next({ ctx })\n  })\n\n  router = this.trpc.router\n  mergeRouters = this.trpc.mergeRouters\n}\n\nexport function processAt(input: any) {\n  if (typeof input !== 'string') return undefined\n  if (input.split(' ')[1] == null) return undefined\n  let ret = input.split(' ')[1]\n  if (ret.trim() === '') return undefined\n  ret = ret.trim()\n  if (ret === 'undefined' || ret === 'null') return undefined\n  return ret\n}\n","export * from './symbols'\nexport * from './types'\nexport * from './zods'\nexport * from './zods-wms'\nexport * from './zod-utils'\n","export const PrismaSchemaServiceSymbol = Symbol.for('PrismaSchemaService')\nexport const SchemaTransformerSymbol = Symbol.for('SchemaTransformer')\nexport const PrismaUtilsSymbol = Symbol.for('PrismaUtils')\nexport const DataServiceSymbol = Symbol.for('DataService')\nexport const LegacySchemaServiceSymbol = Symbol.for('LegacySchemaService')\nexport const SchemaServiceSymbol = Symbol.for('SchemaService')\nexport const DynamicTableSchemaTransformerSymbol = Symbol.for('DynamicTableSchemaTransformer')\nexport const FlowdaTrpcClientSymbol = Symbol.for('FlowdaTrpcClient')\nexport const APISymbol = Symbol('API')\nexport const URLSymbol = Symbol.for('URL')\nexport const ENVSymbol = Symbol.for('ENV')\nexport const K3CloudIdentifyInfoSymbol = Symbol.for('K3CloudIdentifyInfo')\nexport const COSSymbol = Symbol('COS')\nexport const SmsClientSymbol = Symbol.for('SmsClient')\nexport const WechatOAuthSymbol = Symbol.for('WechatOAuth')\nexport const DynamicTableDataServiceSymbol = Symbol.for('DynamicTableDataService')\nexport const DynamicTableDefServiceSymbol = Symbol.for('DynamicTableDefService')\nexport const MenuServiceSymbol = Symbol.for('MenuService')\nexport const WechatpayNodeV3Symbol = Symbol.for('WechatpayNodeV3Symbol')\nexport const WechatpayNodeV3FactorySymbol = Symbol.for('WechatpayNodeV3FactorySymbol')\nexport const GatewayRegisterSymbol = Symbol.for('GatewayRegister')\nexport const AxiosInstanceSymbol = Symbol.for('AxiosInstance')\n","export type TFilterFormValue =\n  | string\n  | {\n      column: string | undefined\n      condition: string | undefined\n      value: string | undefined\n    }\n\nexport enum EPlan {\n  Free = 1,\n  VIP = 2,\n}\n\nexport const Serial_Min = 10001\nexport const Serial_Max = 99999\n","// 从 https://github.com/risen228/nestjs-zod 提取\n// 提取的原因是去掉 nestjs 等 node 依赖\nimport { ZodSchema, ZodTypeDef } from 'zod'\n\nexport interface ZodDto<TOutput = any, TDef extends ZodTypeDef = ZodTypeDef, TInput = TOutput> {\n  new (): TOutput\n\n  isZodDto: true\n  schema: ZodSchema<TOutput, TDef, TInput>\n\n  create(input: unknown): TOutput\n}\n\nexport function createZodDto<TOutput = any, TDef extends ZodTypeDef = ZodTypeDef, TInput = TOutput>(\n  schema: ZodSchema<TOutput, TDef, TInput>,\n) {\n  class AugmentedZodDto {\n    public static isZodDto = true\n    public static schema = schema\n\n    public static create(input: unknown) {\n      return this.schema.parse(input)\n    }\n  }\n\n  return AugmentedZodDto as unknown as ZodDto<TOutput, TDef, TInput>\n}\n","import { extendZod } from '@flowda/schema'\nimport { z } from 'zod'\nextendZod(z)\nexport const wmsCustomerSchema = z.object({\n  customerCode: z.string().openapi({\n    description: '客户编号',\n  }),\n  customerName: z.string().openapi({\n    description: '客户名称',\n  }),\n  masterId: z.string().openapi({\n    description: '货主id',\n  }),\n  contact: z.string().openapi({\n    description: '联系人',\n  }),\n  contactInfo: z.string().openapi({\n    description: '联系方式',\n  }),\n  status: z.union([z.literal(1), z.literal(9)]).openapi({\n    description: '状态1、启用 0、禁用',\n  }),\n  organizationId: z.string().openapi({\n    description: '组织Id',\n  }),\n})\n\nexport const wmsGoodsSchema = z.object({\n  goodsCode: z.string().openapi({\n    description: '货物编号',\n  }),\n  goodsName: z.string().openapi({\n    description: '货物名称',\n  }),\n  goodsTypeId: z.string().openapi({\n    description: '货物类型id',\n  }),\n  goodsAttribute: z.string().openapi({\n    description: '货物属性',\n  }),\n  masterId: z.string().openapi({\n    description: '货主信息',\n  }),\n  specification: z.string().openapi({\n    description: '规格型号',\n  }),\n  measurementUnit: z.string().openapi({\n    description: '计量单位',\n  }),\n  goodsPackageId: z.string().openapi({\n    description: '包装规格id',\n  }),\n  batchId: z.string().openapi({\n    description: '批次id',\n  }),\n  goodsInspectMode: z.number().openapi({\n    description: '货物检验方式1、全检2、抽检3、免检',\n  }),\n  length: z.number().openapi({\n    description: '长',\n  }),\n  width: z.number().openapi({\n    description: '宽',\n  }),\n  high: z.number().openapi({\n    description: '高',\n  }),\n  volume: z.number().openapi({\n    description: '体积',\n  }),\n  grossWeight: z.number().openapi({\n    description: '毛重',\n  }),\n  netWeight: z.number().openapi({\n    description: '净重',\n  }),\n  minStock: z.number().openapi({\n    description: '最低库存',\n  }),\n  maxStock: z.number().openapi({\n    description: '最高库存',\n  }),\n  maxStorageTime: z.number().openapi({\n    description: '最长储存时间',\n  }),\n  isAuto: z.number().openapi({\n    description: '是否自动化1、是 0、否',\n  }),\n  choppedQuantity: z.number().openapi({\n    description: '剁型每层数量',\n  }),\n  choppedLayer: z.number().openapi({\n    description: '剁型层数',\n  }),\n  goodsPicture: z.string().openapi({\n    description: '货物图片',\n  }),\n  fSeitBrand: z.string().openapi({\n    description: '品牌',\n  }),\n  fSeitCasePackage: z.string().openapi({\n    description: '封装',\n  }),\n  fSeitMsl: z.string().openapi({\n    description: 'MSL',\n  }),\n  fRefCost: z.string().openapi({\n    description: '单位成本',\n  }),\n  fSeitMpn: z.string().openapi({\n    description: 'MPN',\n  }),\n  status: z.number().openapi({\n    description: '状态1、启用 0、禁用',\n  }),\n  organizationId: z.number().openapi({\n    description: '组织id',\n  }),\n})\n\nexport const wmsGoodsMslSchema = z.object({\n  mslCode: z.string().openapi({ description: 'MSL' }),\n})\n\nexport const wmsGoodsUtilSchema = z.object({\n  unitId: z.string().openapi({ description: '计量单位id' }),\n  name: z.string().openapi({ description: '计量单位名称' }),\n  code: z.string().openapi({ description: '计量单位code' }),\n})\n\nexport const wmsStockSchema = z.object({\n  id: z.string().openapi({ description: 'erp仓库id' }),\n  code: z.string().openapi({ description: 'erp仓库编码' }),\n})\n\nexport const wmsSupplierSchema = z.object({\n  supplierCode: z.string().openapi({ description: '供应商编号' }),\n  supplierName: z.string().openapi({ description: '供应商名称' }),\n  masterId: z.string().openapi({ description: '货主id' }),\n  contact: z.string().openapi({ description: '联系人' }),\n  contactInfo: z.string().openapi({ description: '联系方式' }),\n  remark: z.string().openapi({ description: '备注' }),\n  status: z.number().openapi({ description: '状态1、启用 0、禁用' }),\n  organizationId: z.string().openapi({ description: '组织Id' }),\n})\n\nexport const wmsGoodsTypeSchema = z.object({\n  goodsTypeCode: z.string().openapi({ description: '货物类型编号' }),\n  goodsTypeName: z.string().openapi({ description: '货物类型名称' }),\n  status: z.number().openapi({ description: '状态1、启用 0、禁用' }),\n  organizationId: z.string().openapi({ description: '组织Id' }),\n})\n\nexport const wmsWarehousingItemSchema = z.object({\n  FBillNo: z.string().openapi({ description: '单据号' }),\n  FDate: z.string().openapi({ description: '入库日期' }),\n  FDocumentStatus: z.string().openapi({ description: '单据状态 Z：暂存，A：创建，B：审核，C：已审核，D：重新审核' }),\n  FMaterialId: z.string().openapi({ description: '物料编码' }),\n  FQty: z.string().openapi({ description: '数量' }),\n  FLot: z.string().openapi({ description: '批次号' }),\n  FStockId: z.string().openapi({ description: '仓库编码' }),\n})\n\nexport const wmsOEMReturnSchema = z.array(wmsWarehousingItemSchema)\n\nexport const wmsOEMWarehousingSchema = z.array(wmsWarehousingItemSchema)\n\nexport const wmsOtherWarehousingSchema = z.array(\n  wmsWarehousingItemSchema.extend({\n    FSupplierId: z.string().openapi({ description: '供应商编码' }),\n  }),\n)\n\nexport const wmsProduceReturnWarehousingSchema = z.array(\n  wmsWarehousingItemSchema.extend({\n    FAPPQty: z.string().openapi({ description: '申请数量' }),\n    FQty: z.string().openapi({ description: '实退数量' }),\n  }),\n)\n\nexport const wmsProduceWarehousingSchema = z.array(\n  wmsWarehousingItemSchema\n    .omit({\n      FQty: true,\n    })\n    .extend({\n      FMustQty: z.string().openapi({ description: '应收数量' }),\n      FRealQty: z.string().openapi({ description: '实收数量' }),\n    }),\n)\n\nexport const wmsPurchaseWarehousingSchema = z.array(\n  wmsWarehousingItemSchema\n    .omit({\n      FQty: true,\n    })\n    .extend({\n      FMustQty: z.string().openapi({ description: '应收数量' }),\n      FRealQty: z.string().openapi({ description: '实收数量' }),\n      FSupplierId: z.string().openapi({ description: '供应商编码' }),\n    }),\n)\n\nexport const wmsSubReturnWarehousingSchema = z.array(\n  wmsWarehousingItemSchema.extend({\n    FAPPQty: z.string().openapi({ description: '申请数量' }),\n    FQty: z.string().openapi({ description: '实退数量' }),\n  }),\n)\n\nexport const wmsPRDFeedMtrlSchema = z.array(\n  wmsWarehousingItemSchema.extend({\n    FActualQty: z.string().openapi({ description: '实发数量' }),\n  }),\n)\n\nexport const wmsUpdateWarehousingAuditToErpSchema = z.object({\n  orderType: z.number().openapi({ description: '单据类型' }),\n  sourceOrderCode: z.string().openapi({ description: '来源单据' }),\n})\n\nexport const wmsOEMAddOutWarehouseSchema = z.array(\n  wmsWarehousingItemSchema\n    .omit({\n      FQty: true,\n    })\n    .extend({\n      FActualQty: z.string().openapi({ description: '实发数量' }),\n    }),\n)\n\nexport const wmsOEMOutWarehouseSchema = z.array(\n  wmsWarehousingItemSchema\n    .omit({\n      FQty: true,\n    })\n    .extend({\n      FActualQty: z.string().openapi({ description: '实发数量' }),\n    }),\n)\n\nexport const wmsOtherOutWarehouseSchema = z.array(wmsWarehousingItemSchema)\nexport const wmsProduceOutWarehouseSchema = z.array(\n  wmsWarehousingItemSchema\n    .omit({\n      FQty: true,\n    })\n    .extend({\n      FActualQty: z.string().openapi({ description: '实发数量' }),\n    }),\n)\nexport const wmsPurchaseReturnOutWarehouseSchema = z.array(\n  wmsWarehousingItemSchema\n    .omit({\n      FQty: true,\n    })\n    .extend({\n      FRMREALQTY: z.string().openapi({ description: '实退数量' }),\n    }),\n)\n\nexport const wmsSaleOutWarehouseSchema = z.array(\n  wmsWarehousingItemSchema\n    .omit({\n      FQty: true,\n    })\n    .extend({\n      FCustomerID: z.string().openapi({ description: '客户编码' }),\n      FRealQty: z.string().openapi({ description: '实发数量' }),\n    }),\n)\n\nexport const wcsNoticeMouldIntoStockSchema = z\n  .object({\n    noticeId: z.number().openapi({ description: '单据号', example: 'XSCK00001' }),\n    goodsList: z.array(\n      z.object({\n        containerCode: z.string().openapi({ description: '箱码', example: 'containerCode' }),\n      }),\n    ),\n  })\n  .openapi({\n    title: 'wcsNoticeMouldIntoStockSchema',\n    example: { noticeId: '单据号' },\n  })\n\nexport const wcsNoticeMouldOutStockSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  goodsList: z.array(\n    z.object({\n      containerCode: z.string().openapi({ description: '箱码' }),\n      startLoc: z.string().optional().openapi({ description: '模具源库位' }),\n    }),\n  ),\n})\n\nexport const wmsMouldGetMouldTypeSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  containerCode: z.string().openapi({ description: '单个箱码' }),\n  loc: z.string().optional().openapi({ description: '单个箱库位' }),\n  type: z.union([z.literal('类型1'), z.literal('类型2'), z.literal('类型3')]),\n})\n\nexport const wmsMouldGetMouldTypeOutput1Schema = z.object({\n  success: z.boolean().openapi({ example: 'true' }),\n  noticeId: z.number().openapi({ description: '单据号' }),\n  containerCode: z.string().openapi({ description: '单个箱码' }),\n  startLoc: z.string().optional().openapi({ description: '箱初始库位' }),\n  type: z.union([z.literal('类型1'), z.literal('类型2'), z.literal('类型3')]),\n  endLoc: z.string().optional().openapi({ description: '箱目标库位' }),\n})\n\nexport const wmsMouldGetMouldTypeOutput2Schema = z.object({\n  success: z.boolean().openapi({ example: 'false' }),\n  message: z.string().openapi({ description: '失败原因' }),\n})\n\nexport const wmsMouldFinishSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  containerCode: z.string().openapi({ description: '单个箱码' }),\n  startLoc: z.string().optional().openapi({ description: '箱初始库位' }),\n  endLoc: z.string().optional().openapi({ description: '箱目标库位' }),\n  type: z.union([z.literal('类型1'), z.literal('类型2'), z.literal('类型3')]),\n})\n\nexport const wcsNoticeMaterialSendSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  goodsList: z.array(\n    z.object({\n      containerCode: z.string().openapi({ description: '箱码' }),\n      startLoc: z.string().optional().openapi({ description: '箱初始库位' }),\n      endLoc: z.string().optional().openapi({ description: '箱目标库位' }),\n    }),\n  ),\n})\n\nexport const wcsNoticeProductIntoStockSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  goodsList: z.array(\n    z.object({\n      containerCode: z.string().openapi({ description: '箱码' }),\n      endLoc: z.string().optional().openapi({ description: '箱目标库位' }),\n    }),\n  ),\n})\n\nexport const wcsNoticePlasticIntoStockSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  containerCode: z.string().openapi({ description: '箱码' }),\n  endLoc: z.string().optional().openapi({ description: '箱目标库位' }),\n  instructionType: z.union([\n    z.literal('上架指令1'),\n    z.literal('上架指令2'),\n    z.literal('上架指令3'),\n    z.literal('上架指令4'),\n  ]),\n})\n\nexport const wcsNoticeProduceReturnSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  goodsList: z.array(\n    z.object({\n      containerCode: z.string().openapi({ description: '箱码' }),\n      endLoc: z.string().optional().openapi({ description: '箱目标库位' }),\n    }),\n  ),\n})\n\nexport const wcsNoticeProductOutStockSchema = z.object({\n  noticeId: z.number().openapi({ description: '单据号' }),\n  goodsList: z.array(\n    z.object({\n      containerCode: z.string().openapi({ description: '箱码' }),\n      startLoc: z.string().optional().openapi({ description: '箱初始库位' }),\n      endLoc: z.string().optional().openapi({ description: '箱目标库位' }),\n    }),\n  ),\n})\n\nexport const callbackNoticePlasticIntoStockInputSchema = z.object({\n  containerCode: z.string().openapi({ description: '箱码' }),\n})\n\nexport const okResponse = z\n  .object({\n    success: z.literal(true),\n    message: z.string(),\n  })\n  .openapi({\n    title: 'okResponse',\n  })\n\nexport const notOkResponse = z\n  .object({\n    success: z.literal(false),\n    message: z.string(),\n  })\n  .openapi({\n    title: 'notOkResponse',\n  })\n\nexport const materialCode = z.string().openapi({ example: 'todo', description: '物料编码' })\nconst documentCode = z.string().openapi({ example: '', description: '单据号' })\n\nexport const srmGetDeliverDocListByCode = z\n  .object({\n    materialCode,\n  })\n  .openapi({ title: 'srmGetDeliverDocListByCode', description: '物料编码从二维码提取' })\n\nexport const srmGetDeliverDocListByCodeOkRes = z\n  .object({\n    documentCode: z.string().openapi({\n      example: 'todo',\n      description: '送货单号',\n    }),\n    materialList: z.array(\n      z.object({\n        materialCode: z.string().openapi({\n          description: '物料编码',\n          example: 'todo',\n        }),\n        type: z.string().openapi({\n          description: '物料类型（区分 VMI）',\n          example: 'todo',\n        }),\n      }),\n    ),\n  })\n  .openapi({ title: 'srmGetDeliverDocListByCodeOkRes', description: 'todo' })\n\nexport const apsCheckMaterialRequirement = z\n  .array(\n    z.object({\n      materialCode,\n    }),\n  )\n  .openapi({ title: 'srmCheckMaterialRequirement', description: '支持批量获取，覆盖集码场景' })\n\nexport const oaRequestMaterialNoExceedRequirement = z\n  .object({\n    note: z.string().openapi({ example: 'todo', description: '备注' }),\n  })\n  .openapi({\n    title: 'oaRequestMaterialNoExceedRequirement',\n  })\n\nexport const oaNotPass = z\n  .object({\n    reason: z.string().openapi({\n      example: 'todo',\n      description: '不通过原因',\n    }),\n  })\n  .openapi({\n    title: 'oaNotPass',\n  })\n\nexport const sapCheckMinMax = z\n  .array(\n    z.object({\n      materialCode,\n      qty: z.number().openapi({ example: 12, description: '物料数量' }),\n    }),\n  )\n  .openapi({\n    title: 'srmCheckMinMax',\n  })\n\nexport const sapCheckMinMaxRes = z\n  .array(\n    z.object({\n      materialCode,\n      qty: z.number().openapi({ example: 12, description: '当前库存量' }),\n      max: z.number().openapi({ example: 20, description: '最大库存量' }),\n    }),\n  )\n  .openapi({\n    title: 'sapCheckMinMaxRes',\n  })\n\nexport const oaRequestMaxStockApprove = z\n  .object({\n    note: z.string().openapi({ example: 'todo', description: '备注' }),\n  })\n  .openapi({\n    title: 'oaRequestMaxStockApprove',\n  })\n\nexport const todo = z\n  .object({\n    todo: z.string().openapi({ example: '', description: 'todo' }),\n  })\n  .openapi({ title: 'todo' })\n\nexport const sapGetQualityAssurance = z\n  .array(\n    z.object({\n      materialCode,\n    }),\n  )\n  .openapi({\n    title: 'sapGetQualityAssurance',\n    description: '支持批量',\n  })\n\nexport const getTodoPreReceiptInventoryFormRes = z\n  .array(\n    z.object({\n      documentCode: z.string().openapi({ description: '预收单号', example: 'todo' }),\n      materialList: z.array(\n        z.object({\n          materialCode: materialCode,\n          note: z.string().openapi({ description: '距离上次送货6个月以上' }),\n        }),\n      ),\n    }),\n  )\n  .openapi({\n    title: 'getTodoPreReceiptInventoryFormRes',\n  })\n\nexport const getQmsStatusByDocumentCodeType1Res = todo.openapi({\n  description: '退库',\n  title: 'getQmsStatusByDocumentCodeType1Res',\n})\n\nexport const getQmsStatusByDocumentCodeType2Res = todo.openapi({\n  description: '损耗',\n  title: 'getQmsStatusByDocumentCodeType2Res',\n})\n\nexport const getQmsStatusByDocumentCodeType3Res = todo.openapi({\n  description: '合格',\n  title: 'getQmsStatusByDocumentCodeType3Res',\n})\n\nexport const getQmsStatusByDocumentCodeType4Res = todo.openapi({\n  description: '让步接收',\n  title: 'getQmsStatusByDocumentCodeType4Res',\n})\n\nexport const getMaterialReturnRequestRes = z\n  .object({\n    documentCode: documentCode,\n    materialList: z.array(\n      z.object({\n        materialCode: materialCode,\n        isPlastic: z.string().openapi({ description: '是否是塑胶件' }),\n      }),\n    ),\n  })\n  .openapi({\n    title: 'getMaterialReturnRequestRes',\n    description: '包括工单退料和不合格品退料',\n  })\n","import { z } from 'zod'\nimport { createZodDto } from './zod-utils'\nimport { extendZod } from '@flowda/schema'\n\nextendZod(z)\n\nexport const selectOptionSchema = z.object({\n  value: z.union([z.string(), z.number()]),\n  label: z.string(),\n})\n\nexport const resourceAssociationSchema = z.object({\n  foreign_key: z.string(),\n  model_name: z.string(),\n  primary_key: z.string(),\n  name: z.string(),\n  slug: z.string(),\n  display_name: z.string(),\n  schema_name: z.string(),\n})\n\nexport const resourceColumnSchema = z.object({\n  name: z.string(),\n  access_type: z.enum(['read_only']).optional(),\n  column_type: z.enum(['reference', 'string', 'tag', 'integer', 'datetime', 'textarea', 'boolean']),\n  prisma: z.boolean().optional(),\n  format: z\n    .object({\n      select_options: selectOptionSchema.array(),\n    })\n    .optional(),\n  reference: z.object({\n    model_name: z.string(),\n    primary_key: z.string(),\n    display_name: z.string(),\n    display_column: z.union([z.string(), z.array(z.string()), z.undefined()]),\n    'x-relationField': z.string(),\n    'x-onSoftDelete': z.string(),\n    'x-unique': z.boolean().optional(),\n  }),\n  display_name: z.string().optional(),\n  validators: z.array(\n    z.union([\n      z.object({\n        required: z.boolean(),\n      }),\n      z.object({\n        format: z.string(),\n        message: z.string(),\n      }),\n    ]),\n  ),\n})\n\nexport const resourceSchema = z.object({\n  namespace: z.string().optional(),\n  prisma: z.boolean().optional(),\n  is_dynamic: z.boolean().optional(),\n  schema_name: z.string(),\n  name: z.string(),\n  slug: z.string(),\n  primary_key: z.string(),\n  'x-legacy': z.any(),\n  display_column: z.union([z.string(), z.array(z.string()), z.undefined()]),\n  display_name: z.string().nullable(),\n  display_primary_key: z.boolean(),\n  searchable_columns: z.array(z.string()).optional(),\n  columns: resourceColumnSchema.array(),\n  associations: resourceAssociationSchema.array(),\n  __jsonschema: z.any(),\n})\n\nexport const agFilterInnerSchema = z.object({\n  filterType: z.enum(['text', 'number']),\n  // filterType: z.string(),\n  type: z.enum(['contains', 'equals']),\n  // type: z.string(),\n  filter: z.union([z.string(), z.number()]),\n})\n\nexport const agFilterInner2Schema = z.object({\n  filterType: z.enum(['text']),\n  // filterType: z.string(),\n  operator: z.enum(['OR', 'AND']),\n  // operator: z.string(),\n  conditions: z.array(agFilterInnerSchema),\n})\n\nexport const agFilter1Schema = z.record(agFilterInnerSchema)\nexport type TAgFilter1Schema = z.infer<typeof agFilter1Schema>\nexport const agFilter2Schema = z.record(agFilterInner2Schema)\n\nexport const agFilterSchema = z\n  .record(agFilterInnerSchema.or(agFilterInner2Schema))\n  .or(z.object({ _ref: z.string().optional() }))\nexport type TAgFilterSchema = z.infer<typeof agFilterSchema>\n\nexport const agSortSchema = z.array(\n  z.object({\n    colId: z.string(),\n    sort: z.enum(['asc', 'desc']),\n  }),\n)\nexport type TAgSortSchema = z.infer<typeof agSortSchema>\n\nexport const prismaFilterSchema = z.object({\n  OR: z.array(z.record(z.record(z.enum(['contains']), z.string()))),\n})\nexport type IPrismaFilterSchema = z.infer<typeof prismaFilterSchema>\n\nexport type IResourceSchema = z.infer<typeof resourceSchema>\nexport type IResourceAssociationSchema = z.infer<typeof resourceAssociationSchema>\nexport type ISchemaSelectOption = z.infer<typeof selectOptionSchema>\nexport type IResourceColumnSchema = z.infer<typeof resourceColumnSchema>\n\nexport const registerSchema = z.object({\n  username: z.string(),\n  password: z.string(),\n  tenantId: z.number(),\n})\n\nexport class RegisterDto extends createZodDto(registerSchema) {}\n\nexport const accountExistsSchema = z.object({\n  username: z.string(),\n  tenantName: z.string(),\n})\n\nexport class AccountExistsSchemaDto extends createZodDto(accountExistsSchema) {}\n\nexport const validateSchema = z.object({\n  tenantId: z.number().optional(),\n  username: z.string(),\n  password: z.string(),\n})\n\nexport class validateSchemaDto extends createZodDto(validateSchema) {}\n\nexport const getTenantByNameSchema = z.object({\n  tenantName: z.string(),\n})\n\nexport class GetTenantByNameSchemaDto extends createZodDto(getTenantByNameSchema) {}\n\nexport const findByUnionIdAndTenantIdSchema = z.object({\n  unionid: z.string(),\n  tenantId: z.number(),\n})\n\nexport class FindByUnionIdAndTenantIdSchemaDto extends createZodDto(findByUnionIdAndTenantIdSchema) {}\n\nexport const registerByUnionIdSchema = z.object({\n  unionid: z.string(),\n  tenantId: z.number(),\n})\n\nexport class RegisterByUnionIdSchemaDto extends createZodDto(registerByUnionIdSchema) {}\n\nexport const resetPasswordSchema = z.object({\n  userId: z.number(),\n  tenantId: z.number(),\n  password: z.string(),\n})\n\nexport const _resetPasswordSchema = resetPasswordSchema.extend({\n  tid: z.number(),\n})\n\nexport class resetPasswordSchemaDto extends createZodDto(resetPasswordSchema) {}\n\nexport const verifyMobileSchema = z.object({\n  uid: z.number(),\n  tid: z.number(),\n  mobile: z.string(),\n  code: z.string(),\n  slug: z.string(),\n})\n\nexport class verifyMobileSchemaDto extends createZodDto(verifyMobileSchema) {}\n\nexport const tenantJwtPayloadSchema = z.object({\n  tid: z.number(),\n})\n\nexport const userJwtPayloadSchema = z.object({\n  uid: z.number(),\n  tid: z.number(),\n})\n\nexport class userJwtPayloadSchemaDto extends createZodDto(userJwtPayloadSchema) {}\n\nexport const customerPreSignupSchema = z.object({\n  email: z.string(),\n})\n\nexport class customerPreSignupSchemaDto extends createZodDto(customerPreSignupSchema) {}\n\nexport class customerPreSignupTenantJwtPayloadSchemaDto extends createZodDto(\n  customerPreSignupSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport const customerSignupSchema = z.object({\n  email: z.string(),\n  verifyCode: z.string(),\n  password: z.string(),\n})\n\nexport class customerSignupSchemaDto extends createZodDto(customerSignupSchema) {}\n\nexport class customerSignupTenantJwtPayloadSchemaDto extends createZodDto(\n  customerSignupSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport const wxGetAccessTokenRes = z.object({\n  access_token: z.string(),\n  expires_in: z.string(),\n  refresh_token: z.string(),\n  openid: z.string(),\n  scope: z.string(),\n  unionid: z.string(),\n  create_at: z.string(),\n})\nexport type TWxGetAccessTokenRes = z.infer<typeof wxGetAccessTokenRes>\n\nexport const wxGetUserRes = z.object({\n  openid: z.string(),\n  nickname: z.string(),\n  sex: z.number(),\n  headimgurl: z.string(),\n  unionid: z.string(),\n  language: z.string(),\n  city: z.string(),\n  province: z.string(),\n  country: z.string(),\n  privilege: z.array(z.string()),\n})\nexport type TWxGetUser = z.infer<typeof wxGetUserRes>\n\nexport const wxValidateUserSchema = z.object({\n  code: z.string(),\n})\n\nexport class wxValidateUserTenantJwtPayloadSchemaDto extends createZodDto(\n  wxValidateUserSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport const generateRecoveryCodeSchema = z.object({\n  email: z.string(),\n})\n\nexport class generateRecoveryCodeSchemaDto extends createZodDto(generateRecoveryCodeSchema) {}\n\nexport class generateRecoveryCodeTenantJwtSchemaDto extends createZodDto(\n  generateRecoveryCodeSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport class GenerateRecoveryCodeDto extends createZodDto(\n  generateRecoveryCodeSchema.merge(\n    z.object({\n      appId: z.string(),\n    }),\n  ),\n) {}\n\nexport const resetPasswordWithRecoveryCodeSchema = z.object({\n  recoveryCode: z.string(),\n  password: z.string(),\n})\n\nexport class resetPasswordWithRecoveryCodeSchemaDto extends createZodDto(resetPasswordWithRecoveryCodeSchema) {}\n\nexport class resetPasswordWithRecoveryCodeTenantJwtSchemaDto extends createZodDto(\n  resetPasswordWithRecoveryCodeSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport class ResetPasswordDto extends createZodDto(\n  resetPasswordWithRecoveryCodeSchema.merge(\n    z.object({\n      appId: z.string(),\n    }),\n  ),\n) {}\n\nexport const productCreateManyItemSchema = z.object({\n  name: z.string(),\n  price: z.number(),\n  productType: z.string(),\n  amount: z.number().optional(),\n  plan: z.number().nullable().optional(),\n  extendedDescriptionData: z.any().optional(),\n  restricted: z.number().nullable().optional(),\n  fileSize: z.string().nullable().optional(),\n  storeDuration: z.number().nullable().optional(),\n  hasAds: z.string().nullable().optional(),\n  tecSupport: z.string().nullable().optional(),\n})\n\nexport class SdkProductCreateManyItemDto extends createZodDto(productCreateManyItemSchema) {}\n\nexport const updatePaidProfileSchema = z.object({\n  product: z.object({\n    productType: z.any(),\n    plan: z.number().nullable(),\n    amount: z.number().nullable(),\n    validityPeriod: z.number().nullable(),\n  }),\n})\n\nexport const updateFreeProfileSchema = z.object({\n  product: z.object({\n    productType: z.any(),\n    plan: z.number().nullable(),\n    amount: z.number().nullable(),\n    validityPeriod: z.number().nullable(),\n  }),\n})\n\nexport const wxPayQuerySchema = z.object({\n  status: z.number(),\n  trade_state: z.string(),\n  transaction_id: z.string(),\n  payer: z.object({\n    openid: z.string(),\n  }),\n})\n\nexport type TWxPayQuery = z.infer<typeof wxPayQuerySchema>\n\nexport const fwhLoginSchema = z.object({\n  code: z.string(),\n})\n\nexport class fwhLoginTenantJwtPayloadSchemaDto extends createZodDto(fwhLoginSchema.merge(tenantJwtPayloadSchema)) {}\n\nexport const amountUpdateSchema = z.object({\n  action: z.enum(['decrement']).optional(),\n  count: z.number().optional(),\n})\n\nexport class amountUpdateSchemaDto extends createZodDto(amountUpdateSchema) {}\n\nexport class amountUpdateUserJwtPayloadSchemaDto extends createZodDto(amountUpdateSchema.merge(userJwtPayloadSchema)) {}\n\nexport const createOrderSchema = z.object({\n  productId: z.string(),\n  openid: z.string().optional(),\n})\n\nexport class SdkCreateOrderDto extends createZodDto(createOrderSchema) {}\n\nexport class createOrderUserJwtPayloadSchemaDto extends createZodDto(createOrderSchema.merge(userJwtPayloadSchema)) {}\n\nexport const transactionsNativeSchema = z.object({\n  orderId: z.string(),\n  desc: z.string(),\n  total: z.number(),\n  openid: z.string().optional(),\n})\n\nexport class transactionsNativeSchemaDto extends createZodDto(transactionsNativeSchema) {}\n\nexport const createOrderJSAPISchema = createOrderSchema.extend({ openid: z.string() })\n\nexport class SdkCreateOrderInJSAPIDto extends createZodDto(createOrderJSAPISchema) {}\n\nexport const createQuickOrderSchema = createOrderSchema.extend({\n  // 快捷创建需要客户端提供一个匿名 Token\n  anonymousCustomerToken: z.string(),\n})\n\nexport class SdkCreateQuickOrderDto extends createZodDto(createQuickOrderSchema) {}\n\nexport class createQuickOrderTenantJWTPayloadSchemaDto extends createZodDto(\n  createQuickOrderSchema.merge(tenantJwtPayloadSchema),\n) {}\n\nexport const appCreateV4Schema = z.object({\n  displayName: z.string(),\n})\n\nexport class appCreateV4SchemaDto extends createZodDto(appCreateV4Schema) {}\n\nexport const validateTenantSchema = z.object({\n  name: z.string(),\n  password: z.string(),\n})\n\nexport class validateTenantSchemaDto extends createZodDto(validateTenantSchema) {}\n\nexport const validateByEmailSchema = z.object({\n  email: z.string(),\n  tenantId: z.number(),\n  password: z.string(),\n})\n\nexport class validateByEmailSchemaDto extends createZodDto(validateByEmailSchema) {}\n\nexport const _resetTenantPasswordSchema = z.object({\n  id: z.number(),\n})\n\nexport class _resetTenantPasswordSchemaDto extends createZodDto(_resetTenantPasswordSchema) {}\n\nexport const customerExtendDataSchema = z\n  .object({\n    biz: z.string(),\n    icp: z.string().nullable(),\n    contact: z\n      .object({\n        email: z.string(),\n        phone: z.string(),\n        address: z.string(),\n      })\n      .partial(),\n    companyName: z.string(),\n    description: z.string(),\n  })\n  .partial()\n\nexport class customerExtendDataSchemaDto extends createZodDto(customerExtendDataSchema) {}\n\nexport const kanzhunDetailSchema = z\n  .object({\n    公司全称: z.string(),\n    联系方式: z.array(z.string()),\n    地址: z.string(),\n    简介: z.string(),\n  })\n  .partial()\n\nexport class kanzhunDetailSchemaDto extends createZodDto(kanzhunDetailSchema) {}\n\nexport const kanzhunItemSchema = z\n  .object({\n    id: z.number(),\n    name: z.string(),\n    detail: kanzhunDetailSchema,\n  })\n  .partial()\n\nexport class kanzhunItemSchemaDto extends createZodDto(kanzhunItemSchema) {}\n\nexport const kanzhunDataSchema = z\n  .object({\n    date: z.string(),\n    data: z.array(kanzhunItemSchema),\n  })\n  .partial()\n\nexport const sendSmsVerifyCodeSchema = z.object({ mobile: z.string() })\n\nexport class sendSmsVerifyCodeSchemaDto extends createZodDto(sendSmsVerifyCodeSchema) {}\n\nexport const refreshTokenSchema = z.object({ rt: z.string() })\n\nexport class refreshTokenSchemaDto extends createZodDto(refreshTokenSchema) {}\n\nexport const loginSchema = z.object({\n  username: z.string(),\n  password: z.string().min(4),\n})\n\nexport class loginSchemaDto extends createZodDto(loginSchema) {}\n\nexport const getMenuByTenantNameSchema = z.object({\n  tenantName: z.string(),\n})\n\nexport class getMenuByTenantNameSchemaDto extends createZodDto(getMenuByTenantNameSchema) {}\n\nexport const getMenuSchema = z.object({\n  tenantId: z.number(),\n})\n\nexport class getMenuSchemaDto extends createZodDto(getMenuSchema) {}\n\n// https://github.com/colinhacks/zod/discussions/2245\nexport const baseMenuItemSchema = z.object({\n  name: z.string(),\n  slug: z.string(),\n  id: z.string(),\n})\n\nexport type MenuItem = z.infer<typeof baseMenuItemSchema> & {\n  children?: MenuItem[]\n}\n\nexport const menuItemSchema: z.ZodType<MenuItem> = baseMenuItemSchema.extend({\n  children: z.lazy(() => menuItemSchema.array().optional()),\n})\n\nexport class menuItemSchemaDto extends createZodDto(menuItemSchema) {}\n\nexport const deploySiteToCosSchema = z.object({\n  siteId: z.number(),\n})\n\nexport class deploySiteToCosSchemaDto extends createZodDto(deploySiteToCosSchema) {}\n\nconst StartSchema = z.object({\n  tenantId: z.string(),\n  processDefKey: z.string(),\n  businessKey: z.union([z.number(), z.string()]),\n})\n\nexport class StartSchemaDto extends createZodDto(StartSchema) {}\n\nconst GetTaskFormSchema = z.object({\n  taskId: z.string(),\n})\n\nexport class GetTaskFormSchemaDto extends createZodDto(GetTaskFormSchema) {}\n\nexport const getTasksSchema = z.object({\n  tenantIdIn: z.array(z.string()),\n})\n","import { ContainerModule, interfaces } from 'inversify'\nimport { z } from 'zod'\n\nimport {\n  DataServiceSymbol,\n  DynamicTableSchemaTransformerSymbol,\n  LegacySchemaServiceSymbol,\n  PrismaSchemaServiceSymbol,\n  PrismaUtilsSymbol,\n  SchemaServiceSymbol,\n  SchemaTransformerSymbol,\n} from '@flowda-projects/flowda-shared-types'\nimport { PrismaSchemaService } from './services/schema/prismaSchema.service'\nimport { DataService } from './services/data/data.service'\nimport { LegacySchemaService } from './services/schema/legacySchemaService'\nimport { SchemaTransformer } from './services/schema/schemaTransformer'\nimport { PrismaUtils } from './services/schema/prismaUtils'\nimport { bindServiceSymbol } from '@flowda/schema'\nimport { DynamicTableSchemaTransformer } from './services/schema/dynamicTableSchemaTransformer'\nimport { SchemaService } from './services/schema/schema.service'\n\nexport const flowdaSharedModule = new ContainerModule((bind: interfaces.Bind) => {\n  bindServiceSymbol(bind, DataServiceSymbol, DataService)\n  bindServiceSymbol(bind, LegacySchemaServiceSymbol, LegacySchemaService)\n\n  bind(SchemaServiceSymbol).to(SchemaService).inSingletonScope()\n\n  bind<PrismaSchemaService>(PrismaSchemaServiceSymbol).to(PrismaSchemaService).inSingletonScope()\n  bind<PrismaUtils>(PrismaUtilsSymbol).to(PrismaUtils).inSingletonScope()\n\n  bind<SchemaTransformer>(SchemaTransformerSymbol).to(SchemaTransformer).inTransientScope()\n  bind<interfaces.Factory<SchemaTransformer>>('Factory<SchemaTransformer>').toFactory<SchemaTransformer, [any]>(\n    context => {\n      return (z: z.AnyZodObject) => {\n        const transformer = context.container.get<SchemaTransformer>(SchemaTransformerSymbol)\n        transformer.setZodType(z)\n        return transformer\n      }\n    },\n  )\n  bind<DynamicTableSchemaTransformer>(DynamicTableSchemaTransformerSymbol)\n    .to(DynamicTableSchemaTransformer)\n    .inTransientScope()\n})\n","export { DataServiceSymbol, SchemaServiceSymbol } from '@flowda-projects/flowda-shared-types'\n\nexport * from './flowdaShared.module'\nexport * from './utils/matchPath'\nexport * from './utils/browser-log-utils'\nexport * from './utils/ag-grid-utils'\nexport * from './utils/schema-utils'\nexport * from './utils/custom-error'\nexport * from './utils/dayjs-utils'\n\nexport * from './services/schema/meta'\nexport * from './services/schema/schemaTransformer'\nexport * from './services/schema/dynamicTableSchemaTransformer'\nexport * from './services/schema/legacySchemaService'\nexport * from './services/schema/schema.service'\nexport * from './services/data/data.service'\n","import { inject, injectable } from 'inversify'\nimport * as _ from 'radash'\nimport { lowerFirst } from 'lodash'\nimport type { LoggerService } from '@nestjs/common'\nimport type { PrismaSchemaService } from '../schema/prismaSchema.service'\nimport { PrismaClientSymbol } from '@flowda/types'\nimport { PrismaSchemaServiceSymbol } from '@flowda-projects/flowda-shared-types'\n// import * as db from '@prisma/client-cms_admin'\n\n/*\ntodo: 增加 reference_type 区分是如何做 nest\ne.g. Customer#weixinProfile 和 Order#customerId 的 nest 查询有区别\n */\n@injectable()\nexport class DataService {\n  private readonly logger\n\n  constructor(\n    // todo: prisma 要不要强类型\n    // @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject(PrismaClientSymbol) private prisma: any,\n    @inject(PrismaSchemaServiceSymbol) private prismaSchemaService: PrismaSchemaService,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(DataService.name)\n  }\n\n  async get(reqUser: any, pathname: string, query: Record<string, any>) {\n    this.logger.log(`get(reqUser ${JSON.stringify(reqUser)}, path: ${pathname}, query: ${JSON.stringify(query)})`)\n    const findParamRet = await this.prismaSchemaService.toFindParam(pathname, query)\n    if (_.isEmpty(findParamRet)) {\n      return {}\n    }\n    const { resource, action, param } = findParamRet\n    if (action === 'findUnique') {\n      const ret = await this.prisma[resource][action](param)\n      if (!ret || ret.isDeleted) return {}\n      return _.omit(ret, ['isDeleted']) as any\n    }\n    if (action === 'findMany') {\n      const [data, count] = await this.prisma.$transaction([\n        this.prisma[resource][action](param),\n        this.prisma[resource].count({ where: param.where }),\n      ])\n      return {\n        pagination: {\n          total: count,\n        },\n        data,\n      }\n    }\n  }\n\n  async put(reqUser: any, path: string, values: any) {\n    this.logger.log(`put(reqUser ${JSON.stringify(reqUser)}), path: ${path}, values: ${JSON.stringify(values)}`)\n    const updateParamRet = await this.prismaSchemaService.toUpdateParam(path, values)\n    const { resource, param } = updateParamRet\n    const prevRet = await this.prisma[resource].findUnique({\n      where: {\n        id: param.where.id,\n      },\n      select: _.mapValues(param.data, item => true),\n    })\n    const auditChanges = Object.keys(param.data).reduce<Record<string, [string, string]>>((acc, k) => {\n      acc[k] = [prevRet[k], param.data[k]]\n      return acc\n    }, {})\n    const ret = await this.prisma[resource].update(param)\n    const auditInfo = {\n      auditId: param.where.id as number,\n      auditType: resource,\n      userId: JSON.stringify(reqUser['user_id'] || reqUser['uid']), // todo: 暂时兼容 java 和 node\n      username: reqUser['user_name'],\n      action: 'update',\n      auditChanges: JSON.stringify(auditChanges),\n      version: 0,\n    }\n    this.logger.debug!(`audit ${JSON.stringify(auditInfo)}`)\n    try {\n      await this.prisma.audits.create({\n        data: auditInfo,\n      })\n    } catch (e) {\n      this.logger.warn(`audit create failed, ${JSON.stringify(auditInfo)}`)\n    }\n    return ret\n  }\n\n  async post(reqUser: any, path: string, values: any) {\n    this.logger.log(`[post] reqUser ${JSON.stringify(reqUser)}, path: ${path}, query: ${JSON.stringify(values)})`)\n    const createParamRet = await this.prismaSchemaService.toCreateParam(path, values)\n    const { resource, param } = createParamRet\n\n    if (createParamRet['x-unique']) {\n      const ref = createParamRet['x-unique']\n      const refId = values[ref.name!]\n      const refModelName = ref.reference!.model_name\n      const refData = await this.prisma[lowerFirst(refModelName)].findUnique({\n        where: {\n          id: refId,\n        },\n        include: {\n          [resource]: true,\n        },\n      })\n      const id = refData[resource].id\n      const ret = await this.prisma[resource].update({\n        where: {\n          id: id,\n        },\n        data: {\n          ...param.data,\n          ...{\n            isDeleted: false,\n          },\n        },\n      })\n\n      const auditInfo = {\n        auditId: id,\n        auditType: resource,\n        userId: JSON.stringify(reqUser['user_id'] || reqUser['uid']), // todo: 暂时兼容 java 和 node\n        username: reqUser['user_name'],\n        action: 'soft_delete_revert',\n        auditChanges: JSON.stringify(param.data),\n        version: 0,\n      }\n      this.logger.debug!(`audit ${JSON.stringify(auditInfo)}`)\n      try {\n        await this.prisma.audits.create({\n          data: auditInfo,\n        })\n      } catch (e) {\n        this.logger.warn(`audit create failed, ${JSON.stringify(auditInfo)}`)\n      }\n      return ret\n    } else {\n      const ret = await this.prisma[resource].create(param)\n      const auditInfo = {\n        auditId: ret.id,\n        auditType: resource,\n        userId: JSON.stringify(reqUser['user_id'] || reqUser['uid']), // todo: 暂时兼容 java 和 node\n        username: reqUser['user_name'],\n        action: 'create',\n        auditChanges: JSON.stringify(param.data),\n        version: 0,\n      }\n      this.logger.debug!(`audit ${JSON.stringify(auditInfo)}`)\n      try {\n        await this.prisma.audits.create({\n          data: auditInfo,\n        })\n      } catch (e) {\n        this.logger.warn(`audit create failed, ${JSON.stringify(auditInfo)}`)\n      }\n\n      return ret\n    }\n  }\n\n  async remove(reqUser: any, pathname: string) {\n    this.logger.log(`[remove] reqUser ${JSON.stringify(reqUser)}, path: ${pathname}`)\n    const assDelStrategy = await this.prismaSchemaService.getAssociationDeleteStrategy(pathname)\n    const { resource, param } = await this.prismaSchemaService.toRemoveParam(pathname)\n    for (const k of Object.keys(assDelStrategy)) {\n      const ass = assDelStrategy[k]\n      if (ass['x-onSoftDelete'] === 'Restrict') {\n        const ret = await this.prisma[lowerFirst(k)].findMany({\n          where: {\n            isDeleted: false,\n            [ass.name]: param.where.id,\n          },\n        })\n        if (ret.length > 0) {\n          throw new Error(`删除失败, 关联的<${ass.relatedDisplayName}>不为空`)\n        }\n      }\n    }\n\n    const prevRet = await this.prisma[resource].findUnique({\n      where: {\n        id: param.where.id,\n      },\n    })\n    const ret = await this.prisma[resource].update(param)\n\n    const auditInfo = {\n      auditId: param.where.id,\n      auditType: resource,\n      userId: JSON.stringify(reqUser['user_id'] || reqUser['uid']), // todo: 暂时兼容 java 和 node\n      username: reqUser['user_name'],\n      action: 'soft_delete',\n      auditChanges: JSON.stringify(prevRet),\n      version: 0,\n    }\n    this.logger.debug!(`audit ${JSON.stringify(auditInfo)}`)\n    try {\n      await this.prisma.audits.create({\n        data: auditInfo,\n      })\n    } catch (e) {\n      this.logger.warn(`audit create failed, ${JSON.stringify(auditInfo)}`)\n    }\n    return ret\n  }\n}\n","import type { LoggerService } from '@nestjs/common'\nimport { inject, injectable } from 'inversify'\nimport { toModelName, toPath, toSchemaName } from '../../utils/matchPath'\n\n@injectable()\nexport class DynamicTableSchemaTransformer {\n  private readonly logger: LoggerService\n\n  constructor(@inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService) {\n    this.logger = loggerFactory(DynamicTableSchemaTransformer.name)\n  }\n\n  transform(input: any) {\n    const cols = input.dynamicTableDefColumns.map((c: any) => {\n      return Object.assign(\n        {\n          name: c.name,\n          column_type: c.type,\n        },\n        c.extendedSchema,\n      )\n    })\n    return Object.assign(\n      {\n        name: toModelName(input.name),\n        slug: toPath(input.name),\n        schema_name: toSchemaName(input.name),\n        primary_key: 'id',\n        columns: cols,\n        prisma: false,\n        is_dynamic: true,\n      },\n      input.extendedSchema,\n    )\n  }\n}\n","import { z } from 'zod'\nimport { inject, injectable } from 'inversify'\nimport type { LoggerService } from '@nestjs/common'\nimport type { SchemaTransformer } from './schemaTransformer'\nimport { CustomZodSchemaSymbol } from '@flowda/types'\nimport type { IResourceSchema } from '@flowda-projects/flowda-shared-types'\n\n@injectable()\nexport class LegacySchemaService {\n  private readonly logger\n  private schemaCache?: Record<string, IResourceSchema>\n\n  constructor(\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n    @inject('Factory<SchemaTransformer>') private modelSchemaFactory: (z: z.AnyZodObject) => SchemaTransformer,\n    @inject(CustomZodSchemaSymbol) private czt: any,\n  ) {\n    this.logger = loggerFactory(LegacySchemaService.name)\n  }\n\n  getSchema(): Record<string, IResourceSchema> {\n    console.time('generate schema')\n    const schema = Object.keys(this.czt).reduce((acc: any, k) => {\n      const e = this.czt[k]\n      if (['ZodObject'].indexOf(e.constructor.name) > -1) {\n        const transformer = this.modelSchemaFactory(e)\n        acc[k] = transformer.buildSchema().toSchema(k)\n      } else {\n        this.logger.error('Wrong type', k)\n      }\n      return acc\n    }, {})\n    this.schemaCache = schema\n    console.timeEnd('generate schema')\n    return schema\n  }\n\n  async getSchemaCache(): Promise<Record<string, IResourceSchema>> {\n    if (!this.schemaCache) {\n      // 重启的话内存里就没有了，可以手动重新获取下\n      this.logger.log(`schemaCache is empty, getSchema again.`)\n      return this.getSchema()\n    } else {\n      return this.schemaCache\n    }\n  }\n}\n","import { z } from 'zod'\n// motor-admin JSON.parse(document.getElementById('app').dataset.schema)\n// todo: 目前尽量在后端定义，后续可以再开辟一条链路来储存 schema，并进行 merge\n// 当然如果后端定义链路保留，应该做成 decorator\n\nexport function meta(values: any) {\n  return z.unknown().optional().describe(JSON.stringify(values))\n}\n","import { LoggerService } from '@nestjs/common'\nimport { inject, injectable } from 'inversify'\nimport * as qs from 'qs'\nimport { isLikeNumber, matchPath, toModelName } from '../../utils/matchPath'\nimport type { LegacySchemaService } from './legacySchemaService'\nimport { forEach, isUndefined, omitBy, set } from 'lodash'\nimport * as _ from 'radash'\nimport type {\n  IPrismaFilterSchema,\n  IResourceSchema,\n  TAgFilterSchema,\n  TFilterFormValue,\n} from '@flowda-projects/flowda-shared-types'\nimport {\n  agFilter1Schema,\n  agFilter2Schema,\n  PrismaUtilsSymbol,\n  LegacySchemaServiceSymbol,\n} from '@flowda-projects/flowda-shared-types'\nimport type { PrismaUtils } from './prismaUtils'\n\n@injectable()\nexport class PrismaSchemaService {\n  private readonly logger\n\n  constructor(\n    @inject(PrismaUtilsSymbol) private prismaUtils: PrismaUtils,\n    @inject(LegacySchemaServiceSymbol) private schemaService: LegacySchemaService,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(PrismaSchemaService.name)\n  }\n\n  toPrismaSelect(fields: string | undefined, theResourceSchema: IResourceSchema) {\n    let fieldsArr: string[] = []\n    if (fields == null) {\n      fieldsArr = theResourceSchema\n        .columns!.filter(c => {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          if (c?.['x-legacy']) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            return c['x-legacy'].prisma !== false\n          }\n\n          return c.prisma !== false\n        })\n        .map(c => c.name!)\n    } else {\n      fieldsArr = fields.split(',')\n    }\n    return fieldsArr.reduce((acc: Record<string, boolean>, cur: string) => {\n      acc[cur] = true\n      return acc\n    }, {})\n  }\n\n  async toFindParam(\n    pathname: string,\n    query: qs.ParsedQs,\n  ): Promise<\n    | {\n        action: 'findUnique' | 'findMany'\n        resource: string\n        param: any\n      }\n    | Record<string, never>\n  > {\n    // if (!query['fields']) {\n    //   throw new Error('No query fields')\n    // }\n\n    this.logger.debug!(`[toFindParam] pathname: ${pathname}, query: ${JSON.stringify(query)}`)\n\n    const parsedPath = matchPath(pathname)\n    if (parsedPath.length === 0) return Promise.resolve({})\n    const last = parsedPath[parsedPath.length - 1]\n\n    const parent = parsedPath[parsedPath.length - 2]\n    // console.log(parent)\n    let lastResource = last.resource\n    let lastResourceSchema = last.resourceSchema\n    const schemaCache = await this.schemaService.getSchemaCache()\n\n    if (parent /* 如果是 association */) {\n      const parentSchema = schemaCache[parent.resourceSchema]\n      const assoRet = parentSchema.associations.find(ass => ass.slug === last.origin)\n      if (assoRet) {\n        lastResourceSchema = assoRet?.schema_name\n        lastResource = _.camel(assoRet.model_name)\n      }\n    }\n    const theResourceSchema = schemaCache[lastResourceSchema]\n\n    let action: 'findUnique' | 'findMany'\n    let param = {}\n\n    const queryFields = query['fields'] as qs.ParsedQs\n    const fields = this.toPrismaSelect(\n      queryFields && (queryFields[lastResource] as string | undefined),\n      theResourceSchema,\n    )\n\n    const include: Record<string, any> = {}\n\n    if (typeof query['include'] === 'string' && query['include'] !== '') {\n      query['include'].split(',').forEach((inc: string) => {\n        // this.logger.log(`[toFindParam] parse include ${inc}`)\n        const refSelect: any = this.getRefSelect(schemaCache, theResourceSchema, inc)\n        const selectRet = this.toPrismaSelect(queryFields[inc] as string, theResourceSchema)\n        include[inc] = {\n          // todo: 似乎 prisma nest select 不支持 order by 只有 include 支持，但是 include 不支持 nest select fields\n          // orderBy: [{ createdAt: 'desc' }],\n          select: { ...selectRet, ...refSelect },\n        }\n      })\n    }\n\n    if (last.id != null) {\n      action = 'findUnique'\n      const id2 = await this.prismaUtils.parseId(lastResource, last.id)\n      param = {\n        where: {\n          id: id2,\n        },\n        select: { ...fields, ...include, ...{ isDeleted: true } },\n      }\n    } else {\n      const filter = this.convertQueryToPrismaFilter(schemaCache, theResourceSchema, query)\n\n      const orderBy = this.convertToOrderBy(query)\n\n      action = 'findMany'\n      const skip = query['current'] ? (Number(query['current']) - 1) * Number(query['pageSize']) : undefined\n      const take = query['pageSize'] ? Number(query['pageSize']) : undefined\n      if (parsedPath.length > 1) {\n        // 情况1：根据前一个 resource id 搜索 list\n        const pResource = parsedPath[parsedPath.length - 2]\n        // this.logger.log(`${resource}.findMany`)\n        param = omitBy(\n          {\n            where: {\n              ...{\n                [`${pResource.resource}Id`]: pResource.id,\n                isDeleted: false,\n              },\n              ...filter,\n            },\n            orderBy,\n            skip,\n            take,\n            select: { ...fields, ...include },\n          },\n          isUndefined,\n        )\n      } else {\n        param = omitBy(\n          {\n            where: {\n              ...{\n                isDeleted: false,\n              },\n              ...filter,\n            },\n            orderBy,\n            skip,\n            take,\n            select: { ...fields, ...include },\n          },\n          isUndefined,\n        )\n      }\n    }\n    const ret = {\n      action,\n      param,\n      resource: lastResource,\n    }\n    this.logger.debug!(`[toFindParam] ret ${JSON.stringify(ret)}`)\n    return ret\n  }\n\n  convertToOrderBy(query: any) {\n    let sort: string\n    if (query.sort != null) {\n      sort = query.sort\n    } else {\n      return [{ createdAt: 'desc' }]\n    }\n\n    if (sort[0] === '-') {\n      return [{ [sort.slice(1)]: 'desc' }]\n    } else {\n      return [{ [sort]: 'asc' }]\n    }\n  }\n\n  /**\n   * 根据 resource 的 schema 中 columns 是 ref， e.g. resource(Receipt) 收货单关联的 ref(partVersion)\n   * 找到对应 refSchema 的 display_column 中的又 include e.g. display_column(partId)，得到 nest select\n   * { [include: partVersion]: { select { partId: true, [partId x-relationField: part]: { select: { id: true, [display_column*]: true} }}} }\n   *\n   * todo: 现在是根据 display_column 里如果有 ref 来计算的，后续可以改成所有 ref 都默认向下搜索一层\n   */\n  getRefSelect(schemaCache: Record<string, IResourceSchema>, resourceSchema: IResourceSchema, includeRef: string) {\n    const refSelect: any = {}\n    if (resourceSchema && resourceSchema.columns) {\n      // e.g. inc partVersion\n      const refColumn = resourceSchema.columns.find(\n        col => col.column_type === 'reference' && col.reference!['x-relationField'] === includeRef,\n      )\n      if (refColumn) {\n        // e.g. model_name PartVersion\n        // e.g. display_column partId,version\n        const { model_name, display_column } = refColumn.reference!\n        // e.g. PartVersionResourceSchema\n        const refSchema = schemaCache[model_name + 'ResourceSchema']\n        let displayCols: string[] = []\n        if (typeof display_column === 'string') {\n          displayCols = [display_column]\n        } else {\n          displayCols = (display_column as string[]) || []\n        }\n        displayCols.forEach(item => {\n          // e.g. item partId\n          const disCol = refSchema.columns!.find(col => col.name === item)\n          if (disCol == null) {\n            throw new Error(`schema '${model_name}', wrong display column '${item}'`)\n          } else if (disCol.column_type === 'reference') {\n            // e.g. name\n            const display_column = disCol!.reference!.display_column!\n            const relationField = disCol!.reference!['x-relationField']\n\n            let display_column2: string[]\n            if (Array.isArray(display_column)) {\n              display_column2 = display_column\n            } else {\n              display_column2 = [display_column]\n            }\n            const select = display_column2.reduce((acc, cur) => {\n              acc[cur] = true\n              return acc\n            }, {} as Record<string, boolean>)\n\n            refSelect[relationField] = {\n              select: Object.assign(\n                {\n                  id: true,\n                },\n                select,\n              ),\n            }\n          }\n        })\n      }\n    }\n    return refSelect\n  }\n\n  /*\n    [\n      {\n        type: { eq: 'UNSCHEDULE' },\n        status: { eq: 'DONE' },\n      },\n    ]\n   */\n  convertQueryToPrismaFilter(\n    schemaCache: Record<string, IResourceSchema>,\n    resourceSchema: IResourceSchema,\n    query: any,\n  ) {\n    if (query.filterModel) {\n      return this.convertAgFilterModelToPrismaFilter(query.filterModel)\n    } else if (query.filter && Array.isArray(query.filter) && query.filter.length > 0) {\n      // console.log(query.filter)\n      const filter = query.filter as TFilterFormValue[]\n      const andIdx = filter.findIndex(item => typeof item === 'string' && item === 'AND')\n      const orIdx = filter.findIndex(item => typeof item === 'string' && item === 'OR')\n      const ret: any = {}\n\n      if (andIdx === 0) {\n        ret['AND'] = []\n        if (orIdx === -1) {\n          const andFilter = filter.slice(1)\n          andFilter.forEach(item => ret['AND'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n        } else {\n          const andFilter = filter.slice(1, orIdx)\n          andFilter.forEach(item => ret['AND'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n          ret['OR'] = []\n          const orFilter = filter.slice(orIdx + 1)\n          orFilter.forEach(item => ret['OR'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n        }\n      } else if (orIdx === 0) {\n        ret['OR'] = []\n        if (andIdx === -1) {\n          const orFilter = filter.slice(1)\n          orFilter.forEach(item => ret['OR'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n        } else {\n          const orFilter = filter.slice(1, andIdx)\n          orFilter.forEach(item => ret['OR'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n          ret['AND'] = []\n          const andFilter = filter.slice(andIdx + 1)\n          andFilter.forEach(item => ret['AND'].push(this.mapItemToPrismaFilter(schemaCache, resourceSchema, item)))\n        }\n      } else {\n        throw new Error('Wrong filter')\n      }\n      return ret\n    } else if (\n      query.q != null &&\n      Array.isArray(resourceSchema.searchable_columns) &&\n      resourceSchema.searchable_columns.length > 0\n    ) {\n      return {\n        OR: resourceSchema.searchable_columns.reduce((acc, cur) => {\n          acc.push({ [cur]: { contains: query.q } })\n          return acc\n        }, [] as any[]),\n      }\n    } else {\n      return {}\n    }\n  }\n\n  convertAgFilterModelToPrismaFilter(agFilter: TAgFilterSchema) {\n    const parsedRet = agFilter1Schema.safeParse(agFilter)\n    if (parsedRet.success) {\n      return _.mapValues(parsedRet.data, (v, k) => {\n        return {\n          [v.type]: v.filter,\n        }\n      })\n    } else {\n      const parsedRet = agFilter2Schema.safeParse(agFilter)\n      if (parsedRet.success) {\n        const ret: IPrismaFilterSchema = {} as IPrismaFilterSchema\n        for (const k of Object.keys(parsedRet.data)) {\n          const item = parsedRet.data[k]\n          if (item.operator === 'OR') {\n            if (ret.OR == null) {\n              ret.OR = []\n            }\n            for (const cond of item.conditions) {\n              ret.OR.push({\n                [k]: {\n                  [cond.type]: cond.filter,\n                },\n              })\n            }\n          }\n        }\n        return ret\n      } else {\n        return {}\n      }\n    }\n  }\n\n  async toUpdateParam(pathname: string, values: any) {\n    this.logger.debug!(`pathname: ${pathname}, body: ${JSON.stringify(values)}`)\n\n    const matchRet = matchPath(pathname)\n    const { resource, id, resourceSchema } = matchRet[matchRet.length - 1]\n    const schemaCache = await this.schemaService.getSchemaCache()\n\n    this.removeRelationFields(schemaCache, resourceSchema, values)\n    const ret = {\n      resource,\n      param: {\n        where: { id: id },\n        data: values,\n      },\n    }\n    this.logger.debug!(JSON.stringify(ret))\n    return ret\n  }\n\n  // todo: 需要增加 relation name\n  async getAssociationDeleteStrategy(pathname: string) {\n    const matchRet = matchPath(pathname)\n    const { origin, resourceSchema } = matchRet[matchRet.length - 1]\n    const schemaCache = await this.schemaService.getSchemaCache()\n    const theResourceSchema = schemaCache[resourceSchema]\n    if (theResourceSchema.associations == null) {\n      return {}\n    }\n    const ret = theResourceSchema.associations.reduce((acc, cur) => {\n      const assSchema = schemaCache[cur.model_name + 'ResourceSchema']\n      if (assSchema == null) {\n        throw new Error(`${resourceSchema} associated schema ${cur.model_name} is null`)\n      }\n      const relCol = assSchema.columns!.find(\n        ac => ac.column_type === 'reference' && ac.reference!.model_name === toModelName(origin),\n      )\n      if (relCol == null) {\n        throw new Error('Cannot found related column')\n      }\n      if (relCol.reference!['x-onSoftDelete'] === 'Restrict') {\n        acc[cur.model_name] = {\n          'x-onSoftDelete': relCol.reference!['x-onSoftDelete'],\n          name: relCol.name,\n          relatedDisplayName: assSchema.display_name,\n        }\n        return acc\n      }\n      return acc\n    }, {} as any)\n    return ret\n  }\n\n  async toRemoveParam(pathname: string) {\n    const matchRet = matchPath(pathname)\n    const { resource, origin, id, resourceSchema } = matchRet[matchRet.length - 1]\n    const schemaCache = await this.schemaService.getSchemaCache()\n    const theResourceSchema = schemaCache[resourceSchema]\n    let assDisconnect: any = {}\n    let include: any\n    if (theResourceSchema.associations != null) {\n      assDisconnect = theResourceSchema.associations.reduce((acc, cur) => {\n        const assSchema = schemaCache[cur.model_name + 'ResourceSchema']\n        const relCol = assSchema.columns!.find(\n          ac => ac.column_type === 'reference' && ac.reference!.model_name === toModelName(origin),\n        )\n        if (relCol == null) {\n          throw new Error('Cannot found related column')\n        }\n        if (relCol.reference!['x-onSoftDelete'] !== 'Restrict' /* Restrict 已经确保 is_deleted 不需要解除关联 */) {\n          acc[cur.name] = {\n            set: [] /* disconnectAll 模拟 setNull */,\n          }\n          if (include == null) include = {}\n          include[cur.name] = true\n        }\n        return acc\n      }, {} as any)\n    }\n\n    let id2: string | number\n    if (id == null) {\n      throw new Error(`remove ${resource}, id null`)\n    } else {\n      id2 = await this.prismaUtils.parseId(resource, id)\n    }\n    const ret = {\n      resource,\n      param: {\n        where: {\n          id: id2,\n        },\n        data: Object.assign(\n          {\n            isDeleted: true,\n          },\n          assDisconnect,\n        ),\n        include,\n      },\n    }\n    this.logger.debug!(JSON.stringify(ret))\n    return ret\n  }\n\n  mapItemToPrismaFilter(\n    schemaCache: Record<string, Partial<IResourceSchema>>,\n    resourceSchema: Partial<IResourceSchema>,\n    item: any,\n  ) {\n    // 先初步转换\n    const k = Object.keys(item)[0]\n    // https://javascript.plainenglish.io/how-to-rename-object-keys-in-react-javascript-using-lodash-b73fb92ea24d\n    item[k] = _.mapKeys<string, string, string>(item[k], (k, v) => {\n      switch (k) {\n        case 'eq':\n          return 'equals'\n        case 'neq':\n          return 'not'\n        default:\n          return k\n      }\n    })\n\n    item[k] = _.mapValues<string, string, string | number>(item[k], v => {\n      // 得用 schema 判断下，主要就是 string 的 LIKE\n      const kk = k.split('.')\n      let col\n      if (kk.length === 2) {\n        const refCol = resourceSchema.columns!.find(col => {\n          return col.column_type === 'reference' && col.reference!['x-relationField'] === kk[0]\n        })\n        const refSchema = schemaCache[refCol!.reference!.model_name + 'ResourceSchema']\n        col = refSchema.columns!.find(item => item.name === kk[1])\n      } else {\n        col = resourceSchema.columns!.find(item => item.name === k)\n      }\n      if (col && ['string', 'textarea'].indexOf(col.column_type!) > -1) {\n        return v\n      } else if (isLikeNumber(v)) {\n        return Number(v)\n      } else {\n        return v\n      }\n    })\n\n    // 再将 . 改成嵌套（chatGPT 给出的方式）\n    const ret = {}\n    forEach(item, (value, key) => {\n      set(ret, key.replace(/\\./g, '.'), value)\n    })\n    return ret\n  }\n\n  async toCreateParam(pathname: string, values: any) {\n    const matchRet = matchPath(pathname)\n    // console.log(matchRet)\n    const { resource, resourceSchema } = matchRet[matchRet.length - 1]\n    const schemaCache = await this.schemaService.getSchemaCache()\n    this.removeRelationFields(schemaCache, resourceSchema, values)\n    const theResourceSchema = schemaCache[resourceSchema]\n    // console.log(theResourceSchema)\n\n    const uniqueCols = theResourceSchema.columns!.filter(col => {\n      return col.column_type === 'reference' && col.reference!['x-unique']\n    })\n\n    if (uniqueCols.length === 0) {\n      return {\n        action: 'create',\n        resource: resource,\n        param: {\n          data: values,\n        },\n      }\n    } else if (uniqueCols.length > 1) {\n      throw new Error('Not support multiple unique key')\n    } else {\n      const uniqueCol = uniqueCols[0]\n      // console.log(uniqueCol)\n      return {\n        action: 'update',\n        resource: resource,\n        param: {\n          data: values,\n        },\n        'x-unique': uniqueCol,\n      }\n    }\n  }\n\n  removeRelationFields(schemaCache: Record<string, Partial<IResourceSchema>>, resourceSchema: string, values: any) {\n    // todo: 目前是通过显式声明 x-relationField 来删除 put 时候的 reference 值\n    const relationFields: string[] = []\n    const theResourceSchema = schemaCache[resourceSchema]\n    // console.log(theResourceSchema)\n    if (theResourceSchema) {\n      Object.keys(values).forEach((k: string) => {\n        const kProp = theResourceSchema.columns && theResourceSchema.columns.find(col => col.name === k)\n        if (kProp && kProp.column_type === 'reference') {\n          const relationField = kProp.reference?.['x-relationField']\n          if (relationField) {\n            relationFields.push(relationField)\n          }\n        }\n      })\n    }\n    relationFields.forEach(k => {\n      delete values[k]\n    })\n  }\n}\n","import { inject, injectable } from 'inversify'\nimport { toModelName } from '../../utils/matchPath'\nimport { PrismaClientSymbol } from '@flowda/types'\nimport type { LoggerService } from '@nestjs/common'\n\n@injectable()\nexport class PrismaUtils {\n  private readonly logger\n\n  constructor(\n    // todo: prisma 要不要强类型\n    // @inject(PrismaClientSymbol) private prisma: db.PrismaClient,\n    @inject(PrismaClientSymbol) private prisma: any,\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n  ) {\n    this.logger = loggerFactory(PrismaUtils.name)\n  }\n\n  async parseId(resource: string, id: string | number) {\n    const modelName = toModelName(resource)\n    const dmmf = await this.prisma._getDmmf()\n    const idField = dmmf.modelMap[modelName].fields.find((item: any) => item.name === 'id')\n    // this.logger.log(`id: ${id}, type: ${idField.type}`)\n    return idField.type === 'Int' && typeof id !== 'number' ? parseInt(id) : id\n  }\n}\n","import { z } from 'zod'\nimport { inject, injectable } from 'inversify'\nimport type { LoggerService } from '@nestjs/common'\nimport type { SchemaTransformer } from './schemaTransformer'\nimport { CustomZodSchemaSymbol } from '@flowda/types'\nimport { ResourceUISchema } from '@flowda/types'\n\n@injectable()\nexport class SchemaService {\n  private readonly logger\n  private schemaCache?: Record<string, z.infer<typeof ResourceUISchema>>\n\n  constructor(\n    @inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService,\n    @inject('Factory<SchemaTransformer>') private modelSchemaFactory: (z: z.AnyZodObject) => SchemaTransformer,\n    @inject(CustomZodSchemaSymbol) private czt: any,\n  ) {\n    this.logger = loggerFactory(SchemaService.name)\n  }\n\n  getSchema(): Record<string, z.infer<typeof ResourceUISchema>> {\n    console.time('generate schema')\n    const schema = Object.keys(this.czt).reduce((acc: any, k) => {\n      const e = this.czt[k]\n      if (['ZodObject'].indexOf(e.constructor.name) > -1) {\n        const transformer = this.modelSchemaFactory(e)\n        acc[k] = transformer.buildSchema().toSchema(k)\n      } else {\n        this.logger.error('Wrong type', k)\n      }\n      return acc\n    }, {})\n    this.schemaCache = schema\n    console.timeEnd('generate schema')\n    return schema\n  }\n\n  async getSchemaCache(): Promise<Record<string, z.infer<typeof ResourceUISchema>>> {\n    if (!this.schemaCache) {\n      // 重启的话内存里就没有了，可以手动重新获取下\n      this.logger.log(`schemaCache is empty, getSchema again.`)\n      return this.getSchema()\n    } else {\n      return this.schemaCache\n    }\n  }\n}\n","import { z } from 'zod'\nimport { inject, injectable } from 'inversify'\nimport type { LoggerService } from '@nestjs/common'\nimport { SchemaTransformer as NewSchemaTransformer, zodToOpenAPI } from '@flowda/schema'\nimport { modelNameToSchemaName } from '../../utils/matchPath'\n\n@injectable()\nexport class SchemaTransformer {\n  private readonly logger\n  private zodType?: z.AnyZodObject\n  private jsonschema: any\n\n  constructor(@inject('Factory<Logger>') loggerFactory: (name: string) => LoggerService) {\n    this.logger = loggerFactory(SchemaTransformer.name)\n  }\n\n  setZodType(z: z.AnyZodObject) {\n    this.zodType = z\n  }\n\n  buildSchema(): SchemaTransformer {\n    if (!this.zodType) {\n      const errMsg = 'zodType is not initialized'\n      this.logger.error(errMsg)\n      throw new Error(errMsg)\n    }\n    this.jsonschema = zodToOpenAPI(this.zodType)\n    return this\n  }\n\n  toSchema(schemaName: string) {\n    const json = new NewSchemaTransformer().set(this.jsonschema).toJSON()\n    //    ^?\n    if (!json.slug) throw new Error(`no slug, ${JSON.stringify(json)}`)\n    return {\n      ...json,\n      schema_name: schemaName,\n      columns: json.columns\n        ?.filter(f => f.name !== 'isDeleted')\n        .map(col => {\n          return {\n            ...col,\n            // 'x-legacy': undefined, // Theia 使用 x-legacy\n            // 以下是兼容原来\n            ...(col as any)['x-legacy'],\n            prisma:\n              (col as any)?.['x-legacy']?.prisma && (col as any)['x-legacy'].prisma === 'false' ? false : undefined,\n          }\n        }),\n      associations: json.associations?.map(ass => {\n        return {\n          ...ass,\n          schema_name: modelNameToSchemaName(ass.model_name),\n        }\n      }),\n    }\n  }\n}\n","import type { TAgSortSchema } from '@flowda-projects/flowda-shared-types'\n\nexport function convertSortAgToMotor(sort: TAgSortSchema) {\n  return sort[0] != null ? (sort[0].sort === 'asc' ? sort[0].colId : '-' + sort[0].colId) : undefined\n}\n","const levelColorMap: Record<string, string> = {\n  0: '#c0392b', // Red\n  1: '#f39c12', // Yellow\n  3: '#00BCD4', // Cyan\n  4: '#ccc',\n}\n\nfunction style(level: number) {\n  return `\n  background: ${levelColorMap[level]};\n  border-radius: 0.5em;\n  color: white;\n  font-weight: bold;\n  padding: 2px 0.5em;\n`\n}\n\nexport function debug(msg: string) {\n  return [`%c debug `, style(4), '', msg]\n}\n\nexport function info(msg: string) {\n  return [`%c info `, style(3), '', msg]\n}\n\nexport function warn(msg: string) {\n  return [`%c warn `, style(1), '', msg]\n}\n\nexport function error(msg: string) {\n  return [`%c error `, style(0), '', msg]\n}\n","export class CustomError extends Error {\n  public override message\n\n  constructor(code: number, message: string, extra?: any) {\n    super(JSON.stringify({ code: code, message }))\n    this.message = JSON.stringify({ code, message, extra })\n  }\n}\n","import utc from 'dayjs/plugin/utc'\nimport timezone from 'dayjs/plugin/timezone'\nimport advancedFormat from 'dayjs/plugin/advancedFormat'\n\nimport dayjs from 'dayjs'\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\ndayjs.extend(advancedFormat)\n\nexport function getTimeExpire(min: number) {\n  const fmt = dayjs().tz('Asia/Shanghai').add(min, 'minute').format('YYYY-MM-DDTHH:mm:ss+z')\n  const ret = fmt.match(/.*(GMT\\+(\\d))/)\n  if (ret == null) {\n    return ''\n  } else {\n    return ret[0].replace(ret[1], ret[2].padStart(2, '0') + ':00')\n  }\n}\n\nexport function getTimeByDay(day: number): Date {\n  return dayjs().tz('Asia/Shanghai').add(day, 'day').toDate()\n}\n","import * as plur from 'pluralize'\nimport * as _ from 'lodash'\n\nplur.addSingularRule(/data$/i, 'data')\nplur.addPluralRule(/data$/i, 'data')\nplur.addSingularRule(/def$/i, 'def')\nplur.addPluralRule(/def$/i, 'def')\nplur.addSingularRule(/sms$/i, 'sms')\nplur.addPluralRule(/sms$/i, 'sms')\n\n// 兼容用复数表示表，一般不用复数做表名称\nplur.addSingularRule(/ProjectUsers$/i, 'ProjectUsers')\nplur.addPluralRule(/ProjectUsers$/i, 'ProjectUsers')\n\n// s* equipment 不可数\nconst REG = /(([a-z_]+s*)\\/?([A-Za-z0-9-_:]+)?)+/g\n\nconst NUM_REG = /^-?\\d+(\\.\\d+)?$/\n\nexport type TMatchPath = {\n  origin: string\n  resource: string\n  resourceSchema: string\n  id?: string | number\n}\n\n// todo: 暂时没想到更精确的方法，这个应该能覆盖 100%\nexport function isLikeNumber(value: string) {\n  return NUM_REG.test(value)\n}\n\nexport function toModelName(slug: string) {\n  return _.startCase(_.camelCase(plur.singular(slug))).replace(/ /g, '')\n}\n\nexport function toPath(modelName: string) {\n  return plur.plural(_.snakeCase(modelName))\n}\n\n/**\n * @deprecated slug 转成 ResourceSchema 不准确\n * @see modelNameToSchemaName\n * @param slug\n */\nexport function toSchemaName(slug: string) {\n  const p = plur.singular(slug)\n  return toModelName(p) + 'ResourceSchema'\n}\n\nexport function modelNameToSchemaName(modelName: string) {\n  const p = plur.singular(modelName)\n  return p + 'ResourceSchema'\n}\n\nexport function matchPath(path: string): TMatchPath[] {\n  const ret1 = path.match(REG)\n  // console.log(ret1)\n  if (ret1 != null) {\n    const ret2 = ret1.map(item => {\n      const [resource, id] = item.split('/')\n\n      const p = plur.singular(resource)\n      return {\n        resource: _.camelCase(p),\n        resourceSchema: toSchemaName(resource),\n        origin: resource,\n        id: isLikeNumber(id) ? _.toNumber(id) : id,\n      }\n    })\n    return ret2\n  } else {\n    return []\n  }\n}\n","import { IResourceSchema } from '@flowda-projects/flowda-shared-types'\n\nexport function getSchemaByDisplayName(schemaCache: Record<string, IResourceSchema>, displayName: string) {\n  const k = Object.keys(schemaCache).find(k => {\n    return schemaCache[k].display_name === displayName\n  })\n  if (k) {\n    return schemaCache[k]\n  } else {\n    return null\n  }\n}\n","module.exports = require(\"@flowda/schema\");","module.exports = require(\"@flowda/types\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@trpc/client\");","module.exports = require(\"@trpc/server\");","module.exports = require(\"@trpc/server/adapters/express\");","module.exports = require(\"axios\");","module.exports = require(\"consola\");","module.exports = require(\"dayjs\");","module.exports = require(\"dayjs/plugin/advancedFormat\");","module.exports = require(\"dayjs/plugin/timezone\");","module.exports = require(\"dayjs/plugin/utc\");","module.exports = require(\"http-proxy-middleware\");","module.exports = require(\"inversify\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"lodash\");","module.exports = require(\"nestjs-zod\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"pluralize\");","module.exports = require(\"qs\");","module.exports = require(\"radash\");","module.exports = require(\"tslib\");","module.exports = require(\"znv\");","module.exports = require(\"zod\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger } from '@nestjs/common'\nimport { NestFactory } from '@nestjs/core'\n\nimport { AppModule } from './app/app.module'\nimport { FLOWDA_GATEWAY_ENV, TrpcRouter } from '@flowda-projects/flowda-gateway-trpc-server'\nimport { createProxyMiddleware } from 'http-proxy-middleware'\nimport { ExtractJwt } from 'passport-jwt'\nimport type { JwtPayload } from 'jsonwebtoken'\nimport * as jwt from 'jsonwebtoken'\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule)\n\n  app.enableCors()\n  const globalPrefix = 'flowda-gateway-api'\n  app.setGlobalPrefix(globalPrefix)\n\n  const trpc = app.get(TrpcRouter)\n  trpc.applyMiddleware(app, globalPrefix)\n\n  app.use((req, res, next) => {\n    if (req.originalUrl.includes('favicon.ico')) {\n      res.status(204).end()\n    } else if (req.url.indexOf(`/${globalPrefix}/camunda/engine-rest/`) > -1) {\n      const extract = ExtractJwt.fromAuthHeaderAsBearerToken()\n      const bearerToken = extract(req)\n      if (bearerToken) {\n        try {\n          const authed = jwt.verify(bearerToken, FLOWDA_GATEWAY_ENV.ACCESS_TOKEN_SECRET) as JwtPayload\n          if (authed) {\n            next()\n          } else {\n            res.status(401).json({\n              message: '[PROXY] Unauthorized',\n            })\n          }\n        } catch (e) {\n          res.status(401).json({\n            message: '[PROXY] Unauthorized',\n          })\n        }\n      } else {\n        res.status(401).json({\n          message: '[PROXY] Unauthorized',\n        })\n      }\n    } else {\n      next()\n    }\n  })\n\n  // Proxy endpoints\n  app.use(\n    `/${globalPrefix}/camunda/engine-rest`,\n    createProxyMiddleware({\n      logLevel: 'debug',\n      target: FLOWDA_GATEWAY_ENV.C7_REST_URL,\n      changeOrigin: true,\n      onProxyReq(proxyReq) {\n        // camunda rest api 需要设置请求头，否则报错 npe\n        proxyReq.setHeader('Content-Type', 'application/json')\n        proxyReq.setHeader('Accept', 'application/json')\n      },\n      pathRewrite: {\n        [`^/${globalPrefix}/camunda/engine-rest`]: '/engine-rest',\n      },\n    }),\n  )\n\n  const port = process.env.PORT || 3310\n  await app.listen(port)\n  Logger.log(`🚀 Application is running on: http://localhost:${port}/${globalPrefix}`)\n}\n\nbootstrap()\n"],"names":["AppController","constructor","hi","Get","Controller","AppModule","Module","imports","ServicesModule","controllers","providers","provide","APP_PIPE","useClass","ZodValidationPipe","console","log","Object","keys","FLOWDA_GATEWAY_ENV","forEach","k","container","load","flowdaGatewayTrpcServerModule","bind","toFactory","context","name","Logger","servicesContainer","Container","loadModule","services","getServices","Global","exports","axiosApiInstance","create","interceptors","request","use","config","url","info","path","qstr","split","method","JSON","stringify","qs","parse","data","error","Promise","reject","response","parseEnv","process","env","ACCESS_TOKEN_SECRET","z","string","min","FLOWDA_URL","CMS_ADMIN_URL","YONGCHENG_URL","TIANBAO_URL","C7_REST_URL","ContainerModule","AxiosInstanceSymbol","toConstantValue","GatewayRegisterSymbol","to","GatewayRegister","inSingletonScope","onActivation","injectable","register","id","trpcEndpoint","TrpcService","toSelf","ContextFactory","HelloRouter","bindService","TrpcRouter","flowdaTrpc","createTRPCProxyClient","links","httpBatchLink","headers","transformer","input","serialize","object","deserialize","output","loggerFactory","_services","this","logger","serv","Array","isArray","s","registerItem","find","warn","push","getTrpc","serviceId","Error","inject","trpc","axios","gatewayRegister","helloRouter","router","validate","procedure","username","password","mutation","user","mutate","createRoot","any","query","opts","visible","children","map","v","rest","selected","expanded","resolveChildren","protectedProcedure","pid","tenantName","parentId","menuData","menu","getMenuByTenantName","convertMenuToTheia","getResourceSchema","getResourceInputSchema","ctx","service","tenant","theSchema","result","schemaName","namespace","getResourceData","getResourceDataInputSchema","getSchema","uniqParam","findUniqueResourceDataInputSchema","safeParse","manyParam","findManyResourceDataInputSchema","success","slug","pageSize","current","sort","convertSortAgToMotor","filterModel","encodeURIComponent","putResourceData","putResourceDataInputSchema","value","updatedValue","postResourceData","postResourceDataInputSchema","removeResourceData","removeResourceDataInputSchema","mapMenuItemToTheiaMenu","menuItem","uri","length","undefined","toSchemaName","traverse","tree","visit","child","item","ret","createContext","diag","contextFactory","appRouter","hello","applyMiddleware","app","globalPrefix","trpcExpress","createExpressMiddleware","initTRPC","errorFormatter","at","processAt","req","authorization","payload","verifyAccessToken","jwt","userRet","findUnique","ctxUserSchema","e","TRPCError","code","next","mergeRouters","trim","PrismaSchemaServiceSymbol","Symbol","for","SchemaTransformerSymbol","PrismaUtilsSymbol","DataServiceSymbol","LegacySchemaServiceSymbol","SchemaServiceSymbol","DynamicTableSchemaTransformerSymbol","FlowdaTrpcClientSymbol","APISymbol","URLSymbol","ENVSymbol","K3CloudIdentifyInfoSymbol","COSSymbol","SmsClientSymbol","WechatOAuthSymbol","DynamicTableDataServiceSymbol","DynamicTableDefServiceSymbol","MenuServiceSymbol","WechatpayNodeV3Symbol","WechatpayNodeV3FactorySymbol","EPlan","Serial_Min","Serial_Max","schema","AugmentedZodDto","isZodDto","extendZod","wmsCustomerSchema","customerCode","openapi","description","customerName","masterId","contact","contactInfo","status","union","literal","organizationId","wmsGoodsSchema","goodsCode","goodsName","goodsTypeId","goodsAttribute","specification","measurementUnit","goodsPackageId","batchId","goodsInspectMode","number","width","high","volume","grossWeight","netWeight","minStock","maxStock","maxStorageTime","isAuto","choppedQuantity","choppedLayer","goodsPicture","fSeitBrand","fSeitCasePackage","fSeitMsl","fRefCost","fSeitMpn","wmsGoodsMslSchema","mslCode","wmsGoodsUtilSchema","unitId","wmsStockSchema","wmsSupplierSchema","supplierCode","supplierName","remark","wmsGoodsTypeSchema","goodsTypeCode","goodsTypeName","wmsWarehousingItemSchema","FBillNo","FDate","FDocumentStatus","FMaterialId","FQty","FLot","FStockId","wmsOEMReturnSchema","array","wmsOEMWarehousingSchema","wmsOtherWarehousingSchema","extend","FSupplierId","wmsProduceReturnWarehousingSchema","FAPPQty","wmsProduceWarehousingSchema","omit","FMustQty","FRealQty","wmsPurchaseWarehousingSchema","wmsSubReturnWarehousingSchema","wmsPRDFeedMtrlSchema","FActualQty","wmsUpdateWarehousingAuditToErpSchema","orderType","sourceOrderCode","wmsOEMAddOutWarehouseSchema","wmsOEMOutWarehouseSchema","wmsOtherOutWarehouseSchema","wmsProduceOutWarehouseSchema","wmsPurchaseReturnOutWarehouseSchema","FRMREALQTY","wmsSaleOutWarehouseSchema","FCustomerID","wcsNoticeMouldIntoStockSchema","noticeId","example","goodsList","containerCode","title","wcsNoticeMouldOutStockSchema","startLoc","optional","wmsMouldGetMouldTypeSchema","loc","type","wmsMouldGetMouldTypeOutput1Schema","boolean","endLoc","wmsMouldGetMouldTypeOutput2Schema","message","wmsMouldFinishSchema","wcsNoticeMaterialSendSchema","wcsNoticeProductIntoStockSchema","wcsNoticePlasticIntoStockSchema","instructionType","wcsNoticeProduceReturnSchema","wcsNoticeProductOutStockSchema","callbackNoticePlasticIntoStockInputSchema","okResponse","notOkResponse","materialCode","documentCode","srmGetDeliverDocListByCode","srmGetDeliverDocListByCodeOkRes","materialList","apsCheckMaterialRequirement","oaRequestMaterialNoExceedRequirement","note","oaNotPass","reason","sapCheckMinMax","qty","sapCheckMinMaxRes","max","oaRequestMaxStockApprove","todo","sapGetQualityAssurance","getTodoPreReceiptInventoryFormRes","getQmsStatusByDocumentCodeType1Res","getQmsStatusByDocumentCodeType2Res","getQmsStatusByDocumentCodeType3Res","getQmsStatusByDocumentCodeType4Res","getMaterialReturnRequestRes","isPlastic","selectOptionSchema","label","resourceAssociationSchema","foreign_key","model_name","primary_key","display_name","schema_name","resourceColumnSchema","access_type","enum","column_type","prisma","format","select_options","reference","display_column","validators","required","resourceSchema","is_dynamic","nullable","display_primary_key","searchable_columns","columns","associations","__jsonschema","agFilterInnerSchema","filterType","filter","agFilterInner2Schema","operator","conditions","agFilter1Schema","record","agFilter2Schema","agFilterSchema","or","_ref","agSortSchema","colId","prismaFilterSchema","OR","registerSchema","tenantId","RegisterDto","createZodDto","accountExistsSchema","AccountExistsSchemaDto","validateSchema","validateSchemaDto","getTenantByNameSchema","GetTenantByNameSchemaDto","findByUnionIdAndTenantIdSchema","unionid","FindByUnionIdAndTenantIdSchemaDto","registerByUnionIdSchema","RegisterByUnionIdSchemaDto","resetPasswordSchema","userId","_resetPasswordSchema","tid","resetPasswordSchemaDto","verifyMobileSchema","uid","mobile","verifyMobileSchemaDto","tenantJwtPayloadSchema","userJwtPayloadSchema","userJwtPayloadSchemaDto","customerPreSignupSchema","email","customerPreSignupSchemaDto","customerPreSignupTenantJwtPayloadSchemaDto","merge","customerSignupSchema","verifyCode","customerSignupSchemaDto","customerSignupTenantJwtPayloadSchemaDto","wxGetAccessTokenRes","access_token","expires_in","refresh_token","openid","scope","create_at","wxGetUserRes","nickname","sex","headimgurl","language","city","province","country","privilege","wxValidateUserSchema","wxValidateUserTenantJwtPayloadSchemaDto","generateRecoveryCodeSchema","generateRecoveryCodeSchemaDto","generateRecoveryCodeTenantJwtSchemaDto","GenerateRecoveryCodeDto","appId","resetPasswordWithRecoveryCodeSchema","recoveryCode","resetPasswordWithRecoveryCodeSchemaDto","resetPasswordWithRecoveryCodeTenantJwtSchemaDto","ResetPasswordDto","productCreateManyItemSchema","price","productType","amount","plan","extendedDescriptionData","restricted","fileSize","storeDuration","hasAds","tecSupport","SdkProductCreateManyItemDto","updatePaidProfileSchema","product","validityPeriod","updateFreeProfileSchema","wxPayQuerySchema","trade_state","transaction_id","payer","fwhLoginSchema","fwhLoginTenantJwtPayloadSchemaDto","amountUpdateSchema","action","count","amountUpdateSchemaDto","amountUpdateUserJwtPayloadSchemaDto","createOrderSchema","productId","SdkCreateOrderDto","createOrderUserJwtPayloadSchemaDto","transactionsNativeSchema","orderId","desc","total","transactionsNativeSchemaDto","createOrderJSAPISchema","SdkCreateOrderInJSAPIDto","createQuickOrderSchema","anonymousCustomerToken","SdkCreateQuickOrderDto","createQuickOrderTenantJWTPayloadSchemaDto","appCreateV4Schema","displayName","appCreateV4SchemaDto","validateTenantSchema","validateTenantSchemaDto","validateByEmailSchema","validateByEmailSchemaDto","_resetTenantPasswordSchema","_resetTenantPasswordSchemaDto","customerExtendDataSchema","biz","icp","phone","address","partial","companyName","customerExtendDataSchemaDto","kanzhunDetailSchema","kanzhunDetailSchemaDto","kanzhunItemSchema","detail","kanzhunItemSchemaDto","kanzhunDataSchema","date","sendSmsVerifyCodeSchema","sendSmsVerifyCodeSchemaDto","refreshTokenSchema","rt","refreshTokenSchemaDto","loginSchema","loginSchemaDto","getMenuByTenantNameSchema","getMenuByTenantNameSchemaDto","getMenuSchema","getMenuSchemaDto","baseMenuItemSchema","menuItemSchema","lazy","menuItemSchemaDto","deploySiteToCosSchema","siteId","deploySiteToCosSchemaDto","StartSchema","processDefKey","businessKey","StartSchemaDto","GetTaskFormSchema","taskId","GetTaskFormSchemaDto","getTasksSchema","tenantIdIn","flowdaSharedModule","bindServiceSymbol","DataService","LegacySchemaService","SchemaService","PrismaSchemaService","PrismaUtils","SchemaTransformer","inTransientScope","get","setZodType","DynamicTableSchemaTransformer","prismaSchemaService","reqUser","pathname","findParamRet","toFindParam","_","isEmpty","resource","param","isDeleted","$transaction","where","pagination","put","values","updateParamRet","toUpdateParam","prevRet","select","mapValues","auditChanges","reduce","acc","update","auditInfo","auditId","auditType","version","debug","audits","post","createParamRet","toCreateParam","ref","refId","refModelName","lowerFirst","include","remove","assDelStrategy","getAssociationDeleteStrategy","toRemoveParam","ass","findMany","relatedDisplayName","PrismaClientSymbol","transform","cols","dynamicTableDefColumns","c","assign","extendedSchema","toModelName","toPath","modelSchemaFactory","czt","time","indexOf","buildSchema","toSchema","schemaCache","timeEnd","getSchemaCache","CustomZodSchemaSymbol","unknown","describe","prismaUtils","schemaService","toPrismaSelect","fields","theResourceSchema","fieldsArr","cur","parsedPath","matchPath","resolve","last","parent","lastResource","lastResourceSchema","assoRet","origin","camel","queryFields","inc","refSelect","getRefSelect","selectRet","parseId","convertQueryToPrismaFilter","orderBy","convertToOrderBy","skip","Number","take","pResource","omitBy","isUndefined","createdAt","slice","includeRef","refColumn","col","refSchema","displayCols","disCol","relationField","display_column2","convertAgFilterModelToPrismaFilter","andIdx","findIndex","orIdx","mapItemToPrismaFilter","q","contains","agFilter","parsedRet","cond","matchRet","removeRelationFields","assSchema","relCol","ac","id2","assDisconnect","set","mapKeys","kk","refCol","isLikeNumber","key","replace","uniqueCols","uniqueCol","relationFields","kProp","modelName","_getDmmf","modelMap","parseInt","zodType","errMsg","jsonschema","zodToOpenAPI","json","toJSON","f","modelNameToSchemaName","levelColorMap","style","level","msg","CustomError","extra","super","tz","add","match","padStart","day","toDate","plur","addSingularRule","addPluralRule","REG","NUM_REG","test","startCase","camelCase","singular","plural","snakeCase","ret1","p","toNumber","module","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","NestFactory","enableCors","setGlobalPrefix","res","originalUrl","includes","end","bearerToken","ExtractJwt","fromAuthHeaderAsBearerToken","extract","verify","createProxyMiddleware","logLevel","target","changeOrigin","onProxyReq","proxyReq","setHeader","pathRewrite","port","PORT","listen","bootstrap"],"sourceRoot":""}